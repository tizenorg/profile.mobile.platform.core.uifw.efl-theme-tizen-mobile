group { name: "elm/progressbar/vertical/default";
   images {
      image: "whitetheme/progress_slider_bg_v.png" COMP;
      image: "whitetheme/progress_slider_bar_v.png" COMP;
   }
   parts {
      part { name: "elm.background.progressbar";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
            rel1 {
               relative: 0.0 0.0;
               offset: 0 0;
            }
            rel2 {
               relative: 1.0 1.0;
               offset: -1 -1;
            }
         }
      }
      part { name: "elm.swallow.bar";
         type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
            min: PROGRESSBAR_BAR_SIZE_INC 1;
            max: PROGRESSBAR_BAR_SIZE_INC 9999;
            align: 0.5 1.0;
            rel1 {
               to_y: "elm.text";
               relative: 0.0 1.0;
            }
            rel2 {
               to_y: "elm.text.box";
               relative: 1.0 0.0;
            }
         }
      }
      part { name: "elm.swallow.content";
         type: SWALLOW;
         description { state: "default" 0.0;
            visible: 0;
            align: 0.5 0.0;
            rel1 {
               to_x: "elm.swallow.bar";
            }
            rel2 {
               relative: 1.0 0.0;
               to_x: "elm.swallow.bar";
            }
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            aspect: 1.0 1.0;
            aspect_preference: HORIZONTAL;
         }
      }
      part { name: "elm.text";
         type: TEXT;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            visible: 0;
            fixed: 1 1;
            align: 0.5 0.0;
            rel1 {
               to_y: "elm.swallow.content";
               relative: 0.5 1.0;
               offset: 0 -1;
            }
            rel2 {
               to_y: "elm.swallow.content";
               relative: 0.5 1.0;
               offset: -1 -1;
            }
            color: PROGRESSBAR_TEXT_COLOR_INC;
            text {
               font: "SLP:style=Medium";
               size: PROGRESSBAR_TITLE_FONT_SIZE_INC;
               min: 0 0;
               align: 0.5 0.0;
            }
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            text.min: 1 1;
         }
      }
      part { name: "background";
         mouse_events: 0;
         clip_to: "elm.background.progressbar";
         description { state: "default" 0.0;
            rel1 {
               to: "elm.swallow.bar";
               relative: 0.0 0.0;
            }
            rel2 {
               to: "elm.swallow.bar";
               relative: 1.0 1.0;
               offset: -1 -1;
            }
            image {
               normal: "whitetheme/progress_slider_bg_v.png";
               border: PROGRESSBAR_BG_BORDER_INC;
            }
         }
      }
      part { name: "elm.progress.progressbar";
         mouse_events: 0;
         clip_to: "elm.background.progressbar";
         description { state: "default" 0.0;
            min: 0 0;
            fixed: 1 1;
            rel1 {
               to: "elm.swallow.bar";
               relative: 0.0 0.0;
            }
            rel2 {
               to_x: "elm.swallow.bar";
               to_y: "elm.cur.progressbar";
               offset: -1 -1;
            }
            image {
               normal: "whitetheme/progress_slider_bar_v.png";
               border: PROGRESSBAR_BG_BORDER_INC;
            }
         }
         description { state: "invert" 0.0;
            inherit: "default" 0.0;
            rel1 {
               to_x: "elm.swallow.bar";
               to_y: "elm.cur.progressbar";
            }
            rel2 {
               to: "elm.swallow.bar";
               relative: 1.0 1.0;
            }
         }
         description { state: "state_begin" 0.0;
            inherit: "default" 0.0;
            rel1 {
               to: "elm.swallow.bar";
               relative: 0.0 0.0;
            }
            rel2 {
               to: "elm.swallow.bar";
               relative: 1.0 0.1;
            }
         }
         description { state: "state_end" 0.0;
            inherit: "default" 0.0;
            rel1 {
               to: "elm.swallow.bar";
               relative: 0.0 0.9;
            }
            rel2 {
               to: "elm.swallow.bar";
               relative: 1.0 1.0;
            }
         }
      }
      part { name: "elm.cur.progressbar";
         mouse_events: 0;
         dragable {
            confine: "background";
            x: 0 0 0;
            y: 1 1 1;
         }
         description { state: "default" 0.0;
            min: 28 14;
            fixed: 1 1;
            visible: 0;
            rel1 {
               to: "background";
               relative: 0 0;
            }
            rel2.to: "background";
         }
      }
      part { name: "elm.text.box";
         mouse_events: 0;
         type: RECT;
         description { state: "default" 0.0;
            visible: 0;
            rel1 {
               to: "elm.text.status";
            }
            rel2 {
               to: "elm.text.status";
            }
            color: 255 255 255 0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "elm.text.status";
         type: TEXT;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            visible: 0;
            fixed: 1 1;
            align: 0.5 1.0;
            rel1 {
               relative: 0.0 1.0;
               offset: 1 0;
            }
            rel2 {
               relative: 1.0 1.0;
               offset: -1 0;
            }
            color: 0 0 0 255;
            text {
               font: "SLP:style=Medium";
               size: PROGRESSBAR_TITLE_FONT_SIZE_INC;
               min: 0 0;
               align: 0.5 0.0;
            }
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            fixed: 1 1;
            visible: 1;
            text.min: 1 1;
         }
      }
   }
   programs {
      program { name: "label_show";
         signal: "elm,state,text,visible";
         source: "elm";
         action:  STATE_SET "visible" 0.0;
         target: "elm.text";
      }
      program { name: "label_hide";
         signal: "elm,state,text,hidden";
         source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "elm.text";
      }
      program { name: "icon_show";
         signal: "elm,state,icon,visible";
         source: "elm";
         action:  STATE_SET "visible" 0.0;
         target: "elm.swallow.content";
      }
      program { name: "icon_hide";
         signal: "elm,state,icon,hidden";
         source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "elm.swallow.content";
      }
      program { name: "units_show";
         signal: "elm,state,units,visible";
         source: "elm";
         action:  STATE_SET "visible" 0.0;
         target: "elm.text.status";
         target: "elm.text.box";
      }
      program { name: "units_hide";
         signal: "elm,state,units,hidden";
         source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "elm.text.status";
         target: "elm.text.box";
      }
      program { name: "slide_to_end";
         action:  STATE_SET "state_end" 0.0;
         transition: LINEAR 0.5;
         target: "elm.progress.progressbar";
         after: "slide_to_begin";
      }
      program { name: "slide_to_begin";
         action:  STATE_SET "state_begin" 0.0;
         target: "elm.progress.progressbar";
         transition: LINEAR 0.5;
         after: "slide_to_end";
      }
      program { name: "start_pulse";
         signal: "elm,state,pulse,start";
         source: "elm";
         action: STATE_SET "state_begin" 0.0;
         target: "elm.progress.progressbar";
         after: "slide_to_end";
      }
      program { name: "stop_pulse";
         signal: "elm,state,pulse,stop";
         source: "elm";
         action: ACTION_STOP;
         target: "slide_to_begin";
         target: "slide_to_end";
         target: "start_pulse";
         after: "state_pulse";
      }
      program { name: "state_pulse";
         signal: "elm,state,pulse";
         source: "elm";
         action: STATE_SET "state_begin" 0.0;
         target: "elm.progress.progressbar";
         after: "units_hide";
      }
      program { name: "state_fraction";
         signal: "elm,state,fraction";
         source: "elm";
         action: ACTION_STOP;
         target: "slide_to_begin";
         target: "slide_to_end";
         target: "start_pulse";
         action: STATE_SET "default" 0.0;
         target: "elm.progress.progressbar";
      }
      program { name: "set_invert_on";
         signal: "elm,state,inverted,on";
         source: "elm";
         action:  STATE_SET "invert" 0.0;
         target: "elm.progress.progressbar";
         target: "elm.cur.progressbar";
      }
      program { name: "set_invert_off";
         signal: "elm,state,inverted,off";
         source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "elm.progress.progressbar";
         target: "elm.cur.progressbar";
      }
   }
}

group { name: "elm/progressbar/horizontal/wheel";
   images {
      image: "whitetheme/progress_wheel_0.png" COMP;
      image: "whitetheme/progress_wheel_1.png" COMP;
      image: "whitetheme/progress_wheel_2.png" COMP;
      image: "whitetheme/progress_wheel_3.png" COMP;
      image: "whitetheme/progress_wheel_4.png" COMP;
      image: "whitetheme/progress_wheel_5.png" COMP;
      image: "whitetheme/progress_wheel_6.png" COMP;
      image: "whitetheme/progress_wheel_7.png" COMP;
      image: "whitetheme/progress_wheel_8.png" COMP;
      image: "whitetheme/progress_wheel_9.png" COMP;
      image: "whitetheme/progress_wheel_10.png" COMP;
      image: "whitetheme/progress_wheel_11.png" COMP;
      image: "whitetheme/progress_wheel_12.png" COMP;
      image: "whitetheme/progress_wheel_13.png" COMP;
      image: "whitetheme/progress_wheel_14.png" COMP;
      image: "whitetheme/progress_wheel_15.png" COMP;
      image: "whitetheme/progress_wheel_16.png" COMP;
      image: "whitetheme/progress_wheel_17.png" COMP;
      image: "whitetheme/progress_wheel_18.png" COMP;
      image: "whitetheme/progress_wheel_19.png" COMP;
      image: "whitetheme/progress_wheel_20.png" COMP;
      image: "whitetheme/progress_wheel_21.png" COMP;
      image: "whitetheme/progress_wheel_22.png" COMP;
      image: "whitetheme/progress_wheel_23.png" COMP;
      image: "whitetheme/progress_wheel_24.png" COMP;
      image: "whitetheme/progress_wheel_25.png" COMP;
      image: "whitetheme/progress_wheel_26.png" COMP;
      image: "whitetheme/progress_wheel_27.png" COMP;
      image: "whitetheme/progress_wheel_28.png" COMP;
      image: "whitetheme/progress_wheel_29.png" COMP;
   }
   parts {
      part { name: "elm.background.progressbar";
         mouse_events: 0;
         type: RECT;
         description { state: "default" 0.0;
         }
      }
      part { name: "elm.swallow.bar";
         mouse_events: 0;
         type: SWALLOW;
         description { state: "default" 0.0;
            min: 0 0;
            max: 0 0;
            visible: 0;
         }
      }
      part { name: "elm.swallow.content";
         type: SWALLOW;
         description { state: "default" 0.0;
            min: 0 0;
            max: 0 0;
            visible: 0;
         }
      }
      part { name: "background";
         scale: 1;
         mouse_events: 0;
         clip_to: "elm.background.progressbar";
         description {
            state: "default" 0.0;
            min: PROGRESSBAR_WHEEL_SIZE_INC PROGRESSBAR_WHEEL_SIZE_INC;
            max: PROGRESSBAR_WHEEL_SIZE_INC PROGRESSBAR_WHEEL_SIZE_INC;
            visible: 1;
            aspect: 1.0 1.0;
            aspect_preference: BOTH;
            image { normal: "whitetheme/progress_wheel_0.png";
            }
         }
         description { state: "pulse" 0.0;
            inherit: "default" 0.0;
            image {
               normal: "whitetheme/progress_wheel_0.png";
               tween:  "whitetheme/progress_wheel_1.png";
               tween:  "whitetheme/progress_wheel_2.png";
               tween:  "whitetheme/progress_wheel_3.png";
               tween:  "whitetheme/progress_wheel_4.png";
               tween:  "whitetheme/progress_wheel_5.png";
               tween:  "whitetheme/progress_wheel_6.png";
               tween:  "whitetheme/progress_wheel_7.png";
               tween:  "whitetheme/progress_wheel_8.png";
               tween:  "whitetheme/progress_wheel_9.png";
               tween:  "whitetheme/progress_wheel_10.png";
               tween:  "whitetheme/progress_wheel_11.png";
               tween:  "whitetheme/progress_wheel_12.png";
               tween:  "whitetheme/progress_wheel_13.png";
               tween:  "whitetheme/progress_wheel_14.png";
               tween:  "whitetheme/progress_wheel_15.png";
               tween:  "whitetheme/progress_wheel_16.png";
               tween:  "whitetheme/progress_wheel_17.png";
               tween:  "whitetheme/progress_wheel_18.png";
               tween:  "whitetheme/progress_wheel_19.png";
               tween:  "whitetheme/progress_wheel_20.png";
               tween:  "whitetheme/progress_wheel_21.png";
               tween:  "whitetheme/progress_wheel_22.png";
               tween:  "whitetheme/progress_wheel_23.png";
               tween:  "whitetheme/progress_wheel_24.png";
               tween:  "whitetheme/progress_wheel_25.png";
               tween:  "whitetheme/progress_wheel_26.png";
               tween:  "whitetheme/progress_wheel_27.png";
               tween:  "whitetheme/progress_wheel_28.png";
               tween:  "whitetheme/progress_wheel_29.png";
               //border: 7 7 7 7;
            }
         }
      }
   }
   programs {
      program { name: "start_pulse";
         signal: "elm,state,pulse,start";
         source: "elm";
         action: STATE_SET "pulse" 0.0;
         target: "background";
         transition: LINEAR 1.5;
         after: "start_pulse";
      }
      program { name: "stop_pulse";
         signal: "elm,state,pulse,stop";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "background";
      }
   }
}
