group { name: "elm/menu/item/default";
   images {
      image: "whitetheme/menu_btn_nor.png" COMP;
      image: "whitetheme/menu_btn_press.png" COMP;
   }
   script {
      public menu_text_visible; //0:hide (default), 1:visible
      public menu_disable; //0:enable, 1:disable
   }
   parts {
      part { name: "item_image";
         scale: 1;
         description { state: "default" 0.0;
            visible: 0;
            image {
               normal: "whitetheme/menu_btn_nor.png";
               border: MENU_BTN_BORDER_INC;
               border_scale: 1;
            }
         }
         description { state: "visible" 0.0;
            visible: 1;
            image {
               normal: "whitetheme/menu_btn_nor.png";
               border: MENU_BTN_BORDER_INC;
               border_scale: 1;
            }
         }
         description { state: "clicked" 0.0;
            visible: 1;
            image {
               normal: "whitetheme/menu_btn_press.png";
               border: MENU_BTN_BORDER_INC;
               border_scale: 1;
            }
         }
         description { state: "disabled" 0.0;
            inherit:  "default" 0.0;
         }
      }
      part { name: "elm.swallow.content";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            visible: 1;
            align: 0.0 0.5;
            min: 0 0;
            rel1 {
               to_x: "elm.padding.text.left";
               relative: 1.0 0.0;
            }
            rel2.relative: 0.0 1.0;
         }
      }
      part { name: "elm.padding.text.right";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            align : 1 0;
            min: MENU_PADDING_TEXT_WIDTH_INC MENU_PADDING_TEXT_HEIGHT_INC;
            max: MENU_PADDING_TEXT_WIDTH_INC MENU_PADDING_TEXT_HEIGHT_INC;
            fixed: 1 1;
            rel1 {
               relative: 1.0 0.0;
            }
            rel2 {
               relative: 1.0 0.0;
            }
         }
      }
      part { name: "elm.padding.text.left";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            align : 0 0;
            min: MENU_PADDING_TEXT_WIDTH_INC MENU_PADDING_TEXT_HEIGHT_INC;
            max: MENU_PADDING_TEXT_WIDTH_INC MENU_PADDING_TEXT_HEIGHT_INC;
            fixed: 1 1;
            rel1 {
               relative: 0.0 0.0;
            }
            rel2 {
               relative: 0.0 0.0;
            }
         }
      }
      part { name: "elm.text";
         type: TEXT;
         mouse_events:  0;
         scale: 1;
         description { state: "default" 0.0;
            visible: 0;
            rel1 {
               to_x: "elm.swallow.content";
               relative: 1.0 0.0;
            }
            rel2 {
               to_x: "elm.padding.text.right";
               relative: 0.0 1.0;
            }
            color: MENU_TEXT_COLOR_INC;
            text {
               font: "SLP:style=Medium";
               size:     MENU_TEXT_SIZE_INC;
               min:      1 1;
               align:    0.5 0.5;
               text_class: "menu_item";
            }
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            text.min: 1 1;
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            inherit: "visible" 0.0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 63;
         }
         description { state: "disabled_visible" 0.0;
            inherit: "default" 0.0;
            inherit: "visible" 0.0;
            color: 0 0 0 63;
         }
      }
      part { name: "over";
         type: RECT;
         mouse_events: 1;
         repeat_events: 1;
         description { state: "default" 0.0;
            color: 255 255 255 0;
         }
      }
      part { name: "disabler";
         type: RECT;
         description { state: "default" 0.0;
            color: 0 0 0 0;
            visible: 0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
   }
   programs {
      program { name:   "item_mouse_in";
         signal: "mouse,in";
         source: "over";
         action: SIGNAL_EMIT "elm,action,activate" "";
         after: "item_mouse_in1";
      }
      program { name:   "item_mouse_in1";
         action : STATE_SET "visible" 0.0;
         target: "item_image";
         //transition: DECELERATE 0.5;
      }
      program { name:   "item_mouse_out";
         signal: "mouse,out";
         source: "over";
         action: SIGNAL_EMIT "elm,action,inactivate" "";
         after: "item_mouse_out1";
      }
      program { name:   "item_mouse_out1";
         action: STATE_SET "default" 0.0;
         target: "item_image";
         //transition: DECELERATE 0.5;
      }
      program { name:   "visible_text";
         action: STATE_SET "visible" 0.0;
         target: "elm.text";
         transition: DECELERATE 0.5;
      }
      program { name:   "item_unclick";
         signal: "mouse,up,1";
         source: "over";
         action: STATE_SET "visible" 0.0;
         target: "item_image";
      }
      program { name:   "item_click2";
         signal: "mouse,down,1";
         source: "over";
         action: STATE_SET "clicked" 0.0;
         target: "item_image";
      }
      program { name:   "item_unclick2";
         signal: "mouse,up,1";
         source: "over";
         action: STATE_SET "default" 0.0;
         //transition: DECELERATE 0.5;
         target: "item_image";
      }
      program { name:   "item_unclick3";
         signal: "mouse,up,1";
         source: "over";
         action: SIGNAL_EMIT "elm,action,click" "";
      }
      program { name: "text_show";
         signal: "elm,state,text,visible";
         source: "elm";
         script {
            set_int(menu_text_visible, 1);
            set_state(PART:"elm.text", "visible", 0.0);
         }
      }
      program { name: "text_hide";
         signal: "elm,state,text,hidden";
         source: "elm";
         script {
            set_int(menu_text_visible, 0);
            set_state(PART:"elm.text", "default", 0.0);
         }
      }
      program { name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "item_image";
         target: "over";
         target: "disabler";
         after: "disable_text";
      }
      program { name: "disable_text";
         script {
            new v;
            v = get_int(menu_text_visible);
            if (v==1)
            set_state(PART:"elm.text", "disabled_visible", 0.0);
            else if (v==0)
            set_state(PART:"elm.text", "disabled", 0.0);
            set_int(menu_disable, 1);
         }
      }
      program { name: "item_select";
         signal: "elm,state,selected";
         source: "elm";
         after: "item_mouse_in1";
      }
      program { name: "item_unselect";
         signal: "elm,state,unselected";
         source: "elm";
         after: "item_mouse_out1";
      }
      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "item_image";
         target: "over";
         target: "disabler";
         after: "enable_text";
      }
      program { name: "enable_text";
         script {
            new v;
            v = get_int(menu_text_visible);
            if (v==1)
            set_state(PART:"elm.text", "visible", 0.0);
            else  if (v==0)
            set_state(PART:"elm.text", "default", 0.0);
            set_int(menu_disable, 0);
         }
      }
   }
}

group { name: "elm/menu/item_with_submenu/default";
   images {
      image: "whitetheme/menu_btn_nor.png" COMP;
      image: "whitetheme/menu_btn_press.png" COMP;
      image: "whitetheme/menu_arrow_left.png" COMP;
      image: "whitetheme/menu_arrow_right.png" COMP;
   }
   script {
      public menu_text_visible; //0:hide (default), 1:visible
      public menu_disable; //0:enable, 1:disable
   }
   parts {
      part { name: "item_image";
         scale: 1;
         description { state: "default" 0.0;
            visible: 0;
            image {
               normal: "whitetheme/menu_btn_nor.png";
               border: MENU_BTN_BORDER_INC;
               border_scale: 1;
            }
         }
         description { state: "visible" 0.0;
            visible: 1;
            image {
               normal: "whitetheme/menu_btn_nor.png";
               border: MENU_BTN_BORDER_INC;
               border_scale: 1;
            }
         }
         description { state: "clicked" 0.0;
            visible: 1;
            image {
               normal: "whitetheme/menu_btn_press.png";
               border: MENU_BTN_BORDER_INC;
               border_scale: 1;
            }
         }
         description { state: "disabled" 0.0;
            inherit:  "default" 0.0;
         }
      }
      part { name: "elm.padding.arrow.right";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            align : 1 0;
            min: MENU_PADDING_TEXT_WIDTH_INC MENU_PADDING_TEXT_HEIGHT_INC;
            max: MENU_PADDING_TEXT_WIDTH_INC MENU_PADDING_TEXT_HEIGHT_INC;
            fixed: 1 1;
            rel1 {
               relative: 1.0 0.0;
            }
            rel2 {
               relative: 1.0 0.0;
            }
         }
      }
      part { name: "arrow";
         mouse_events: 1;
         description { state: "default" 0.0;
            align: 1.0 0.5;
            fixed: 1 1;
            min: MENU_ARROW_WIDTH_INC MENU_ARROW_HEIGHT_INC;
            max: MENU_ARROW_WIDTH_INC MENU_ARROW_HEIGHT_INC;
            rel1 {
               to_x: "elm.padding.arrow.right";
               relative: 0.0 0.5;
            }
            rel2 {
               to_x: "elm.padding.arrow.right";
               relative: 0.0 0.5;
            }
            image {
               normal: "whitetheme/menu_arrow_right.png";
            }
         }
         description { state: "rtl" 0.0;
            inherit: "default" 0.0;
            image.normal: "whitetheme/menu_arrow_left.png";
         }
      }
      part { name: "elm.swallow.content";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            visible: 1;
            align: 0.0 0.5;
            rel1 {
               to_x: "elm.padding.text.left";
               relative: 1.0 0.0;
            }
            rel2.relative: 0.0 1.0;
            min: 0 0;
         }
      }
      part { name: "elm.padding.text.right";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            align : 1 0;
            min: MENU_PADDING_TEXT_WIDTH_INC MENU_PADDING_TEXT_HEIGHT_INC;
            max: MENU_PADDING_TEXT_WIDTH_INC MENU_PADDING_TEXT_HEIGHT_INC;
            fixed: 1 1;
            rel1 {
               to_x: "arrow";
               relative: 0.0 0.0;
            }
            rel2 {
               to_x: "arrow";
               relative: 0.0 0.0;
            }
         }
      }
      part { name: "elm.padding.text.left";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            align : 0 0;
            min: MENU_PADDING_TEXT_WIDTH_INC MENU_PADDING_TEXT_HEIGHT_INC;
            max: MENU_PADDING_TEXT_WIDTH_INC MENU_PADDING_TEXT_HEIGHT_INC;
            fixed: 1 1;
            rel1 {
               relative: 0.0 0.0;
            }
            rel2 {
               relative: 0.0 0.0;
            }
         }
      }
      part { name: "elm.text";
         type: TEXT;
         mouse_events:  0;
         scale: 1;
         description { state: "default" 0.0;
            visible: 0;
            rel1 {
               to_x: "elm.swallow.content";
               relative: 1.0 0.0;
            }
            rel2 {
               to_x: "elm.padding.text.right";
               relative: 0.0 1.0;
            }
            color: MENU_TEXT_COLOR_INC;
            text {
               font: "SLP:style=Medium";
               size:     MENU_TEXT_SIZE_INC;
               min:      1 1;
               align:    0.5 0.5;
               text_class: "menu_item";
            }
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            text.min: 1 1;
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            inherit: "visible" 0.0;
            color: 254 254 254 255;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 63;
         }
         description { state: "disabled_visible" 0.0;
            inherit: "default" 0.0;
            inherit: "visible" 0.0;
            color: 0 0 0 63;
         }
      }
      part { name: "over";
         type: RECT;
         mouse_events: 1;
         repeat_events: 1;
         description { state: "default" 0.0;
            color: 255 255 255 0;
         }
      }
      part { name: "disabler";
         type: RECT;
         description { state: "default" 0.0;
            color: 0 0 0 0;
            visible: 0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
   }
   programs {
      program { name:   "item_mouse_in";
         signal: "mouse,in";
         source: "over";
         action: SIGNAL_EMIT "elm,action,activate" "";
         after: "item_mouse_in1";
      }
      program { name:   "item_mouse_in1";
         action : STATE_SET "visible" 0.0;
         target: "item_image";
         //transition: DECELERATE 0.5;
      }
      //
      program { name:   "item_mouse_out";
         signal: "mouse,out";
         source: "over";
         after: "item_mouse_out1";
      }
      program { name:   "item_mouse_out1";
         action: STATE_SET "default" 0.0;
         target: "item_image";
         //transition: DECELERATE 0.5;
      }
      program { name:   "visible_text";
         action: STATE_SET "visible" 0.0;
         target: "elm.text";
         transition: DECELERATE 0.5;
      }
      //
      program { name:   "item_unclick";
         signal: "mouse,up,1";
         source: "over";
         action: STATE_SET "visible" 0.0;
         target: "item_image";
      }
      program { name:   "item_click2";
         signal: "mouse,down,1";
         source: "over";
         action: STATE_SET "clicked" 0.0;
         target: "item_image";
      }
      program { name:   "item_unclick2";
         signal: "mouse,up,1";
         source: "over";
         action: STATE_SET "default" 0.0;
         //transition: DECELERATE 0.5;
         target: "item_image";
      }
      program { name:   "item_unclick3";
         signal: "mouse,up,1";
         source: "over";
         action: SIGNAL_EMIT "elm,action,click" "";
      }
      program { name:   "menu_open";
         signal: "mouse,in";
         source: "over";
         action: SIGNAL_EMIT "elm,action,open" "";
      }
      program { name: "text_show";
         signal: "elm,state,text,visible";
         source: "elm";
         script {
            set_int(menu_text_visible, 1);
            set_state(PART:"elm.text", "visible", 0.0);
         }
      }
      program { name: "text_hide";
         signal: "elm,state,text,hidden";
         source: "elm";
         script {
            set_int(menu_text_visible, 0);
            set_state(PART:"elm.text", "default", 0.0);
         }
      }
      program { name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "item_image";
         target: "over";
         target: "disabler";
         after: "disable_text";
      }
      program { name: "disable_text";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.text", st, 30, vl);
            if (!strcmp(st, "visible"))
            set_state(PART:"elm.text", "disabled_visible", 0.0);
            else if (!strcmp(st, "default"))
            set_state(PART:"elm.text", "disabled", 0.0);
         }
      }
      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "item_image";
         target: "over";
         target: "disabler";
         after: "enable_text";
      }
      program { name: "enable_text";
         script {
            new v;
            v = get_int(menu_text_visible);
            if (v==1)
            set_state(PART:"elm.text", "visible", 0.0);
            else  if (v==0)
            set_state(PART:"elm.text", "default", 0.0);
            set_int(menu_disable, 0);
         }
      }
      program { name: "to_rtl";
         signal: "edje,state,rtl";
         source: "edje";
         action: STATE_SET "rtl" 0.0;
         target: "arrow";
      }
      program { name: "to_ltr";
         signal: "edje,state,ltr";
         source: "edje";
         action: STATE_SET "default" 0.0;
         target: "arrow";
      }
   }
}

group { name: "elm/menu/separator/default";
   images {
      image: "whitetheme/menu_separator.png" COMP;
   }
   parts {
      part { name: "elm.padding.text.right";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            align : 1 0;
            min: MENU_PADDING_SEPARATOR_SIZE_INC 2;
            fixed: 1 1;
            rel1 {
               relative: 1.0 0.0;
            }
            rel2 {
               relative: 1.0 0.0;
            }
         }
      }
      part { name: "elm.padding.text.left";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            align : 0 0;
            min: MENU_PADDING_SEPARATOR_SIZE_INC 2;
            fixed: 1 1;
            rel1 {
               relative: 0.0 0.0;
            }
            rel2 {
               relative: 0.0 0.0;
            }
         }
      }
      part { name: "separator"; // separator group
         description { state: "default" 0.0;
            min: 1 2;
            align: 0 0;
            fixed: 1 1;
            image {
               normal: "whitetheme/menu_separator.png";
            }
            rel1 {
               to_x: "elm.padding.text.left";
               relative: 1.0 0.0;
            }
            rel2 {
               to_x: "elm.padding.text.right";
               relative: 0.0 0.0;
            }
         }
      }
   }
}
