/*
 * Copyright (c) 2010 Samsung Electronics Co., Ltd All Rights Reserved
 *
 * BSD 2-Clause License (http://www.opensource.org/licenses/bsd-license.php)
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *   1. Redistributions of source code must retain the above copyright notice, this
 *      list of conditions and the following disclaimer.
 *   2. Redistributions in binary form must reproduce the above copyright notice,
 *      this list of conditions and the following disclaimer in the documentation
 *      and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*popup widget specific notify style*/
group { name: "elm/notify/bottom/popup";
   alias: "elm/notify/bottom/transparent";
   parts {
      part { name: "base";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            color: 0 0 0 0;
            rel1.relative: 0.0 0.0;
            rel2.relative: 1.0 1.0;
         }
      }
     part { name: "elm.swallow.content";
        type: SWALLOW;
        scale: 1;
        description { state: "default" 0.0;
           rel1.to: "base";
           rel2.to: "base";
           align: 0.5 0.0;
           fixed: 1 1;
        }
        description { state: "end" 0.0;
           rel1.to: "base";
           rel2.to: "base";
           align: 0.5 1.0;
           fixed: 1 1;
        }
     }
     part { name: "block";
        scale: 1;
        type: RECT;
        description { state: "default" 0.0;
           rel1.to: "elm.swallow.content";
           rel2.to: "elm.swallow.content";
           visible: 1;
           color: 0 0 0 0;
        }
        description { state: "end" 0.0;
           inherit: "default" 0.0;
           visible: 0;
        }
     }
   }
   programs {
      program { name: "load";
         signal: "load";
         source: "";
         action: STATE_SET "end" 0.0;
         target: "elm.swallow.content";
      }
      program { name: "show";
         signal: "elm,action,show";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.swallow.content";
      }
      program { name: "show_1";
         signal: "show";
         action: STATE_SET "default" 0.0;
         target: "elm.swallow.content";
         after: "end2";
      }
      program { name: "end2";
         action: STATE_SET "end" 0.0;
         transition: SIN_FAC 0.33 1.7;
         target: "elm.swallow.content";
         target: "block";
         after: "showfinished";
      }
      program { name: "showfinished";
         action: SIGNAL_EMIT "elm,action,show,finished" "";
      }
      program { name: "hide";
         signal: "elm,action,hide";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.swallow.content";
      }
      program { name: "hide_effect";
         signal: "elm,state,hide";
         source: "elm";
         transition: SIN_FAC 0.33 1.7;
         action: STATE_SET "default" 0.0;
         target: "elm.swallow.content";
         after: "hide_effect_done";
      }
      program { name: "hide_effect_done";
         action: SIGNAL_EMIT "elm,state,hide,finished" "elm";
      }
   }
}

group { name: "elm/notify/center/default";
   parts {
      part { name: "base";
         type: SPACER;
         description { state: "default" 0.0;
            rel1.relative: 0.0 0.0;
            rel2.relative: 1.0 1.0;
         }
      }
      part { name: "elm.swallow.content";
         type: SWALLOW;
         description { state: "default" 0.0;
            rel1.to: "base";
            rel2.to: "base";
         }
      }
   }
}

group { name: "elm/notify/center/theme_bg";
   images {
      image: "core_theme_bg_01.png" COMP;
   }

   parts {
      part { name: "base";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            color: 0 0 0 0;
            rel1.relative: 0.0 0.0;
            rel2.relative: 1.0 1.0;
         }
      }
      part { name: "mesh_bg";
         scale: 1;
         clip_to: "clip";
         description { state: "default" 0.0;
            image.normal: "core_theme_bg_01.png";
         }
      }
      part { name: "elm.swallow.content";
        type: SWALLOW;
        scale: 1;
        description { state: "default" 0.0;
           rel1.to: "base";
           rel2.to: "base";
           align: 0.5 0.5;
        }
      }
      part { name: "clip";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
           max: NOTIFY_THEME_BG_CLIP_MAX_INC;
           rel1.to: "elm.swallow.content";
           rel2.to: "elm.swallow.content";
         }
      }
   }
}



group { name: "elm/notify/bottom/toast";
   data.item: "hide_finished_signal" "on";
   parts {
      part { name: "base";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            color: 0 0 0 0;
            rel1.relative: 0.0 0.0;
            rel2.relative: 1.0 1.0;
         }
      }
     part { name: "elm.swallow.content";
        type: SWALLOW;
        scale: 1;
        description { state: "default" 0.0;
           rel1.to: "base";
           rel2.to: "base";
           align: 0.5 1.0;
           fixed: 1 1;
        }
     }
     part { name: "block";
        scale: 1;
        type: RECT;
        description { state: "default" 0.0;
           rel1.to: "elm.swallow.content";
           rel2.to: "elm.swallow.content";
           fixed: 1 1;
           visible: 1;
           color: 0 0 0 0;
        }
        description { state: "end" 0.0;
           inherit: "default" 0.0;
           visible: 0;
        }
     }
   }
   programs {
      program { name: "load";
         signal: "load";
         source: "";
         action: STATE_SET "default" 0.0;
         target: "elm.swallow.content";
      }
      program { name: "show";
         signal: "elm,action,show";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.swallow.content";
      }
      program { name: "show_1";
         signal: "show";
         action: STATE_SET "end" 0.0;
         target: "block";
         after: "showfinished";
      }
      program { name: "showfinished";
         action: SIGNAL_EMIT "elm,action,show,finished" "";
      }
      program { name: "hide";
         signal: "elm,action,hide";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.swallow.content";
      }
      program { name: "hide_effect";
         signal: "elm,state,hide";
         source: "elm";
         action: STATE_SET "default" 0.0;
         transition: LINEAR 0.1;
         target: "elm.swallow.content";
         after: "hide_effect_done";
      }
      program { name: "hide_effect_done";
         action: SIGNAL_EMIT "elm,state,hide,finished" "elm";
      }
   }
}

group { name: "elm/notify/bottom/theme_bg";
   inherit: "elm/notify/bottom/popup";

   images {
      image: "core_theme_bg_01.png" COMP;
   }

   parts {
      part { name: "mesh_bg";
         scale: 1;
         insert_after: "base";
         clip_to: "clip";
         description { state: "default" 0.0;
            min: NOTIFY_THEME_BG_DEFAULT_MIN_INC;
            fixed: 1 1;
            align: 0.5 1.0;
            image.normal: "core_theme_bg_01.png";
         }
      }
      part { name: "clip";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
           max: NOTIFY_THEME_BG_CLIP_MAX_INC;
           rel1.to: "elm.swallow.content";
           rel2.to: "elm.swallow.content";
         }
      }
   }
}

group { name: "elm/notify/block_events/popup";
   alias: "elm/notify/block_events/theme_bg";

   images {
      image: "core_theme_bg_dim.png" COMP;
   }
   parts {
      part { name: "block_events_color";
         type: IMAGE;
         scale: 1;
         description { state: "default" 0.0;
            image.normal: "core_theme_bg_dim.png";
            color: 0 0 0 0;
         }
         description { state: "show" 0.0;
            image.normal: "core_theme_bg_dim.png";
            color: 255 255 255 255;
         }
         description { state: "clicked" 0.0;
            image.normal: "core_theme_bg_dim.png";
            color: 255 255 255 255;
         }
      }
   }
   programs {
      program { name: "show";
         signal: "elm,action,show";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "block_events_color";
       }
      program { name: "show1";
         signal: "show";
         action: STATE_SET "show" 0.0;
         transition: SIN_FAC 0.33 1.7;
         target: "block_events_color";
      }
      program { name: "hide_effect";
         signal: "elm,state,hide";
         source: "elm";
         action: STATE_SET "default" 0.0;
         transition: SIN_FAC 0.33 1.7;
         target: "block_events_color";
         after: "hide_effect_done";
      }
      program { name: "hide_effect_done";
         action: SIGNAL_EMIT "elm,state,hide,finished" "elm";
      }
      program { name: "block_clicked";
         signal: "mouse,clicked,1";
         source: "block_events_color";
         action: SIGNAL_EMIT "elm,action,click" "elm";
         after: "deeper_block_color";
      }
      program {
         name: "deeper_block_color";
         action: STATE_SET "clicked" 0.0;
         target: "block_events_color";
         transition: LINEAR 0.2;
         after: "default_block_color";
      }
      program {
         name: "default_block_color";
         action: STATE_SET "show" 0.0;
         target: "block_events_color";
         transition: LINEAR 0.2;
      }
   }
}

group { name: "elm/notify/block_events/transparent";
   alias: "elm/notify/block_events/toast";
   parts {
      part { name: "block_events";
         type: RECT;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
   }
   programs {
      program { name: "block_clicked";
         signal: "mouse,clicked,1";
         source: "block_events";
         action: SIGNAL_EMIT "elm,action,click" "elm";
      }
   }
}

group { name: "elm/notify/block_events/center_popup";
   parts {
      part { name: "block_events_color";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            color_class: "transparent";
         }
         description { state: "show" 0.0;
            inherit: "default" 0.0;
            color: 7 7 7 102; /*(Changeable UI) color_class: "B015";*/
         }
         description { state: "clicked" 0.0;
            inherit: "default" 0.0;
            color: 7 7 7 102; /*(Changeable UI) color_class: "B015";*/
         }
      }
   }
   programs {
      program { name: "show";
         signal: "elm,action,show";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "block_events_color";
       }
      program { name: "show1";
         signal: "show";
         action: STATE_SET "show" 0.0;
         transition: SIN_FAC 0.166 0.5;
         target: "block_events_color";
      }
      program { name: "block_clicked";
         signal: "mouse,clicked,1";
         source: "block_events_color";
         action: SIGNAL_EMIT "elm,action,click" "elm";
         after: "deeper_block_color";
      }
      program {
         name: "deeper_block_color";
         action: STATE_SET "clicked" 0.0;
         target: "block_events_color";
         transition: LINEAR 0.2;
         after: "default_block_color";
      }
      program {
         name: "default_block_color";
         action: STATE_SET "show" 0.0;
         target: "block_events_color";
         transition: LINEAR 0.2;
      }
   }
}

group { name: "elm/label/base/popup/default";
   alias: "elm/label/base/popup/center_popup";
   alias: "elm/label/base/popup/transparent";
   alias: "elm/label/base/popup/theme_bg";
   styles {
      style { name: "popup_desc_style";
         base: "font=Tizen:style=Regular font_size="POPUP_DESCRIPTION_DEFAULT_TEXT_FONT_SIZE_INC" align=left color=#070707FF wrap=mixed text_class=label";
         //(Changeable UI) base: "font=Tizen:style=Regular font_size="POPUP_DESCRIPTION_DEFAULT_TEXT_FONT_SIZE_INC" align=left color=#FFFFFF color_class=T123 wrap=mixed text_class=T123";
         tag: "br" "\n";
         tag: "ps" "ps";
         tag: "whitecolor" "+ color=#ffffff";
         tag: "tab" "\t";
      }
   }
   parts {
      part { name: "pad_t";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            align: 0.5 0.0;
            min: 0 POPUP_CONTENT_DEFAULT_PADDING_TOP_MIN_INC;
            max: 0 POPUP_CONTENT_DEFAULT_PADDING_TOP_MIN_INC;
            fixed: 0 1;
            visible: 0;
            rel1 {
               relative: 1.0 0.0;
               to_x: "pad_l";
            }
            rel2 {
               relative: 0.0 0.0;
               to_x: "pad_r";
            }
         }
      }
      part { name: "pad_l";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            min: POPUP_CONTENT_DEFAULT_PADDING_LEFT_MIN_INC 0;
            max: POPUP_CONTENT_DEFAULT_PADDING_LEFT_MIN_INC 0;
            fixed: 1 0;
            visible: 0;
            rel2.relative: 0.0 1.0;
            align: 0.0 0.0;
         }
      }
      part { name: "pad_r";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            min: POPUP_CONTENT_DEFAULT_PADDING_RIGHT_MIN_INC 0;
            max: POPUP_CONTENT_DEFAULT_PADDING_RIGHT_MIN_INC 0;
            fixed: 1 0;
            visible: 0;
            rel1.relative: 1.0 0.0;
            align: 1.0 0.0;
         }
      }
      part { name: "elm.text";
         type: TEXTBLOCK;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 0;
            rel1 {
               relative: 1.0 1.0;
               to_x: "pad_l";
               to_y: "pad_t";
            }
            rel2 {
               relative: 0.0 0.0;
               to_x: "pad_r";
               to_y: "pad_b";
            }
            text {
               style: "popup_desc_style";
               min: 0 1;
               max: 0 1;
            }
         }
      }
      part { name: "pad_b";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            align: 0.5 1.0;
            min: 0 POPUP_CONTENT_DEFAULT_PADDING_BOTTOM_MIN_INC;
            max: 0 POPUP_CONTENT_DEFAULT_PADDING_BOTTOM_MIN_INC;
            fixed: 0 1;
            visible: 0;
            rel1 {
               relative: 0.0 1.0;
               to_x: "pad_l";
            }
            rel2.to_x: "pad_r";
         }
      }
   }
}

group { name: "elm/label/base/popup/toast";
   styles {
      style { name: "popup_toast_style";
         base: "font=Tizen:style=Regular font_size="POPUP_TOAST_BASE_DEFAULT_TEXT_FONT_SIZE_INC" align=center color=#070707FF wrap=mixed text_class=label";
         //(Changeable UI) base: "font=Tizen:style=Regular font_size="POPUP_BASE_DEFAULT_TEXT_FONT_SIZE_INC" color=#FFFFFF align=center color_class=T1221 wrap=mixed text_class=T1221";
         tag:  "br" "\n";
         tag:  "tab" "\t";
      }
   }
   parts {
      part { name: "multiline_width";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            min: POPUP_TOAST_TEXT_MULTI_LINE_MIN_INC POPUP_TOAST_TEXT_MIN_HEIGHT_INC;
            fixed: 1 1;
         }
      }
      part { name: "elm.text";
         type: TEXTBLOCK;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            min: POPUP_TOAST_TEXT_MIN_WIDTH_INC POPUP_TOAST_TEXT_MIN_HEIGHT_INC;
            max: POPUP_TOAST_TEXT_MAX_WIDTH_INC POPUP_TOAST_TEXT_MAX_HEIGHT_INC;
            text {
               style: "popup_toast_style";
               min: 1 1;
               max: 0 1;
            }
         }
         description { state: "multiline" 0.0;
            inherit: "default" 0.0;
            min: POPUP_TOAST_TEXT_MULTI_LINE_MIN_INC POPUP_TOAST_TEXT_MIN_HEIGHT_INC;
            text.min: 0 1;
         }
      }
   }
    programs {
      program { name: "multiline";
         signal: "elm,state,text,visible";
         source: "elm";
         script {
            new tx1, ty1, tw1, th1, tx2, ty2, tw2, th2;
            get_geometry(PART:"elm.text", tx1, ty1, tw1, th1);
            get_geometry(PART:"multiline_width", tx2, ty2, tw2, th2);
            if (tw1 >= tw2)
               set_state(PART:"elm.text", "multiline", 0.0);
            else
               set_state(PART:"elm.text", "default", 0.0);
         }
      }
   }
}

group { name: "elm/popup/base/default";
   alias: "elm/popup/base/transparent";
   data {
      item: "focus_highlight" "on";
      item: "default_orient" "2"; //top, center:1 bottom:2
      item: "title_height" POPUP_TITLE_AREA_HEIGHT;
      item: "popup_outside_pad" POPUP_OUTSIDE_PADDING;
   }
   styles {
      style { name: "popup_title_style";
         base: "font=Tizen:style=Condensed align=center font_size="POPUP_BASE_DEFAULT_TEXT_FONT_SIZE_INC" color=#3DB9CCFF ellipsis=1.0 text_class=tizen";
      }
      style { name: "popup_title_sub_style";
         base: "font=Tizen:style=Condensed align=center font_size="POPUP_TITLE_SUB_TEXT_FONT_SIZE_INC" color=#3DB9CCFF ellipsis=1.0 text_class=tizen";
      }
      style { name: "popup_subtitle_style";
         base: "font=Tizen:style=Condensed align=center font_size="POPUP_SUBTITLE_TEXT_FONT_SIZE_INC" color=#3DB9CCFF ellipsis=1.0 text_class=tizen";
      }
   }
   parts {
      part { name: "base";
         scale: 1;
         type: RECT;
         description { state: "default" 0.0;
            min: POPUP_BASE_DEFAULT_BASE_DEFAULT_MIN_INC;
            max: POPUP_BASE_DEFAULT_BASE_DEFAULT_MAX_INC;
         }
         description { state: "landscape" 0.0;
            inherit: "default" 0.0;
            min: POPUP_BASE_DEFAULT_BASE_LANDSCAPE_MIN_INC;
            max: POPUP_BASE_DEFAULT_BASE_LANDSCAPE_MAX_INC;
         }
      }
      part { name: "bg";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "base";
            rel2.to: "base";
            color : 249 249 249 255;
         }
      }
      part { name: "access.outline";
         type: RECT;
         repeat_events: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1.to: "base";
            rel2.to: "base";
            color: 0 0 0 0;
         }
      }
      part { name: "elm.bg.title";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            min: 0 0;
            fixed: 1 1;
            align: 0.5 0.0;
            rel1.to: "base";
            rel2.to: "base";
            rel2.relative: 1.0 0.0;
            color : 249 249 249 255;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            min: POPUP_BASE_DEFAULT_TITLE_DEFAULT_MIN_INC;
         }
         description { state: "subtitle_visible" 0.0;
            inherit: "default" 0.0;
            min: POPUP_BASE_DEFAULT_TITLE_SUB_DEFAULT_MIN_INC;
         }
      }
      part { name: "title_left_top_padding";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            align: 0.0 0.0;
            rel1.to: "elm.bg.title";
            fixed: 1 1;
            min: POPUP_TITLE_LEFT_PADDING POPUP_TITLE_TOP_PADDING;
            max: POPUP_TITLE_LEFT_PADDING POPUP_TITLE_TOP_PADDING;
         }
         description { state: "subtitle_visible" 0.0;
            inherit: "default" 0.0;
            min: POPUP_TITLE_LEFT_PADDING POPUP_TITLE_TOP_SUB_PADDING;
            max: POPUP_TITLE_LEFT_PADDING POPUP_TITLE_TOP_SUB_PADDING;
         }
      }
      part { name: "title_right_bottom_padding";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            align: 1.0 1.0;
            rel2.to: "elm.bg.title";
            fixed: 1 1;
            min: POPUP_TITLE_RIGHT_PADDING POPUP_TITLE_BOTTOM_PADDING;
            max: POPUP_TITLE_RIGHT_PADDING POPUP_TITLE_BOTTOM_PADDING;
         }
         description { state: "subtitle_visible" 0.0;
            inherit: "default" 0.0;
            min: POPUP_TITLE_RIGHT_PADDING POPUP_TITLE_BOTTOM_SUB_PADDING;
            max: POPUP_TITLE_RIGHT_PADDING POPUP_TITLE_BOTTOM_SUB_PADDING;
         }
      }
      part { name: "elm.text.title";
         type: TEXTBLOCK;
         scale:1;
         description { state: "default" 0.0;
            fixed: 1 1;
            text.style: "popup_title_style";
            rel1 {
               relative: 1.0 1.0;
               to: "title_left_top_padding";
            }
            rel2 {
               relative: 0.0 0.0;
               to: "title_right_bottom_padding";
            }
         }
         description { state: "subtitle_visible" 0.0;
            inherit: "default" 0.0;
            text.style: "popup_title_sub_style";
            rel2 {
               relative: 1.0 0.0;
               to: "elm.text.subtitle";
            }
         }
      }
      part { name: "elm.text.subtitle";
         type: TEXTBLOCK;
         scale: 1;
         description { state: "default" 0.0;
            min: 0 POPUP_SUBTITLE_HEIGHT;
            max: -1 POPUP_SUBTITLE_HEIGHT;
            text.style: "popup_subtitle_style";
            rel1 {
               relative: 1.0 0.0;
               to_x: "title_left_top_padding";
               to_y: "title_right_bottom_padding";
            }
            rel2 {
               relative: 0.0 0.0;
               to: "title_right_bottom_padding";
            }
            align: 0.5 1.0;
            fixed: 1 1;
            visible: 0;
         }
         description { state: "subtitle_visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "access.title";
         type: RECT;
         repeat_events: 1;
         description { state: "default" 0.0;
            rel1.to: "elm.bg.title";
            rel2.to: "elm.bg.title";
            color: 0 0 0 0;
         }
      }
      part { name: "elm.swallow.content";
         type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 0;
            rel1.to: "base";
            rel2.to: "base";
         }
         description { state: "show_title_area" 0.0;
            inherit: "default" 0.0;
            rel1 {
               relative: 0.0 1.0;
               to_x: "base";
               to_y: "elm.bg.title";
            }
            rel2.to: "base";
         }
         description { state: "show_action_area" 0.0;
            inherit: "default" 0.0;
            rel1.to: "base";
            rel2 {
               relative: 1.0 0.0;
               to_x: "base";
               to_y: "elm.swallow.action_area.bg";
            }
         }
         description { state: "show_action_title_area" 0.0;
            inherit: "default" 0.0;
            rel1 {
               relative: 0.0 1.0;
               to_x: "base";
               to_y: "elm.bg.title";
            }
            rel2 {
               relative: 1.0 0.0;
               to_x: "base";
               to_y: "elm.swallow.action_area.bg";
            }
         }
      }
      part { name: "access.body";
         type: RECT;
         repeat_events: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1.to: "elm.swallow.content";
            rel2.to: "elm.swallow.content";
            color: 0 0 0 0;
         }
      }
      part { name: "elm.swallow.action_area.bg";
         type: RECT;
         scale : 1;
         description { state: "default" 0.0;
            fixed : 1 1;
            align: 0.5 1.0;
            visible: 0;
            rel1 {
               relative: 0.0 1.0;
               to: "base";
            }
            rel2.to: "base";
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            min: POPUP_BASE_DEFAULT_BUTTON_BG_DEFAULT_MIN_INC;
            visible: 1;
            color : 249 249 249 255;
         }
      }
      part { name: "elm.swallow.action_area";
         type: SWALLOW;
         scale : 1;
         description { state: "default" 0.0;
            rel1.to: "elm.swallow.action_area.bg";
            rel2.to: "elm.swallow.action_area.bg";
         }
      }
   }
   programs {
      program { name: "show_subtitle";
         signal: "elm,state,subtitle,text,visible";
         source: "elm";
         action: STATE_SET "subtitle_visible" 0.0;
         target: "title_left_top_padding";
         target: "title_right_bottom_padding";
         target: "elm.bg.title";
         target: "elm.text.title";
         target: "elm.text.subtitle";
      }
      program { name: "hide_subtitle";
         signal: "elm,state,subtitle,text,hidden";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.text.title";
         target: "elm.text.subtitle";
      }
      program { name: show_title_area;
         signal: "elm,state,title_area,visible";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.swallow.action_area.bg", st, 30, vl);
            if (!strcmp(st, "visible"))
              set_state(PART:"elm.swallow.content", "show_action_title_area", 0.0);
            else
              set_state(PART:"elm.swallow.content", "show_title_area", 0.0);
            set_state(PART:"elm.bg.title", "visible", 0.0);
         }
      }
      program { name: hide_title_area;
         signal: "elm,state,title_area,hidden";
         source: "elm";
         action: STATE_SET "default" 0.0;
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.swallow.action_area.bg", st, 30, vl);
            if ((!strcmp(st, "visible")) || (!strcmp(st, "landscape_visible")))
              set_state(PART:"elm.swallow.content", "show_action_area", 0.0);
            else
              set_state(PART:"elm.swallow.content", "default", 0.0);
            set_state(PART:"elm.bg.title", "default", 0.0);
         }
      }
      program { name: show_action_area;
         signal: "elm,state,action_area,visible";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.bg.title", st, 30, vl);
            if ((!strcmp(st, "visible")))
              set_state(PART:"elm.swallow.content", "show_action_title_area", 0.0);
            else
              set_state(PART:"elm.swallow.content", "show_action_area", 0.0);
            set_state(PART:"elm.swallow.action_area.bg", "visible", 0.0);
         }
      }
      program { name: hide_action_area;
         signal: "elm,state,action_area,hidden";
         source: "elm";
         action: STATE_SET "default" 0.0;
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.bg.title", st, 30, vl);
            if ((!strcmp(st, "visible")))
              set_state(PART:"elm.swallow.content", "show_title_area", 0.0);
            else
              set_state(PART:"elm.swallow.content", "default", 0.0);
            set_state(PART:"elm.swallow.action_area.bg", "default", 0.0);
         }
      }
      program { name: "change_to_landscape";
         action: STATE_SET "landscape" 0.0;
         target: "base";
         after: "orientation_change";
      }
      program { name: "orientation_change";
         action: SIGNAL_EMIT "elm,state,orientation,changed" "";
      }
      program { name: "change_to_portrait";
         action: STATE_SET "default" 0.0;
         target: "base";
         after: "orientation_change";
      }
      program { name: "landscape_mode";
         source: "elm";
         signal: "elm,state,orient,90";
         after: "change_to_landscape";
      }
      program { name: "landscape_mode2";
         source: "elm";
         signal: "elm,state,orient,270";
         after: "change_to_landscape";
      }
      program { name: "portrait_mode";
         source: "elm";
         signal: "elm,state,orient,0";
         after: "change_to_portrait";
      }
      program { name: "portrait_mode2";
         source: "elm";
         signal: "elm,state,orient,180";
         after: "change_to_portrait";
      }
   } /* end of programs */
}

group { name: "elm/popup/content/default";
   alias: "elm/popup/content/transparent";
   data.item: "content_area_width" POPUP_CONTENT_AREA_LANDSCAPE_WIDTH_INC;
   parts{
      part { name:"elm.swallow.content";
         type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
            min: POPUP_CONTENT_AREA_DEFAULT_MIN_INC;
         }
         description { state: "landscape" 0.0;
            min: POPUP_CONTENT_AREA_LANDSCAPE_MIN_INC;
         }
      }
   }
   programs {
      program { name: "orientation_change";
         action: SIGNAL_EMIT "elm,state,orientation,changed" "";
      }
      program { name: "landscape_mode";
         source: "elm";
         signal: "elm,state,orient,90";
         action: STATE_SET "landscape" 0.0;
         target: "elm.swallow.content";
         after: "orientation_change";
      }
      program { name: "landscape_mode2";
         source: "elm";
         signal: "elm,state,orient,270";
         action: STATE_SET "landscape" 0.0;
         target: "elm.swallow.content";
         after: "orientation_change";
      }
      program { name: "portrait_mode";
         source: "elm";
         signal: "elm,state,orient,0";
         action: STATE_SET "default" 0.0;
         target: "elm.swallow.content";
         after: "orientation_change";
      }
      program { name: "portrait_mode2";
         source: "elm";
         signal: "elm,state,orient,180";
         action: STATE_SET "default" 0.0;
         target: "elm.swallow.content";
         after: "orientation_change";
      }
   }
}

group { name: "elm/popup/content/toast";
   parts{
      part { name:"elm.swallow.content";
         type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
         }
      }
   }
}

group { name: "elm/popup/buttons1/default";
   alias: "elm/popup/buttons1/transparent";
   data.item: "action_area_height" POPUP_BUTTON_DEFAULT_ACTION_AREA_HEIGHT;
   parts{
      part { name: "left_pad_btn";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            min: POPUP_BUTTON1_DEFAULT_PADDING_LEFT_RIGHT_WIDTH_INC POPUP_BUTTON1_DEFAULT_HEIGHT_INC;
            max: POPUP_BUTTON1_DEFAULT_PADDING_LEFT_RIGHT_WIDTH_INC POPUP_BUTTON1_DEFAULT_HEIGHT_INC;
            fixed: 1 1;
            align: 0 0.5;
            rel1.relative: 0.0 0.0;
         }
      }
      part { name: "right_pad_btn";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            min: POPUP_BUTTON1_DEFAULT_PADDING_LEFT_RIGHT_WIDTH_INC POPUP_BUTTON1_DEFAULT_HEIGHT_INC;
            max: POPUP_BUTTON1_DEFAULT_PADDING_LEFT_RIGHT_WIDTH_INC POPUP_BUTTON1_DEFAULT_HEIGHT_INC;
            fixed: 1 1;
            align: 1 0.5;
            rel2.relative: 1.0 1.0;
         }
      }
      part{ name:"actionbtn1";
         type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1 {
               relative: 1.0 0.0;
               to: "left_pad_btn";
            }
            rel2 {
               relative: 0.0 1.0;
               to: "right_pad_btn";
            }
         }
      }
   }
}

group { name: "elm/popup/buttons2/default";
   alias: "elm/popup/buttons2/transparent";
   data.item: "action_area_height" POPUP_BUTTON_DEFAULT_ACTION_AREA_HEIGHT;
   parts{
      part { name: "left_pad_btn";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            min: POPUP_BUTTON2_DEFAULT_PADDING_LEFT_RIGHT_WIDTH_INC POPUP_BUTTON2_DEFAULT_HEIGHT_INC;
            max: POPUP_BUTTON2_DEFAULT_PADDING_LEFT_RIGHT_WIDTH_INC POPUP_BUTTON2_DEFAULT_HEIGHT_INC;
            fixed: 1 1;
            align: 0 0.5;
            rel1.relative: 0.0 0.0;
         }
      }
      part { name: "right_pad_btn";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            min: POPUP_BUTTON2_DEFAULT_PADDING_LEFT_RIGHT_WIDTH_INC POPUP_BUTTON2_DEFAULT_HEIGHT_INC;
            max: POPUP_BUTTON2_DEFAULT_PADDING_LEFT_RIGHT_WIDTH_INC POPUP_BUTTON2_DEFAULT_HEIGHT_INC;
            fixed: 1 1;
            align: 1 0.5;
            rel2.relative: 1.0 1.0;
         }
      }
      part { name:"actionbtn1";
         type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            align: 1.0 0.5;
            rel1 {
               relative: 1.0 0.0;
               to: "left_pad_btn";
            }
            rel2 {
               relative: 0.0 1.0;
               to: "elm.rect.pad_btn";
            }
         }
      }
      part { name: "elm.rect.pad_btn";
         scale: 1;
         type: SPACER;
         description { state: "default" 0.0;
            min: POPUP_BUTTON2_DEFAULT_PADDING_BUTTON_MIN_MAX_INC;
            max: POPUP_BUTTON2_DEFAULT_PADDING_BUTTON_MIN_MAX_INC;
            fixed: 1 1;
            rel1.relative: 0.5 0.0;
            rel2.relative: 0.5 1.0;
         }
      }
      part { name:"actionbtn2";
         type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            align: 0.0 0.5;
            rel1 {
               relative: 1.0 0.0;
               to: "elm.rect.pad_btn";
            }
            rel2 {
               relative: 0.0 1.0;
               to: "right_pad_btn";
            }
         }
      }
   }
}

group { name: "elm/popup/buttons3/default";
   alias: "elm/popup/buttons3/transparent";
   data.item: "action_area_height" POPUP_BUTTON_DEFAULT_ACTION_AREA_HEIGHT;
   parts{
      part { name: "left_pad_btn";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            min: POPUP_BUTTON3_DEFAULT_PADDING_LEFT_RIGHT_WIDTH_INC POPUP_BUTTON3_DEFAULT_HEIGHT_INC;
            max: POPUP_BUTTON3_DEFAULT_PADDING_LEFT_RIGHT_WIDTH_INC POPUP_BUTTON3_DEFAULT_HEIGHT_INC;
            fixed: 1 1;
            align: 0 0.5;
            rel1.relative: 0.0 0.0;
         }
      }
      part { name: "right_pad_btn";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            min: POPUP_BUTTON3_DEFAULT_PADDING_LEFT_RIGHT_WIDTH_INC POPUP_BUTTON3_DEFAULT_HEIGHT_INC;
            max: POPUP_BUTTON3_DEFAULT_PADDING_LEFT_RIGHT_WIDTH_INC POPUP_BUTTON3_DEFAULT_HEIGHT_INC;
            fixed: 1 1;
            align: 1 0.5;
            rel2.relative: 1.0 1.0;
         }
      }
      part { name: "btn_area";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1 {
               relative: 1.0 0.0;
               to: "left_pad_btn";
            }
            rel2 {
               relative: 0.0 1.0;
               to: "right_pad_btn";
            }
         }
      }
      part{ name:"actionbtn1";
         type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            align: 1.0 0.5;
            rel1 {
               relative: 1.0 0.0;
               to: "left_pad_btn";
            }
            rel2 {
               relative: 0.0 1.0;
               to: "elm.rect.pad_btn";
            }
         }
      }
      part { name: "elm.rect.pad_btn";
         scale: 1;
         type: SPACER;
         description { state: "default" 0.0;
            min: POPUP_BUTTON3_DEFAULT_PADDING_BUTTON_MIN_MAX_INC;
            max: POPUP_BUTTON3_DEFAULT_PADDING_BUTTON_MIN_MAX_INC;
            fixed: 1 1;
            rel1.relative: 0.33 0.0;
            rel1.to: "btn_area";
            rel2.relative: 0.33 1.0;
            rel2.to: "btn_area";
         }
      }
      part{ name:"actionbtn2";
         type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1 {
               relative: 1.0 0.0;
               to: "elm.rect.pad_btn";
            }
            rel2 {
               relative: 0.0 1.0;
               to: "elm.rect.pad_btn2";
            }
         }
      }
      part { name: "elm.rect.pad_btn2";
         scale: 1;
         type: SPACER;
         description { state: "default" 0.0;
            min: POPUP_BUTTON3_DEFAULT_PADDING_BUTTON_MIN_MAX_INC;
            max: POPUP_BUTTON3_DEFAULT_PADDING_BUTTON_MIN_MAX_INC;
            fixed: 1 1;
            rel1.relative: 0.67 0.0;
            rel1.to: "btn_area";
            rel2.relative: 0.67 1.0;
            rel2.to: "btn_area";
         }
      }
      part{ name:"actionbtn3";
         type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            align: 0.0 0.5;
            rel1 {
               relative: 1.0 0.0;
               to: "elm.rect.pad_btn2";
            }
            rel2 {
               relative: 0.0 1.0;
               to: "right_pad_btn";
            }
         }
      }
   }
}

group { name: "elm/notify/center/center_popup";
   parts {
      part { name: "base";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            color: 0 0 0 0;
            rel1.relative: 0.0 0.0;
            rel2.relative: 1.0 1.0;
            min: POPUP_BASE_DEFAULT_BASE_DEFAULT_MIN_INC;
            max: POPUP_BASE_DEFAULT_BASE_DEFAULT_MAX_INC;
            fixed: 1 0;
         }
         description { state: "landscape" 0.0;
            inherit: "default" 0.0;
            min: POPUP_BASE_DEFAULT_BASE_LANDSCAPE_MIN_INC;
            max: POPUP_BASE_DEFAULT_BASE_LANDSCAPE_MAX_INC;
            fixed: 1 0;
         }
      }
     part { name: "elm.swallow.content";
        type: SWALLOW;
        scale: 1;
        description { state: "default" 0.0;
           rel1.to: "base";
           rel2.to: "base";
           align: 0.5 1.0;
           fixed: 1 1;
        }
     }
   }
}

group { name: "elm/popup/base/toast";
   images {
      set {
         name: "core_popup_noti_bg.#";
         image {
            image: SMALL"images/Assist_Views/core_popup_noti_bg.#.png" COMP;
         }
         image {
            image: MEDIUM"images/Assist_Views/core_popup_noti_bg.#.png" COMP;
         }
      }
      set {
         name: "core_popup_noti_bg_stroke.#";
         image {
            image: SMALL"images/Assist_Views/core_popup_noti_bg_stroke.#.png" COMP;
         }
         image {
            image: MEDIUM"images/Assist_Views/core_popup_noti_bg_stroke.#.png" COMP;
         }
      }
      set {
         name: "a11y_highlight.png";
         image {
            image: "default/images/tizen-hd/a11y_highlight.png" COMP;
         }
      }
   }
   data {
      item: "default_orient" "2"; //top, center:1 bottom:2
      item: "popup_outside_pad" POPUP_OUTSIDE_PADDING;
      item: "access_highlight" "on";
      item: "hide_finished_signal" "on";
   }
   parts {
      part { name: "bg";
         scale: 1;
         clip_to: "clipper";
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1.to: "bg_outer";
            rel2.to: "bg_outer";
            image.normal: "core_popup_noti_bg.#";
         }
      }
      part { name: "bg_outer";
         scale: 1;
         clip_to: "clipper";
         description { state: "default" 0.0;
            fixed: 1 1;
            image.normal: "core_popup_noti_bg_stroke.#";
            color: 61 185 204 255;
            rel1.to_x: "title_left_padding";
            rel1.to_y: "title_top_padding";
            rel1.relative: 0.0 0.0;
            rel2.to_x: "title_right_padding";
            rel2.to_y: "title_bottom_padding";
            rel2.relative: 1.0 1.0;
         }
      }
      part { name: "bottom_padding";
        type: SPACER;
        scale: 1;
        description { state: "default" 0.0;
            min: 0 POPUP_TOAST_VI_BOTTOM_PAD_INC;
            max: -1 POPUP_TOAST_VI_BOTTOM_PAD_INC;
            fixed: 0 1;
            align: 0.5 1.0;
            rel1.relative: 0.0 1.0;
         }
         description { state: "show_effect";
            inherit: "default" 0.0;
            min: 0 POPUP_TOAST_BOTTOM_PAD_INC;
            max: -1 POPUP_TOAST_BOTTOM_PAD_INC;
         }
      }
      part { name: "title_top_padding";
        type: SPACER;
        scale: 1;
        description { state: "default" 0.0;
            align: 0.5 1.0;
            min: 0 POPUP_TOAST_TITLE_TOP_PAD_INC;
            max: -1 POPUP_TOAST_TITLE_TOP_PAD_INC;
            fixed: 0 1;
            rel1.relative: 0.0 0.0;
            rel1.to_y: "elm.swallow.content";
            rel2.relative: 1.0 0.0;
            rel2.to_y: "elm.swallow.content";
         }
        description { state: "part_text_show" 0.0;
           inherit: "default";
           rel1.relative: 0.0 0.0;
           rel1.to_y: "elm.text";
           rel2.relative: 1.0 0.0;
           rel2.to_y: "elm.text";
        }
      }
      part { name: "title_bottom_padding";
        type: SPACER;
        scale: 1;
        description { state: "default" 0.0;
            min: 0 POPUP_TOAST_TITLE_BOTTOM_PAD_INC;
            max: -1 POPUP_TOAST_TITLE_BOTTOM_PAD_INC;
            fixed: 0 1;
            align: 0.5 1.0;
            rel1.to: "bottom_padding";
            rel1.relative: 0.0 0.0;
            rel2.to: "bottom_padding";
            rel2.relative: 1.0 0.0;
         }
      }
      part { name: "title_left_padding";
        type: SPACER;
        scale: 1;
        description { state: "default" 0.0;
            min: POPUP_TOAST_TITLE_LEFT_RIGHT_PAD_INC 0;
            max: POPUP_TOAST_TITLE_LEFT_RIGHT_PAD_INC 0;
            fixed: 1 0;
            align: 1.0 0.5;
            rel1.to: "elm.swallow.content";
            rel1.relative: 0.0 0.0;
            rel2.to: "elm.swallow.content";
            rel2.relative: 0.0 1.0;
        }
        description { state: "part_text_show" 0.0;
            inherit: "default";
            rel1.to: "elm.text";
            rel1.relative: 0.0 0.0;
            rel2.to: "elm.text";
            rel2.relative: 0.0 1.0;
        }
      }
      part { name: "title_right_padding";
        type: SPACER;
        scale: 1;
        description { state: "default" 0.0;
            min: POPUP_TOAST_TITLE_LEFT_RIGHT_PAD_INC 0;
            max: POPUP_TOAST_TITLE_LEFT_RIGHT_PAD_INC 0;
            fixed: 1 0;
            align: 0.0 0.5;
            rel1.to: "elm.swallow.content";
            rel1.relative: 1.0 0.0;
            rel2.to: "elm.swallow.content";
            rel2.relative: 1.0 1.0;
        }
        description { state: "part_text_show" 0.0;
            inherit: "default";
            align: 0.0 0.5;
            rel1.to: "elm.text";
            rel1.relative: 1.0 0.0;
            rel2.to: "elm.text";
            rel2.relative: 1.0 1.0;
        }
      }
      part { name: "elm.text";
         type: TEXTBLOCK;
         clip_to: "clipper";
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            min: POPUP_TOAST_TEXT_MIN_WIDTH_INC POPUP_TOAST_TEXT_MIN_HEIGHT_INC;
            max: POPUP_TOAST_TEXT_MAX_WIDTH_INC POPUP_TOAST_TEXT_MAX_HEIGHT_INC;
            rel2.to: "title_bottom_padding";
            rel2.relative: 1.0 0.0;
            text {
               style: "popup_toast_style";
               min: 1 1;
               max: 0 1;
            }
         }
         description { state: "multiline" 0.0;
            inherit: "default" 0.0;
            min: POPUP_TOAST_TEXT_MULTI_LINE_MIN_INC POPUP_TOAST_TEXT_MIN_HEIGHT_INC;
            text.min: 0 1;
         }
      }
      part { name: "elm.swallow.content";
         type: SWALLOW;
         clip_to: "clipper";
         scale: 1;
         description { state: "default" 0.0;
            rel2.to: "title_bottom_padding";
            rel2.relative: 1.0 0.0;
         }
      }
      part { name: "clipper";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            color: 255 255 255 0;
            rel1.to: "bg";
            rel2.to: "bg";
         }
         description { state: "show_effect" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
         }
      }
      part { name: "multiline_width";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            min: POPUP_TOAST_TEXT_MULTI_LINE_MIN_INC POPUP_TOAST_TEXT_MIN_HEIGHT_INC;
            fixed: 1 1;
         }
      }
      part { name: "highlight";
         clip_to: "clipper";
         description { state: "default" 0.0;
            image.normal: "a11y_highlight.png";
            image.border: 12 12 12 12;
            image.middle: 0;
            fill.smooth: 0;
            rel1.to: "bg";
            rel1.offset: -7 -7 ;
            rel2.to: "bg";
            rel2.offset: 5 5;
            visible: 0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
   }
   programs {
      program { name: "part_text_show";
         signal: "elm,state,text,visible";
         source: "elm";
         script {
            new tx1, ty1, tw1, th1, tx2, ty2, tw2, th2;
            get_geometry(PART:"elm.text", tx1, ty1, tw1, th1);
            get_geometry(PART:"multiline_width", tx2, ty2, tw2, th2);
            if (tw1 >= tw2)
               set_state(PART:"elm.text", "multiline", 0.0);
            else
               set_state(PART:"elm.text", "default", 0.0);

            set_state(PART:"title_top_padding", "part_text_show", 0.0);
            set_state(PART:"title_left_padding", "part_text_show", 0.0);
            set_state(PART:"title_right_padding", "part_text_show", 0.0);
         }
      }
      program { name: "show_effect";
         signal: "show";
         action: STATE_SET "show_effect" 0.0;
         transition: GLIDE_EASE_OUT(0.25);
         target: "clipper";
         target: "bottom_padding";
      }
      program { name: "hide_effect";
         signal: "elm,state,hide";
         source: "elm";
         action: STATE_SET "default" 0.0;
         transition: GLIDE_EASE_OUT(0.25);
         target: "clipper";
         target: "bottom_padding";
      }
      program { name: "show_new_highlight";
         signal: "elm,action,access_highlight,show";
         source: "elm";
         action: STATE_SET "visible" 0.0;
         target: "highlight";
      }
      program { name: "hide_new_highlight";
         signal: "elm,action,access_highlight,hide";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "highlight";
      }
   }
}

group { name: "elm/popup/base/theme_bg";
   inherit: "elm/popup/base/default";

   parts{
      part { name: "base";
         description { state: "default" 0.0;
            visible: 0;
         }
         description { state: "landscape" 0.0;
            visible: 0;
         }
      }
      part { name : "bg";
         description { state: "default" 0.0;
            visible: 0;
         }
      }
      part {name : "fg_color";
         type:  RECT;
         scale: 1;
         repeat_events: 1;
         description { state: "default" 0.0;
            color: 61 185 204 10;
            rel1.to: "elm.swallow.content";
            rel2.to: "elm.swallow.content";
         }
      }
   }
}
