/*
 * Copyright (c) 2015 Samsung Electronics Co., Ltd All Rights Reserved
 *
 * BSD 2-Clause License (http://www.opensource.org/licenses/bsd-license.php)
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *   1. Redistributions of source code must retain the above copyright notice, this
 *      list of conditions and the following disclaimer.
 *   2. Redistributions in binary form must reproduce the above copyright notice,
 *      this list of conditions and the following disclaimer in the documentation
 *      and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#define CIT_STYLES\
      style { name: "calendar_date_style";\
         base: "font=Tizen:style=Light font_size="CALENDAR_DATE_TEXT_SIZE" color=#000000ff align=center text_class=tizen";\
      }\
      style { name: "calendar_date_selected_style";\
         base: "font=Tizen:style=Light font_size="CALENDAR_DATE_TEXT_SIZE" color=#ffffffff align=center text_class=tizen";\
      }\
      style { name: "calendar_date_hilighted_style";\
         base: "font=Tizen:style=Light font_size="CALENDAR_DATE_TEXT_SIZE" color=#000000ff align=center text_class=tizen";\
      }\
      style { name: "calendar_date_holiday_style";\
         base: "font=Tizen:style=Light font_size="CALENDAR_DATE_TEXT_SIZE" color=#cc3d3dff align=center text_class=tizen";\
      }\
      style { name: "calendar_date_holiday_disabled_style";\
         base: "font=Tizen:style=Light font_size="CALENDAR_DATE_TEXT_SIZE" color=#cc3d3d38 align=center text_class=tizen";\
      }\
      style { name: "calendar_date_disabled_style";\
         base: "font=Tizen:style=Light font_size="CALENDAR_DATE_TEXT_SIZE" color=#00000038 align=center text_class=tizen";\
      }\

#define CAL_SPIN(_sufix, _signal_sufix, _text, _relative)\
      part { name: "left_bt"#_sufix"_swallow";\
         type: SWALLOW;\
         scale: 1;\
         description { state: "default" 0.0;\
            fixed: 1 1;\
            rel1.to: "left_bt"#_sufix;\
            rel2.to: "left_bt"#_sufix;\
         }\
         description { state: "rtl" 0.0;\
            inherit: "default" 0.0;\
            rel1.to: "right_bt"#_sufix;\
            rel2.to: "right_bt"#_sufix;\
         }\
      }\
      part { name: "left_bt"#_sufix; type: RECT;\
         scale: 1;\
         repeat_events: 1;\
         description { state: "default" 0.0;\
            fixed: 1 1;\
            rel1.to: #_relative;\
            rel2.to: #_relative;\
            align: 0.0 0.5;\
            min: CALENDAR_DATE_PICKER_LEFT_RIGHT_ARROW_IMAGE_SIZE_INC;\
            max: CALENDAR_DATE_PICKER_LEFT_RIGHT_ARROW_IMAGE_SIZE_INC;\
            color: 0 0 0 0;\
         }\
      }\
      part { name: "right_bt"#_sufix"_swallow";\
         type: SWALLOW;\
         scale: 1;\
         description { state: "default" 0.0;\
            fixed: 1 1;\
            rel1.to: "right_bt"#_sufix;\
            rel2.to: "right_bt"#_sufix;\
         }\
         description { state: "rtl" 0.0;\
            inherit: "default" 0.0;\
            rel1.to: "left_bt"#_sufix;\
            rel2.to: "left_bt"#_sufix;\
         }\
      }\
      part { name: "right_bt"#_sufix; type: RECT;\
         scale: 1;\
         repeat_events: 1;\
         description { state: "default" 0.0;\
            fixed: 1 1;\
            rel1.to: #_relative;\
            rel2.to: #_relative;\
            align: 1.0 0.5;\
            min: CALENDAR_DATE_PICKER_LEFT_RIGHT_ARROW_IMAGE_SIZE_INC;\
            max: CALENDAR_DATE_PICKER_LEFT_RIGHT_ARROW_IMAGE_SIZE_INC;\
            color: 0 0 0 0;\
         }\
      }\
      part { name: #_text; type: TEXT; mouse_events: 0;\
         scale: 1;\
         description { state: "default" 0.0;\
            fixed: 1 1;\
            rel1 { relative: 1.0 0.0;\
               to: "left_bt"#_sufix;\
            }\
            rel2 { relative: 0.0 1.0;\
               to: "right_bt"#_sufix;\
            }\
            color: 0 0 0 255;\
            text { font: "Tizen:width=Condensed:weight=Light"; size: CALENDAR_MONTH_TEXT_SIZE;\
               text_class: "tizen"; \
               min: 0 1;\
            }\
         }\
      }\
      programs {\
         program { name:   "rtl"#_sufix;\
            signal: "edje,state,rtl"; source: "edje";\
            script {\
               set_int(rtl, 1);\
               set_state(PART:"left_bt"#_sufix"_swallow", "rtl", 0.0);\
               set_state(PART:"right_bt"#_sufix"_swallow", "rtl", 0.0);\
            }\
         }\
         program { name:   "ltr"#_sufix;\
            signal: "edje,state,ltr"; source: "edje";\
            script {\
               set_int(rtl, 0);\
               set_state(PART:"left_bt"#_sufix"_swallow", "default", 0.0);\
               set_state(PART:"right_bt"#_sufix"_swallow", "default", 0.0);\
            }\
         }\
         program { \
            name: "touch_sound"; \
            action: RUN_PLUGIN "touch_sound"; \
         } \
      }

#define CH(_pos) \
   part { name: "ch_"#_pos".base"; type: SPACER; \
      description { state: "default" 0.0; \
         rel1 { \
            relative: (_pos % 7 / 7) 0.0; \
            to: "header"; \
         } \
         rel2 { \
            relative: (_pos % 7 / 7 + 1 / 7) 1.0; \
            to: "header"; \
         } \
      } \
   } \
   part { name: "ch_"#_pos".text"; type: TEXT; mouse_events: 0; \
      scale: 1; \
      clip_to: "ch_"#_pos".clipper"; \
      description { state: "default" 0.0; \
         fixed: 1 1; \
         rel1.to: "ch_"#_pos".base"; \
         rel2.to: "ch_"#_pos".base"; \
         color: 0 0 0 204;\
         text { font: "Tizen:style=Light"; size: CALENDAR_DATE_TITLE_TEXT_SIZE; \
            min: 1 1; \
            ellipsis: -1; \
         } \
      } \
   } \
   part { name: "ch_"#_pos".clipper"; type: RECT; \
      description { state: "default" 0.0; \
         rel1.to: "ch_"#_pos".base"; \
         rel2.to: "ch_"#_pos".base"; \
      } \
   }

#define CIT_SCRIPT(_pos) \
   public cit_##_pos##_disabled;

#define CIT(_pos) \
   part { name: "cit_"#_pos".rect"; type: SPACER; \
      description { state: "default" 0.0; \
         rel1 { \
            relative: (_pos % 7 / 7) \
            (_pos / 7 / 6 - _pos % 7 / 7 / 6); \
            to: "base"; \
         } \
         rel2 { \
            relative: (_pos % 7 / 7 + 1 / 7) \
            (_pos / 7 / 6 + 1 / 6 - _pos % 7 / 7 / 6); \
            to: "base"; \
         } \
      } \
   } \
   part { name: "cit_"#_pos".event"; type: RECT; repeat_events: 1; \
      description { state: "default" 0.0; \
         fixed: 1 1; \
         rel1.to: "cit_"#_pos".rect"; \
         rel2.to: "cit_"#_pos".rect"; \
         color: 0 0 0 0; \
      } \
   } \
   part { name: "cit_"#_pos".selected"; mouse_events: 0; scale: 1; \
      description { state: "default" 0.0; \
         fixed: 1 1; \
         min: CALENDAR_SELECTED_IMAGE_SIZE_INC; \
         max: CALENDAR_SELECTED_IMAGE_SIZE_INC; \
         rel1.to: "cit_"#_pos".rect"; \
         rel2.to: "cit_"#_pos".rect"; \
         image.normal: "core_date_picker_press.png"; \
         color: 61 184 204 255; \
         visible: 0; \
      } \
      description { state: "selected" 0.0; \
         inherit: "default" 0.0; \
         visible: 1; \
      } \
   } \
   part { name: "cit_"#_pos".selected2"; mouse_events: 0; scale: 1; \
      description { state: "default" 0.0; \
         fixed: 1 1; \
         min: CALENDAR_SELECTED_IMAGE_SIZE_INC; \
         max: CALENDAR_SELECTED_IMAGE_SIZE_INC; \
         rel1.to: "cit_"#_pos".rect"; \
         rel2.to: "cit_"#_pos".rect"; \
         image.normal: "core_date_picker_press.png"; \
         color: 61 184 204 255; \
         visible: 0; \
      } \
      description { state: "hilighted" 0.0; \
         inherit: "default" 0.0; \
         visible: 1; \
      } \
   } \
   part { name: "cit_"#_pos".text"; type: TEXTBLOCK; mouse_events: 0; \
      scale: 1; \
      description { state: "default" 0.0; \
         fixed: 1 1; \
         rel1.to: "cit_"#_pos".rect"; \
         rel2.to: "cit_"#_pos".rect"; \
         text.style: "calendar_date_style"; \
         text.min: 1 1; \
         text.ellipsis: -1; \
      } \
      description { state: "holiday" 0.0; \
         inherit: "default" 0.0; \
         text.style: "calendar_date_holiday_style"; \
      } \
      description { state: "disabled" 0.0; \
         inherit: "default" 0.0; \
         text.style: "calendar_date_disabled_style"; \
      } \
      description { state: "hilighted" 0.0; \
         inherit: "default" 0.0; \
         text.style: "calendar_date_hilighted_style"; \
      } \
      description { state: "selected" 0.0; \
         inherit: "default" 0.0; \
         text.style: "calendar_date_selected_style"; \
      } \
      description { state: "holiday_hilighted" 0.0; \
         inherit: "default" 0.0; \
         text.style: "calendar_date_hilighted_style"; \
      } \
      description { state: "holiday_selected" 0.0; \
         inherit: "default" 0.0; \
         text.style: "calendar_date_selected_style"; \
      } \
      description { state: "holiday_disabled" 0.0; \
         inherit: "default" 0.0; \
         text.style: "calendar_date_holiday_disabled_style"; \
      } \
   } \
   part { name: "cit_"#_pos".access"; type: RECT; repeat_events: 1; \
      description { state: "default" 0.0; \
         fixed: 1 1; \
         rel1.to: "cit_"#_pos".event"; \
         rel2.to: "cit_"#_pos".event"; \
         color: 0 0 0 0; \
      } \
   } \
   programs { \
      program { \
         name:    "cit_"#_pos".go_active"; \
         signal:  "cit_"#_pos",selected"; \
         source:  "elm"; \
         script { \
            new st[31]; \
            new Float:vl; \
            get_state(PART:"cit_"#_pos".text", st, 30, vl); \
            if (!strncmp(st, "holiday", 7)) \
              set_state(PART:"cit_"#_pos".text", "holiday_selected", 0.0); \
            else \
              set_state(PART:"cit_"#_pos".text", "selected", 0.0); \
            set_state(PART:"cit_"#_pos".selected", "selected", 0.0); \
         } \
      } \
      program { \
         name:    "cit_"#_pos".go_passive"; \
         signal:  "cit_"#_pos",unselected"; \
         source:  "elm"; \
         script { \
            new st[31]; \
            new Float:vl; \
            get_state(PART:"cit_"#_pos".text", st, 30, vl); \
            if (!strncmp(st, "holiday", 7)) \
              set_state(PART:"cit_"#_pos".text", "holiday", 0.0); \
            else if (!strncmp(st, "disabled", 8)) \
              set_state(PART:"cit_"#_pos".text", "disabled", 0.0); \
            else \
              set_state(PART:"cit_"#_pos".text", "default", 0.0); \
            set_state(PART:"cit_"#_pos".selected", "default", 0.0); \
         } \
      } \
      program { \
         name: "cit_"#_pos".mouse.down"; \
         signal: "mouse,down,1"; \
         source: "cit_"#_pos".event"; \
         script { \
            new st[31]; \
            new Float:vl; \
            get_state(PART:"cit_"#_pos".text", st, 30, vl); \
            if (strcmp(st, "disabled")) { \
               if (strstr(st, "selected") == -1) { \
                  if (!strncmp(st, "holiday", 7)) \
                     set_state(PART:"cit_"#_pos".text", "holiday_hilighted", 0.0); \
                  else \
                     set_state(PART:"cit_"#_pos".text", "hilighted", 0.0); \
               } \
               set_state(PART:"cit_"#_pos".selected2", "hilighted", 0.0); \
            } \
         } \
      } \
      program { \
         name: "cit_"#_pos".mouse.up"; \
         signal: "mouse,up,1"; \
         source: "cit_"#_pos".event"; \
         script { \
            new st[31]; \
            new Float:vl; \
            get_state(PART:"cit_"#_pos".text", st, 30, vl); \
            if (strcmp(st, "disabled")) { \
               if (strstr(st, "selected") == -1) { \
                  if (!strncmp(st, "holiday", 7)) \
                     set_state(PART:"cit_"#_pos".text", "holiday", 0.0); \
                  else \
                     set_state(PART:"cit_"#_pos".text", "default", 0.0); \
               } \
               set_state(PART:"cit_"#_pos".selected2", "default", 0.0); \
            } \
         } \
      } \
      program { \
         name:    "cit_"#_pos".enable"; \
         signal:  "cit_"#_pos",enable"; \
         source:  "elm"; \
         script { \
            new st[31]; \
            new Float:vl; \
            set_int(cit_##_pos##_disabled, 0); \
            get_state(PART:"cit_"#_pos".text", st, 30, vl); \
            if (!strncmp(st, "holiday", 7)) { \
               if (!strcmp(st, "holiday_selected")) \
                 set_state(PART:"cit_"#_pos".text", "holiday_selected", 0.0); \
               else \
                 set_state(PART:"cit_"#_pos".text", "holiday", 0.0); \
            } else if (strcmp(st, "selected")) \
               set_state(PART:"cit_"#_pos".text", "default", 0.0); \
         } \
      } \
      program { \
         name:    "cit_"#_pos".disable"; \
         signal:  "cit_"#_pos",disable"; \
         source:  "elm"; \
         script { \
            new st[31]; \
            new Float:vl; \
            set_int(cit_##_pos##_disabled, 1); \
            get_state(PART:"cit_"#_pos".text", st, 30, vl); \
            if (!strncmp(st, "holiday", 7)) \
               set_state(PART:"cit_"#_pos".text", "holiday_disabled", 0.0); \
            else \
               set_state(PART:"cit_"#_pos".text", "disabled", 0.0); \
         } \
      } \
      program { \
         name: "cit_"#_pos".clicked"; \
         signal: "mouse,clicked,1"; \
         source: "cit_"#_pos".event"; \
         action: SIGNAL_EMIT "elm,action,selected" #_pos; \
      } \
      program { \
         name:    "cit_"#_pos".clear"; \
         signal:  "cit_"#_pos",clear"; \
         source:  "elm"; \
         after:   "cit_"#_pos".holiday_clear"; \
      } \
      program { \
         name:    "cit_"#_pos".holiday_clear"; \
         script { \
            new st[31]; \
            new Float:vl; \
            get_state(PART:"cit_"#_pos".text", st, 30, vl); \
            if (!strcmp(st, "holiday")) \
              set_state(PART:"cit_"#_pos".text", "default", 0.0); \
            else if (!strcmp(st, "holiday_disabled")) \
              set_state(PART:"cit_"#_pos".text", "disabled", 0.0); \
            else if (!strcmp(st, "holiday_selected")) \
              set_state(PART:"cit_"#_pos".text", "selected", 0.0); \
         } \
      } \
      program { \
         name:    "cit_"#_pos".holiday"; \
         signal:  "cit_"#_pos",holiday"; \
         source:  "elm"; \
         script { \
            new st[31]; \
            new Float:vl; \
            get_state(PART:"cit_"#_pos".text", st, 30, vl); \
            if (!strcmp(st, "disabled")) \
              set_state(PART:"cit_"#_pos".text", "holiday_disabled", 0.0); \
            else if (!strcmp(st, "selected")) \
              set_state(PART:"cit_"#_pos".text", "holiday_selected", 0.0); \
            else \
              set_state(PART:"cit_"#_pos".text", "holiday", 0.0); \
         } \
      } \
      program {\
         signal: "mouse,clicked,1"; \
         source: "cit_"#_pos".event"; \
         script { \
            if (!get_int(cit_##_pos##_disabled)) \
               run_program(PROGRAM:"touch_sound"); \
         } \
      } \
   }

group { name: "elm/calendar/base/default";
   images.image: "core_date_picker_arrow_l.png" COMP;
   images.image: "core_date_picker_arrow_r.png" COMP;
   images.image: "core_date_picker_press.png" COMP;
   script {
      public rtl;
      CIT_SCRIPT(0) CIT_SCRIPT(1) CIT_SCRIPT(2) CIT_SCRIPT(3) CIT_SCRIPT(4) CIT_SCRIPT(5) CIT_SCRIPT(6)
      CIT_SCRIPT(7) CIT_SCRIPT(8) CIT_SCRIPT(9) CIT_SCRIPT(10) CIT_SCRIPT(11) CIT_SCRIPT(12) CIT_SCRIPT(13)
      CIT_SCRIPT(14) CIT_SCRIPT(15) CIT_SCRIPT(16) CIT_SCRIPT(17) CIT_SCRIPT(18) CIT_SCRIPT(19) CIT_SCRIPT(20)
      CIT_SCRIPT(21) CIT_SCRIPT(22) CIT_SCRIPT(23) CIT_SCRIPT(24) CIT_SCRIPT(25) CIT_SCRIPT(26) CIT_SCRIPT(27)
      CIT_SCRIPT(28) CIT_SCRIPT(29) CIT_SCRIPT(30) CIT_SCRIPT(31) CIT_SCRIPT(32) CIT_SCRIPT(33) CIT_SCRIPT(34)
      CIT_SCRIPT(35) CIT_SCRIPT(36) CIT_SCRIPT(37) CIT_SCRIPT(38) CIT_SCRIPT(39) CIT_SCRIPT(40) CIT_SCRIPT(41)
   }
   styles {
      CIT_STYLES
   }
   parts {
      part { name: "bg";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            min: CALENDAR_BG_MIN_SIZE_INC;
            max: CALENDAR_BG_MAX_SIZE_INC;
            color: 250 250 250 255;
         }
      }
      part { name: "spinner_base_left_padding";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            align: 0.0 0.5;
            min: CALENDAR_SPINNER_BASE_PADDING_MIN_SIZE_INC;
            rel1.to: "bg";
            rel2 {
               to: "bg";
               relative: 0.0 1.0;
            }
         }
      }
      part { name: "spinner_base_right_padding";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            align: 1.0 0.5;
            min: CALENDAR_SPINNER_BASE_PADDING_MIN_SIZE_INC;
            rel1 {
               to: "bg";
               relative: 1.0 0.0;
            }
            rel2.to: "bg";
         }
      }
      part { name: "spinner-base1";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            min: CALENDAR_SPINNER_BASE_MIN_SIZE_INC;
            max: CALENDAR_SPINNER_BASE_MAX_SIZE_INC;
            rel1 {
               to_x: "spinner_base_left_padding";
               to_y: "bg";
               relative: 1.0 0.0;
            }
            rel2 {
               to_x: "spinner_base_right_padding";
               to_y: "bg";
               relative: 0.0 1.0;
            }
            align: 0.5 0.0;
         }
      }
      part { name: "table-base";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            min: CALENDAR_TABLE_BASE_MIN_SIZE_INC;
            max: CALENDAR_TABLE_BASE_MAX_SIZE_INC;
            rel1.to_x: "bg";
            rel1.to_y: "spinner-base1";
            rel1.relative: 0.0 1.0;
            rel2.to: "bg";
            align: 0.5 0.0;
         }
      }
      part { name: "header";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            min: CALENDAR_HEADER_MIN_SIZE_INC;
            max: CALENDAR_HEADER_MAX_SIZE_INC;
            rel1.to: "table-base";
            rel2.to: "table-base";
            align: 0.5 0.0;
         }
      }
      part { name: "header_separator";
         type: RECT;
         mouse_events:  0;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            min: CALENDAR_HEADER_SEPARATOR_SIZE_INC;
            rel1.to: "header";
            rel1.relative: 0.0 1.0;
            rel2.to: "header";
            color: 61 184 204 38;
            align: 0.5 0.0;
         }
      }
      part { name: "base_top_padding";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 0 1;
            min: CALENDAR_BASE_TOP_PADDING_SIZE_INC;
            rel1.to_x: "bg";
            rel1.to_y: "header_separator";
            rel1.relative: 0.0 1.0;
            rel2.to_x: "bg";
            rel2.to_y: "header_separator";
            align: 0.5 0.0;
         }
      }
      part { name: "base";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 0 1;
            rel1.to_x: "table-base";
            rel1.to_y: "base_top_padding";
            rel1.relative: 0.0 1.0;
            rel2.to_x: "table-base";
            rel2.to_y: "base_bottom_padding";
            rel2.relative: 1.0 0.0;
         }
      }
      part { name: "base_bottom_padding";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 0 1;
            min: CALENDAR_BASE_BOTTOM_PADDING_SIZE_INC;
            rel1.to: "bg";
            rel1.relative: 0.0 1.0;
            rel2.to: "bg";
            align: 0.5 1.0;
         }
      }

      CAL_SPIN(,,month_text, spinner-base1)
      CH(0)   CH(1)   CH(2)   CH(3)   CH(4)   CH(5)   CH(6)
      CIT(0)  CIT(1)  CIT(2)  CIT(3)  CIT(4)  CIT(5)  CIT(6)
      CIT(7)  CIT(8)  CIT(9)  CIT(10) CIT(11) CIT(12) CIT(13)
      CIT(14) CIT(15) CIT(16) CIT(17) CIT(18) CIT(19) CIT(20)
      CIT(21) CIT(22) CIT(23) CIT(24) CIT(25) CIT(26) CIT(27)
      CIT(28) CIT(29) CIT(30) CIT(31) CIT(32) CIT(33) CIT(34)
      CIT(35) CIT(36) CIT(37) CIT(38) CIT(39) CIT(40) CIT(41)
   }
}

#undef CAL_SPIN
#undef CIT
#undef CH
