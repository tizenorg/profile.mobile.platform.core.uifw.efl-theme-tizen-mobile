/*
 * Copyright (c) 2015 Samsung Electronics Co., Ltd All Rights Reserved
 *
 * BSD 2-Clause License (http://www.opensource.org/licenses/bsd-license.php)
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *   1. Redistributions of source code must retain the above copyright notice, this
 *      list of conditions and the following disclaimer.
 *   2. Redistributions in binary form must reproduce the above copyright notice,
 *      this list of conditions and the following disclaimer in the documentation
 *      and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

   group { name: "elm/button/base/default";
      data.item: "vector_ux" "default";
      script {
         public mouse_down = 0;
         public multi_down = 0;
         public disabled = 0;
         public text = 0;
         public content = 0;
      }
      parts {
         part { name: "base";
            scale: 1;
            type: SPACER;
            description { state: "default" 0.0;
               min: BUTTON_MIN_WIDTH_INC BUTTON_MIN_HEIGHT_INC;
            }
         }
         //Base Shape Part
         part { name: "tizen_vg_shape";
            type: SWALLOW;
            clip_to: "tizen_vg_shape_clipper";
            scale: 1;
            description { state: "default" 0.0;
               min: 0 BUTTON_MIN_HEIGHT_INC;
               rel1.relative: 0 0.5;
               rel2.relative: 1 0.5;
               fixed: 0 1;
            }
         }
         part { name: "tizen_vg_shape_clipper";
            type: RECT;
            description { state: "default" 0.0;
               color: 82 198 216 255;
            }
            description { state: "disabled" 0.0;
               color: 138 195 204 255;
            }
         }
         //Effect Shape Part
         part { name: "tizen_vg_shape2";
            type: SWALLOW;
            clip_to: "tizen_vg_shape_clipper2";
            scale: 1;
            description { state: "default" 0.0;
               rel1.to: "tizen_vg_shape";
               rel2.to: "tizen_vg_shape";
               rel1.relative: 0.15 0.15;
               rel2.relative: 0.85 0.85;
            }
            description { state: "ready" 0.0;
               inherit: "default" 0.0;
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               rel1.relative: 0.0 0.0;
               rel2.relative: 1.0 1.0;
            }
         }
         part { name: "tizen_vg_shape_clipper2";
            type: RECT;
            description { state: "default" 0.0;
               visible: 0;
               color: 48 139 153 0;
            }
            description { state: "ready" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
            description { state: "pressed" 0.0;
               color: 48 139 153 255;
            }
         }
         part { name: "padding_left_top";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               rel1.to: "tizen_vg_shape";
               rel2.to: "tizen_vg_shape";
               align: 0.0 0.0;
               rel2.relative: 0.0 0.0;
               min: BUTTON_PADDING_LEFT_RIGHT_INC BUTTON_PADDING_TOP_HEIGHT_INC;
               fixed: 1 1;
            }
            description { state: "icon_only" 0.0;
               inherit: "default" 0.0;
               min: 0 0;
            }
            description { state: "icon_text" 0.0;
               inherit: "default" 0.0;
               min: BUTTON_PADDING_LEFT_ICON_TEXT_INC BUTTON_PADDING_TOP_HEIGHT_INC;
            }
         }
         part { name: "padding_right_bottom";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               rel1.to: "tizen_vg_shape";
               rel2.to: "tizen_vg_shape";
               align: 1.0 1.0;
               rel1.relative: 1.0 1.0;
               min: BUTTON_PADDING_LEFT_RIGHT_INC BUTTON_PADDING_BOTTOM_HEIGHT_INC;
               fixed: 1 1;
            }
            description { state: "icon_only" 0.0;
               inherit: "default" 0.0;
               min: 0 0;
            }
         }
         part { name: "icon_rect";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               align: 0.0 0.0;
               rel1 {
                  relative: 1.0 1.0;
                  to: "padding_left_top";
               }
               rel2 {
                  relative: 1.0 1.0;
                  to: "padding_left_top";
               }
               min: 0 BUTTON_ICON_DEFAULT_HEIGHT_INC;
               fixed: 1 1;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               min: BUTTON_ICON_DEFAULT_WIDTH_INC BUTTON_ICON_DEFAULT_HEIGHT_INC;
               fixed: 1 1;
            }
            description { state: "icon_only" 0.0;
               rel1.to: "tizen_vg_shape";
               rel2.to: "tizen_vg_shape";
               min: BUTTON_ICON_DEFAULT_WIDTH_INC BUTTON_ICON_DEFAULT_HEIGHT_INC;
               max: BUTTON_ICON_DEFAULT_WIDTH_INC BUTTON_ICON_DEFAULT_HEIGHT_INC;
               align: 0.5 0.5;
               fixed: 1 1;
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            clip_to: "clipper";
            description { state: "default" 0.0;
               rel1.to: "icon_rect";
               rel2.to: "icon_rect";
            }
         }
         part { name: "icon_text_padding";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               align: 0.0 0.5;
               min: 0 0;
               rel1 {
                  relative: 1.0 0.0;
                  to: "icon_rect";
               }
               rel2 {
                  relative: 1.0 1.0;
                  to: "icon_rect";
               }
               fixed: 1 1;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               min: BUTTON_PADDING_ICON_RIGHT_INC 0;
            }
         }
         part { name: "elm.text";
            type: TEXTBLOCK;
            mouse_events: 0;
            scale: 1;
            clip_to: "clipper";
            description { state: "default" 0.0;
               rel1 {
                  relative: 1.0 0.0;
                  to: "icon_text_padding";
               }
               rel2 {
                  relative: 0.0 0.0;
                  to: "padding_right_bottom";
               }
               text {
                  style: "button_main";
                  min: 1 1;
               }
            }
         }
         part { name: "clipper";
            type: RECT;
            description { state: "default" 0.0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 127;
            }
         }
         part { name: "event";
            type: RECT;
            ignore_flags: ON_HOLD;
            description { state: "default" 0.0;
               rel1.to: "tizen_vg_shape";
               rel2.to: "tizen_vg_shape";
               color: 0 0 0 0;
            }
         }
      }
      programs {
         program { name: "clicked_effect";
            action: STATE_SET "ready" 0.0;
            target: "tizen_vg_shape2";
            target: "tizen_vg_shape_clipper2";
            after: "clicked_effect2";
         }
         program { name: "clicked_effect2";
            script {
               run_program(PROGRAM:"clicked_effect3");
               run_program(PROGRAM:"clicked_effect4");
            }
         }
         program { name: "clicked_effect3";
            action: STATE_SET "pressed" 0.0;
            target: "tizen_vg_shape2";
            transition: DECELERATE 0.3;
         }
         program { name: "clicked_effect4";
            action: STATE_SET "pressed" 0.0;
            target: "tizen_vg_shape_clipper2";
            transition: DECELERATE 0.225;
            after: "clicked_effect5";
         }
         program { name: "clicked_effect5";
            action: STATE_SET "ready" 0.0;
            target: "tizen_vg_shape_clipper2";
            transition: LINEAR 0.45;
            after: "clicked_effect6";
         }
         program { name: "clicked_effect6";
            action: STATE_SET "default" 0.0;
            target: "tizen_vg_shape2";
            target: "tizen_vg_shape_clipper2";
         }
         program { name: "pressed";
            signal: "mouse,down,1*";
            source: "event";
            script {
               if ((get_int(multi_down) == 0) && (get_int(mouse_down) == 0)) {
                  set_int(mouse_down, 1);
                  if (get_int(disabled) == 0) {
                     emit("elm,action,press", "");
                     run_program(PROGRAM:"clicked_effect");
                  }
               }
            }
         }
         program { name: "unpressed";
            signal: "mouse,up,1";
            source: "event";
            script {
               if (get_int(mouse_down) == 1) {
                  set_int(mouse_down, 0);
                  if (get_int(disabled) == 0) {
                     emit("elm,action,unpress", "");
                  }
               }
            }
         }
         program { name: "touch_snd";
            signal: "mouse,clicked,1";
            source: "event";
            script {
               if (get_int(multi_down) == 0) {
                  if (get_int(disabled) == 0) {
                     run_program(PROGRAM:"touch_sound");
                     emit("elm,action,click", "");
                  }
               }
            }
         }
         program { name: "touch_sound";
            action: RUN_PLUGIN "touch_sound";
         }
         program { name: "icon_show";
            signal: "elm,state,icon,visible";
            source: "elm";
            script {
               set_int(content, 1);
               set_state(PART:"icon_text_padding", "visible", 0.0);
               if (get_int(text) == 1) {
                  set_state(PART:"icon_rect", "visible", 0.0);
                  set_state(PART:"padding_left_top", "icon_text", 0.0);
               } else {
                  set_state(PART:"icon_rect", "icon_only", 0.0);
                  set_state(PART:"padding_left_top", "icon_only", 0.0);
                  set_state(PART:"padding_right_bottom", "icon_only", 0.0);
               }
            }
         }
         program { name: "icon_hide";
            signal: "elm,state,icon,hidden";
            source: "elm";
            script {
               set_int(content, 0);
               set_state(PART:"icon_text_padding", "default", 0.0);
               set_state(PART:"icon_rect", "default", 0.0);
               set_state(PART:"padding_left_top", "default", 0.0);
               set_state(PART:"padding_right_bottom", "default", 0.0);
            }
         }
         program { name: "text_show";
            signal: "elm,state,text,visible";
            source: "elm";
            script {
               set_int(text, 1);
               if (get_int(content) == 1) {
                  set_state(PART:"icon_rect", "visible", 0.0);
                  set_state(PART:"padding_left_top", "icon_text", 0.0);
               }
            }
         }
         program { name: "text_hide";
            signal: "elm,state,text,hidden";
            source: "elm";
            script {
               set_int(text, 0);
               if (get_int(content) == 1) {
                  set_state(PART:"icon_rect", "icon_only", 0.0);
                  set_state(PART:"padding_left_top", "icon_only", 0.0);
                  set_state(PART:"padding_right_bottom", "icon_only", 0.0);
               }
            }
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            script {
              set_int(disabled, 1);
              set_state(PART:"clipper", "disabled", 0.0);
              set_state(PART:"tizen_vg_shape_clipper", "disabled", 0.0);
            }
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            script {
              set_int(disabled, 0);
              set_state(PART:"clipper", "default", 0.0);
              set_state(PART:"tizen_vg_shape_clipper", "default", 0.0);
            }
         }
         program { name: "multi_down";
            signal: "elm,action,multi,down";
            source: "elm";
            script {
               set_int(multi_down, 1);
            }
         }
         program { name: "multi_up";
            signal: "elm,action,multi,up";
            source: "elm";
            script {
               set_int(multi_down, 0);
            }
         }
      }
   }
   group { name: "elm/button/base/circle";
      data.item: "vector_ux" "circle";
      script {
         public mouse_down = 0;
         public multi_down = 0;
         public disabled = 0;
      }
      parts {
         part { name: "base";
            scale: 1;
            type: SPACER;
            description { state: "default" 0.0;
               min: BUTTON_CIRCLE_BASE_SIZE_INC;
            }
            description { state: "extended" 0.0;
               min: BUTTON_CIRCLE_EXTENDED_SIZE_INC;
            }
         }
         //Base Shape Part
         part { name: "tizen_vg_shape";
            type: SWALLOW;
            clip_to: "tizen_vg_shape_clipper";
            scale: 1;
            description { state: "default" 0.0;
               min: BUTTON_CIRCLE_SIZE_INC;
               rel1.relative: 0.5 0;
               rel2.relative: 0.5 0;
               align: 0.5 0;
               fixed: 1 1;
            }
         }
         part { name: "tizen_vg_shape_clipper";
            type: RECT;
            description { state: "default" 0.0;
               color: 82 198 216 255;
            }
            description { state: "disabled" 0.0;
               color: 138 195 204 255;
            }
         }
         //Effect Shape Part
         part { name: "tizen_vg_shape2";
            type: SWALLOW;
            clip_to: "tizen_vg_shape_clipper2";
            scale: 1;
            description { state: "default" 0.0;
               rel1.to: "tizen_vg_shape";
               rel2.to: "tizen_vg_shape";
               rel1.relative: 0.15 0.15;
               rel2.relative: 0.85 0.85;
            }
            description { state: "ready" 0.0;
               inherit: "default" 0.0;
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               rel1.relative: 0.0 0.0;
               rel2.relative: 1.0 1.0;
            }
         }
         part { name: "tizen_vg_shape_clipper2";
            type: RECT;
            description { state: "default" 0.0;
               visible: 0;
               color: 48 139 153 0;
            }
            description { state: "ready" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
            description { state: "pressed" 0.0;
               color: 48 139 153 255;
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            clip_to: "clipper";
            description { state: "default" 0.0;
               min: BUTTON_CIRCLE_ICON_SIZE_INC;
               fixed: 1 1;
               rel1.to: "tizen_vg_shape";
               rel2.to: "tizen_vg_shape";
               rel1.relative: 0.5 0.5;
               rel2.relative: 0.5 0.5;
            }
         }
         part { name: "icon_text_padding";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               rel1.to_y: "tizen_vg_shape";
               rel2.to_y: "tizen_vg_shape";
               rel1.relative: 0.0 1.0;
               rel2.relative: 1.0 1.0;
               align: 0.5 0.0;
               min: 0 0;
               fixed: 1 1;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               min: 0 BUTTON_CIRCLE_PADDING_ICON_BOTTOM_INC;
            }
         }
         part { name: "text_left_padding";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               min: BUTTON_CIRCLE_PADDING_TEXT_LEFT_RIGHT_INC 0;
               rel1 {
                  relative: 0.0 1.0;
                  to: "icon_text_padding";
               }
               rel2.relative: 0.0 1.0;
               align: 0.0 0.5;
               fixed: 1 0;
            }
         }
         part { name: "text_right_padding";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               min: BUTTON_CIRCLE_PADDING_TEXT_LEFT_RIGHT_INC 0;
               rel1 {
                  relative: 1.0 1.0;
                  to: "icon_text_padding";
               }
               align: 1.0 0.5;
               fixed: 1 0;
            }
         }
         part { name: "elm.text";
            type: TEXTBLOCK;
            mouse_events: 0;
            scale: 1;
            clip_to: "clipper";
            description { state: "default" 0.0;
               rel1 {
                  relative: 1.0 0.0;
                  to: "text_left_padding";
               }
               rel2 {
                  relative: 0.0 1.0;
                  to: "text_right_padding";
               }
               text {
                  style: "button_circle";
                  align: 0.5 0;
                  min: 0 0;
               }
               align: 0.5 0;
            }
         }
         part { name: "clipper";
            type: RECT;
            description { state: "default" 0.0;
            }
            description { state: "disabled" 0.0;
               color: 255 255 255 127;
            }
         }
         part { name: "event";
            type: RECT;
            ignore_flags: ON_HOLD;
            description { state: "default" 0.0;
               rel1.to: "tizen_vg_shape";
               rel2.to: "elm.text";
               color: 0 0 0 0;
            }
         }
      }
      programs {
         program { name: "clicked_effect";
            action: STATE_SET "ready" 0.0;
            target: "tizen_vg_shape2";
            target: "tizen_vg_shape_clipper2";
            after: "clicked_effect2";
         }
         program { name: "clicked_effect2";
            script {
               run_program(PROGRAM:"clicked_effect3");
               run_program(PROGRAM:"clicked_effect4");
            }
         }
         program { name: "clicked_effect3";
            action: STATE_SET "pressed" 0.0;
            target: "tizen_vg_shape2";
            transition: DECELERATE 0.3;
         }
         program { name: "clicked_effect4";
            action: STATE_SET "pressed" 0.0;
            target: "tizen_vg_shape_clipper2";
            transition: DECELERATE 0.225;
            after: "clicked_effect5";
         }
         program { name: "clicked_effect5";
            action: STATE_SET "ready" 0.0;
            target: "tizen_vg_shape_clipper2";
            transition: LINEAR 0.45;
            after: "clicked_effect6";
         }
         program { name: "clicked_effect6";
            action: STATE_SET "default" 0.0;
            target: "tizen_vg_shape2";
            target: "tizen_vg_shape_clipper2";
         }
         program { name: "pressed";
            signal: "mouse,down,1*";
            source: "event";
            script {
               if ((get_int(multi_down) == 0) && (get_int(mouse_down) == 0)) {
                  set_int(mouse_down, 1);
                  if (get_int(disabled) == 0) {
                     emit("elm,action,press", "");
                     run_program(PROGRAM:"clicked_effect");
                  }
               }
            }
         }
         program { name: "unpressed";
            signal: "mouse,up,1";
            source: "event";
            script {
               if (get_int(mouse_down) == 1) {
                  set_int(mouse_down, 0);
                  if (get_int(disabled) == 0) {
                     emit("elm,action,unpress", "");
                  }
               }
            }
         }
         program { name: "touch_snd";
            signal: "mouse,clicked,1";
            source: "event";
            script {
               if (get_int(multi_down) == 0) {
                  if (get_int(disabled) == 0) {
                     run_program(PROGRAM:"touch_sound");
                     emit("elm,action,click", "");
                  }
               }
            }
         }
         program { name: "touch_sound";
            action: RUN_PLUGIN "touch_sound";
         }
         program { name: "text_show";
            signal: "elm,state,text,visible";
            source: "elm";
            script {
               set_state(PART:"base", "extended", 0.0);
               set_state(PART:"icon_text_padding", "visible", 0.0);
            }
         }
         program { name: "text_hide";
            signal: "elm,state,text,hidden";
            source: "elm";
            script {
               set_state(PART:"base", "default", 0.0);
               set_state(PART:"icon_text_padding", "default", 0.0);
            }
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            script {
              set_int(disabled, 1);
              set_state(PART:"clipper", "disabled", 0.0);
              set_state(PART:"tizen_vg_shape_clipper", "disabled", 0.0);
            }
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            script {
              set_int(disabled, 0);
              set_state(PART:"clipper", "default", 0.0);
              set_state(PART:"tizen_vg_shape_clipper", "default", 0.0);
            }
         }
         program { name: "multi_down";
            signal: "elm,action,multi,down";
            source: "elm";
            script {
               set_int(multi_down, 1);
            }
         }
         program { name: "multi_up";
            signal: "elm,action,multi,up";
            source: "elm";
            script {
               set_int(multi_down, 0);
            }
         }
      }
   }

   group { name: "elm/button/base/floatingbutton";
      inherit: "elm/button/base/default";
      data.item: "vector_ux" "floatingbutton";
      parts {
         part { name: "base";
            scale: 1;
            type: SPACER;
            description { state: "default" 0.0;
               min: BUTTON_FLOATINGBUTTON_SIZE_INC;
            }
         }
         part { name: "tizen_vg_shape_clipper";
            type: RECT;
            description { state: "default" 0.0;
               visible: 0;
            }
            description { state: "disabled" 0.0;
               visible: 0;
            }
         }
         part { name: "tizen_vg_shape_clipper2";
            type: RECT;
            description { state: "default" 0.0;
               visible: 0;
               color: 57 78 160 0;
            }
            description { state: "ready" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
            description { state: "pressed" 0.0;
               color: 57 78 160 255;
            }
         }
      }
      programs {
         program {
            signal: "elm,floatingbutton,state,default";
            source: "elm";
            script {
               set_int(mouse_down, 0);
            }
         }
      }
   }

   group { name: "elm/button/base/bottom";
      inherit: "elm/button/base/default";
      alias: "elm/button/base/popup";
      data.item: "vector_ux" "bottom";
      parts {
         part { name: "base";
            scale: 1;
            type: SPACER;
            description { state: "default" 0.0;
               min: BUTTON_BOTTOM_MIN_WIDTH_INC BUTTON_BOTTOM_MIN_HEIGHT_INC;
            }
         }
         part { name: "tizen_vg_shape";
            type: SWALLOW;
            clip_to: "tizen_vg_shape_clipper";
            scale: 1;
            description { state: "default" 0.0;
               min: 0 BUTTON_BOTTOM_MIN_HEIGHT_INC;
            }
         }
         //Base Shape Part
         part { name: "tizen_vg_shape_clipper";
            type: RECT;
            description { state: "default" 0.0;
               color: 76 103 211 255;
            }
            description { state: "disabled" 0.0;
               color: 134 155 239 255;
            }
         }
         part { name: "tizen_vg_shape_clipper2";
            type: RECT;
            description { state: "default" 0.0;
               visible: 0;
               color: 57 78 160 0;
            }
            description { state: "ready" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
            description { state: "pressed" 0.0;
               color: 57 78 160 255;
            }
         }
         part { name: "padding_left_top";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               rel1.to: "tizen_vg_shape";
               rel2.to: "tizen_vg_shape";
               align: 0.0 0.0;
               rel1.relative: 0.0 0.0;
               min: BUTTON_PADDING_LEFT_RIGHT_INC BUTTON_BOTTOM_PADDING_TOP_HEIGHT_INC;
               fixed: 1 1;
            }
         }
         part { name: "padding_right_bottom";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               rel1.to: "tizen_vg_shape";
               rel2.to: "tizen_vg_shape";
               align: 1.0 1.0;
               rel1.relative: 1.0 1.0;
               min: BUTTON_PADDING_LEFT_RIGHT_INC BUTTON_BOTTOM_PADDING_BOTTOM_HEIGHT_INC;
               fixed: 1 1;
            }
         }
      }
   }

  /* This transparent button style is used by applications which use webview. */
   group{ name: "elm/button/base/transparent";
       script {
         public mouse_down = 0;
         public multi_down = 0;
       }
       parts {
         part { name: "bg";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
            }
         }
        part { name: "event";
            type: RECT;
            scale: 1;
            /* Do not remove the following line.
             * elm.swallow.content part should receive mouse events. */
            repeat_events: 1;
            ignore_flags: ON_HOLD;
            description { state: "default" 0.0;
              color: 0 0 0 0;
            }
         }
      }
      programs {
         program { name: "pressed";
            signal: "mouse,down,1*";
            source: "event";
            script {
               if ((get_int(multi_down) == 0) && (get_int(mouse_down) == 0))
                 {
                     set_int(mouse_down, 1);
                     run_program(PROGRAM:"button_press1");
                 }
            }
         }
         program { name: "button_press1";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"bg", st, 30, vl);
               if (strcmp(st, "disabled")) {
                  emit("elm,action,press", "");
               }
            }
         }
         program { name: "unpressed";
            signal: "mouse,up,1";
            source: "event";
            script {
               if (get_int(mouse_down) == 1) {
                 set_int(mouse_down, 0);
                 run_program(PROGRAM:"button_unpress1");
               }
            }
         }
         program { name: "button_unpress1";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"bg", st, 30, vl);
               if (strcmp(st, "disabled")) {
                  emit("elm,action,unpress", "");
               }
            }
         }
         program { name: "clicked";
            signal: "mouse,clicked,1";
            source: "event";
            script {
               new st[31];
               new Float:vl;
               if (get_int(multi_down) == 0) {
                  get_state(PART:"bg", st, 30, vl);
                  if (strcmp(st, "disabled")) {
                     emit("elm,action,click", "");
                  }
               }
            }
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "bg";
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "bg";
         }
         program { name: "multi_down";
            signal: "elm,action,multi,down";
            source: "elm";
            script {
               set_int(multi_down, 1);
            }
         }
         program { name: "multi_up";
            signal: "elm,action,multi,up";
            source: "elm";
            script {
               set_int(multi_down, 0);
            }
         }
      }
   }

///////////////////////////////////////////////////////////////////////////////////////
#define BUTTON_ICON_STYLES(style_name, image_normal, style_normal , style_press , style_dim ,min_width, min_height) \
   group { name: "elm/button/base/"style_name; \
      images { \
         image: image_normal COMP; \
      } \
      script { \
         public mouse_down = 0; \
         public multi_down = 0; \
      } \
      parts { \
         part { name: "button_image"; \
            type: SPACER; \
            scale: 1; \
            description { state: "default" 0.0; \
               min: min_width min_height; \
               max: min_width min_height; \
            } \
         } \
         part { name: "button_center_part"; \
            mouse_events: 0; \
            scale: 1; \
            description { state: "default" 0.0; \
               rel1.to: "button_image"; \
               rel2.to: "button_image"; \
               image.normal: image_normal; \
               color_class: style_normal; \
            } \
            description { state: "pressed" 0.0; \
               inherit: "default" 0.0; \
               color_class: style_press; \
            } \
            description { state: "disabled" 0.0; \
               inherit: "default" 0.0; \
               color_class: style_dim; \
            } \
         } \
         part { name: "over1"; \
            type: RECT; \
            repeat_events: 1; \
            ignore_flags: ON_HOLD; \
            description { state: "default" 0.0; \
               rel1.to: "button_image"; \
               rel2.to: "button_image"; \
               color: 0 0 0 0; \
            } \
         } \
         part { name: "over2"; \
            type: RECT; \
            repeat_events: 1; \
            description { state: "default" 0.0; \
               rel1.to: "button_image"; \
               rel2.to: "button_image"; \
               color: 0 0 0 0; \
            } \
         } \
         part { name: "disabler"; \
            type: RECT; \
            description { state: "default" 0.0; \
               rel1.to: "button_image"; \
               rel2.to: "button_image"; \
               color: 0 0 0 0; \
               visible: 0; \
            } \
            description { state: "disabled" 0.0; \
               inherit: "default" 0.0; \
               visible: 1; \
            } \
         } \
      } \
      programs { \
         program { name: "button_press"; \
            signal: "mouse,down,1*"; \
            source: "over1"; \
            script { \
               if ((get_int(multi_down) == 0) && (get_int(mouse_down) == 0)) \
                 { \
                     set_int(mouse_down, 1); \
                     run_program(PROGRAM:"button_press2"); \
                 } \
            } \
         } \
         program { name: "button_press2"; \
            action: SIGNAL_EMIT "elm,action,press" ""; \
            after: "button_press_anim"; \
         } \
         program { name: "button_press_anim"; \
            action: STATE_SET "pressed" 0.0; \
            target: "button_center_part"; \
         } \
         program { name: "key_press"; \
            signal: "elm,action,pressed"; \
            source: "elm"; \
            action: STATE_SET "pressed" 0.0; \
            target: "button_center_part"; \
         } \
         program { name: "key_unpress"; \
            signal: "elm,action,unpressed"; \
            source: "elm"; \
            action: STATE_SET "default" 0.0; \
            target: "button_center_part"; \
         } \
         program { name: "button_unpress"; \
            signal: "mouse,up,1*"; \
            source: "over2"; \
            script { \
               if (get_int(mouse_down) == 1) \
                 { \
                    set_int(mouse_down, 0); \
                    run_program(PROGRAM:"button_unpress2"); \
                    run_program(PROGRAM:"button_unpress_anim"); \
                 } \
            } \
         } \
         program { name: "button_unpress2"; \
            action: SIGNAL_EMIT "elm,action,unpress" ""; \
         } \
         program { name: "button_unpress_anim"; \
            action: STATE_SET "default" 0.0; \
            target: "button_center_part"; \
         } \
         program { name: "button_click"; \
            signal: "mouse,clicked,1"; \
            source: "over2"; \
            script { \
               if (get_int(multi_down) == 0) { \
                 run_program(PROGRAM:"touch_sound"); \
                 run_program(PROGRAM:"button_click2"); \
               } \
            } \
         } \
         program { name: "touch_sound"; \
            action: RUN_PLUGIN "touch_sound"; \
         } \
         program { name: "button_click2"; \
            action: SIGNAL_EMIT "elm,action,click" ""; \
         } \
         program { name: "disable"; \
            signal: "elm,state,disabled"; \
            source: "elm"; \
            action: STATE_SET "disabled" 0.0; \
            target: "disabler"; \
            target: "button_center_part"; \
         } \
         program { name: "enable"; \
            signal: "elm,state,enabled"; \
            source: "elm"; \
            action: STATE_SET "default" 0.0; \
            target: "disabler"; \
            target: "button_center_part"; \
         } \
         program { \
            name: "multi_down"; \
            signal: "elm,action,multi,down"; \
            source: "elm"; \
            script { \
               set_int(multi_down, 1); \
            } \
         } \
         program { \
            name: "multi_up"; \
            signal: "elm,action,multi,up"; \
            source: "elm"; \
            script { \
               set_int(multi_down, 0); \
            } \
         } \
      } \
   }

///////////////////////////////////////////////////////////////////////////////////////
   BUTTON_ICON_STYLES("icon_reorder", "core_button_reorder.png", "F060L1" ,"F060L1P" , "F060L1D" ,  BUTTON_ICON_WIDTH_INC, BUTTON_ICON_HEIGHT_INC)
///////////////////////////////////////////////////////////////////////////////////////
   BUTTON_ICON_STYLES("icon_expand_add", "core_button_add.png", "F060L2" , "F060L2P", "F060L2D",  BUTTON_ICON_WIDTH_INC, BUTTON_ICON_HEIGHT_INC)
///////////////////////////////////////////////////////////////////////////////////////
   BUTTON_ICON_STYLES("icon_expand_delete", "core_button_delete.png", "F060L3" , "F060L3P" ,"F060L3D",  BUTTON_ICON_WIDTH_INC, BUTTON_ICON_HEIGHT_INC)


group { name: "elm/button/base/contacts";
      data {
         item: "focus_highlight" "on";
      }
      images {
         set {
         name: "core_list_button_bg.#";
            image {
               image: SMALL"images/User_Input_Elements/core_list_button_bg.#.png" COMP;
            }
            image {
               image: MEDIUM"images/User_Input_Elements/core_list_button_bg.#.png" COMP;
            }
         }
      }
      script {
         public button_state = 0;
         public mouse_down = 0;
         public multi_down = 0;
      }
      parts {
         part { name: "button_image_base";
            scale: 1;
            type: SPACER;
            description { state: "default" 0.0;
               rel1 {
                  to_x: "padding.left";
                  to_y: "elm.text";
               }
               rel2 {
                  to_x: "padding.right";
                  to_y: "elm.text";
               }
               min: 0 BUTTON_MIN_HEIGHT_INC;
               max: -1 BUTTON_MIN_HEIGHT_INC;
            }
         }
         part { name: "button_image";
            scale: 1;
            description { state: "default" 0.0;
               rel1.to: "button_image_base";
               rel2.to: "button_image_base";
               image.normal: "core_list_button_bg.#";
               color: 38 107 191 255;
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               color: 30 85 153 255;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: 76 128 191 255;
            }
         }
         part { name: "padding.left";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               min: BUTTON_PADDING_LEFT_RIGHT_INC 0;
               fixed: 1 0;
               rel2 {
                  relative: 0.0 1.0;
                  to_x: "elm.text";
               }
               align: 1.0 0.0;
            }
         }
         part { name: "padding.right";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               min: BUTTON_PADDING_LEFT_RIGHT_INC 0;
               fixed: 1 0;
               rel1 {
                  relative: 1.0 0.0;
                  to_x: "elm.text";
               }
               align: 0.0 0.0;
            }
         }
         part { name: "elm.text";
            type: TEXTBLOCK;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               fixed: 1 1;
               text {
                  style: "button_contacts";
                  min: 1 1;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               min: 1 1;
            }
            description { state: "pressed" 0.0;
               inherit: "visible" 0.0;
               text {
                  style: "button_contacts_press";
               }
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
            }
            description { state: "disabled_visible" 0.0;
               inherit: "visible" 0.0;
               text {
                  style: "button_contacts_dim";
                  min: 1 1;
               }
            }
         }
         part { name: "over1";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               rel2.relative: 1.0 0.5;
               color: 0 0 0 0;
            }
         }
         part { name: "over2";
            type: RECT;
            repeat_events: 1;
            ignore_flags: ON_HOLD;
            description { state: "default" 0.0;
               rel1.to: "button_image_base";
               rel2.to: "button_image_base";
               color: 0 0 0 0;
            }
         }
         part { name: "over3";
            type: RECT;
            repeat_events: 1;
            description { state: "default" 0.0;
               rel1.to: "button_image_base";
               rel2.to: "button_image_base";
               color: 0 0 0 0;
            }
         }
         part { name: "disabler";
            type: RECT;
            description { state: "default" 0.0;
               rel1.to: "button_image_base";
               rel2.to: "button_image_base";
               color: 0 0 0 0;
               visible: 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
      }
      programs {
         program { name: "button_press";
            signal: "mouse,down,1*";
            source: "over3";
            script {
               if ((get_int(multi_down) == 0) && (get_int(mouse_down) == 0))
                 {
                     set_int(mouse_down, 1);
                     run_program(PROGRAM:"button_press2");
                 }
            }
         }
         program { name: "button_press2";
            action: SIGNAL_EMIT "elm,action,press" "";
            after: "button_press_anim";
         }
         program { name: "button_press_anim";
            action: STATE_SET "pressed" 0.0;
            target: "button_image";
            target: "elm.text";
         }
         program { name: "key_press";
            signal: "elm,action,pressed";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               set_state(PART:"button_image", "pressed", 0.0);
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "visible"))
                 set_state(PART:"elm.text", "pressed", 0.0);
            }
         }
         program { name: "key_unpress";
            signal: "elm,action,unpressed";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               set_state(PART:"button_image", "default", 0.0);
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "pressed"))
                 set_state(PART:"elm.text", "visible", 0.0);
            }
         }
         program { name: "button_unpress";
            signal: "mouse,up,1*";
            source: "over3";
            script {
               new st[31];
               new Float:vl;
               if (get_int(mouse_down) == 1) {
                 set_int(mouse_down, 0);
                 get_state(PART:"elm.text", st, 30, vl);
                 if (!strcmp(st, "pressed") )
                   {
                      emit("elm,action,default,text,set", "");
                      set_state(PART:"elm.text", "visible", 0.0);
                   }
                 if (get_int(button_state) != 1)
                   set_state(PART:"button_image", "default", 0.0);
                 run_program(PROGRAM:"button_unpress2");
               }
            }
         }
         program { name: "button_unpress2";
            action: SIGNAL_EMIT "elm,action,unpress" "";
         }
         program { name: "button_click";
            signal: "mouse,clicked,1";
            source: "over3";
            script {
               if (get_int(multi_down) == 0) {
                 run_program(PROGRAM:"play_sound");
                 run_program(PROGRAM:"button_click2");
               }
            }
         }
         program { name: "play_sound";
            action: RUN_PLUGIN "touch_sound";
         }
         program { name: "button_click2";
            action: SIGNAL_EMIT "elm,action,click" "";
         }
         program { name: "text_show";
            signal: "elm,state,text,visible";
            source: "elm";
            script {
               if (get_int(button_state) != 1)
                 set_state(PART:"elm.text", "visible", 0.0);
               else
                 set_state(PART:"elm.text", "disabled_visible", 0.0);
            }
         }
         program { name: "text_hide";
            signal: "elm,state,text,hidden";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "elm.text";
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "button_image";
            target: "disabler";
            after: "disable_text";
         }
         program { name: "disable_text";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "visible"))
                 set_state(PART:"elm.text", "disabled_visible", 0.0);
               else
                 set_state(PART:"elm.text", "disabled", 0.0);
               set_int(button_state, 1);
            }
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "button_image";
            target: "disabler";
            after: "enable_text";
         }
         program { name: "enable_text";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "disabled_visible"))
                 set_state(PART:"elm.text", "visible", 0.0);
               else
                 set_state(PART:"elm.text", "default", 0.0);
               set_int(button_state, 0);
            }
         }
         program {
            name: "multi_down";
            signal: "elm,action,multi,down";
            source: "elm";
            script {
               set_int(multi_down, 1);
            }
         }
         program {
            name: "multi_up";
            signal: "elm,action,multi,up";
            source: "elm";
            script {
               set_int(multi_down, 0);
            }
         }
      }
   }

   group { name: "elm/button/base/naviframe/title";
      script {
         public mouse_down = 0;
         public multi_down = 0;
         public check_disabled = 0;
      }
      parts {
         part { name: "base";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               min: BUTTON_NAVIFRAME_TITLE_BUTTON_SIZE_INC;
               max: BUTTON_NAVIFRAME_TITLE_BUTTON_SIZE_INC;
               fixed: 1 1;
            }
         }
         part { name: "button_bg";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            clip_to: "button_bg_clipper";
            description { state: "default" 0.0;
               min: BUTTON_NAVIFRAME_TITLE_BUTTON_BG_SIZE_INC;
               max: BUTTON_NAVIFRAME_TITLE_BUTTON_BG_SIZE_INC;
               fixed: 1 1;
            }
         }
         part { name: "button_bg_clipper";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1.to: "button_bg";
               rel2.to: "button_bg";
               color: 255 255 255 255;
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               color: 104 141 186 255;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: 43 93 155 255;
            }
         }
         part { name: "button_icon";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: BUTTON_NAVIFRAME_TITLE_BUTTON_IMAGE_SIZE_INC;
               max: BUTTON_NAVIFRAME_TITLE_BUTTON_IMAGE_SIZE_INC;
               fixed: 1 1;
               color: 52 158 91 255;
            }
         }
         part { name: "over2";
            type: RECT;
            ignore_flags: ON_HOLD;
            description { state: "default" 0.0;
               rel1.to: "base";
               rel2.to: "base";
               color: 0 0 0 0;
            }
         }
         part { name: "over3";
            type: RECT;
            repeat_events: 1;
            description { state: "default" 0.0;
               rel1.to: "base";
               rel2.to: "base";
               color: 0 0 0 0;
            }
         }
         part { name: "disabler";
            type: RECT;
            description { state: "default" 0.0;
               rel1.to: "base";
               rel2.to: "base";
               color: 0 0 0 0;
               visible: 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
      }
      programs {
         program { name: "button_press";
            signal: "mouse,down,1*";
            source: "over2";
            script {
               if ((get_int(multi_down) == 0) && (get_int(mouse_down) == 0))
                 {
                    set_int(mouse_down, 1);
                    set_state(PART:"button_bg_clipper", "pressed", 0.0);
                    emit("elm,action,press", "");
                 }
            }
         }
         program { name: "button_unpress";
            signal: "mouse,up,1*";
            source: "over3";
            script {
               if (get_int(mouse_down) == 1)
                 {
                    set_int(mouse_down, 0);
                    set_state(PART:"button_bg_clipper", "default", 0.0);
                    emit("elm,action,unpress", "");
                 }
            }
         }
         program { name: "button_click";
            signal: "mouse,clicked,1";
            source: "over2";
            script {
               if (get_int(multi_down) == 0) {
                 run_program(PROGRAM:"play_sound");
                 emit("elm,action,click", "");
               }
            }
         }
         program { name: "play_sound";
            action: RUN_PLUGIN "touch_sound";
         }
         program { name: "key_press";
            signal: "elm,action,pressed";
            source: "elm";
            action: STATE_SET "pressed" 0.0;
            target: "button_bg_clipper";
         }
         program { name: "key_unpress";
            signal: "elm,action,unpressed";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "button_bg_clipper";
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "button_bg_clipper";
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "button_bg_clipper";
         }
         program {
            name: "multi_down";
            signal: "elm,action,multi,down";
            source: "elm";
            script {
               set_int(multi_down, 1);
            }
         }
         program {
            name: "multi_up";
            signal: "elm,action,multi,up";
            source: "elm";
            script {
               set_int(multi_down, 0);
            }
         }
      }
   }

   group { name: "elm/button/base/naviframe/title_done";
      inherit: "elm/button/base/naviframe/title";
      images {
         set {
            name: "core_title_button_bg";
            image {
               image: SMALL"images/Old/core_title_button_bg.png" COMP;
            }
            image {
               image: MEDIUM"images/Old/core_title_button_bg.png" COMP;
            }
         }
         set {
            name: "core_title_icon_done";
            image {
               image: SMALL"images/Old/core_title_icon_done.png" COMP;
            }
            image {
               image: MEDIUM"images/Old/core_title_icon_done.png" COMP;
            }
         }
      }
      parts {
         part { name: "button_bg";
            type: IMAGE;
            scale: 1;
            mouse_events: 0;
            clip_to: "button_bg_clipper";
            description { state: "default" 0.0;
               min: BUTTON_NAVIFRAME_TITLE_BUTTON_BG_SIZE_INC;
               max: BUTTON_NAVIFRAME_TITLE_BUTTON_BG_SIZE_INC;
               fixed: 1 1;
               image.normal: "core_title_button_bg";
               color: 255 255 255 255;
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               color: 104 141 186 255;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: 43 93 155 255;
            }
         }
         part { name: "button_icon";
            type: IMAGE;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: BUTTON_NAVIFRAME_TITLE_BUTTON_IMAGE_SIZE_INC;
               max: BUTTON_NAVIFRAME_TITLE_BUTTON_IMAGE_SIZE_INC;
               fixed: 1 1;
               image.normal: "core_title_icon_done";
               color: 52 158 91 255;
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               color: 2 61 132 255;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: 2 61 132 255;
            }
         }
      }
      programs {
         program { name: "button_press";
            signal: "mouse,down,1*";
            source: "over2";
            script {
               if ((get_int(check_disabled) == 0) && (get_int(multi_down) == 0) && (get_int(mouse_down) == 0))
                 {
                    set_int(mouse_down, 1);
                    set_state(PART:"button_bg_clipper", "pressed", 0.0);
                    set_state(PART:"button_bg", "pressed", 0.0);
                    set_state(PART:"button_icon", "pressed", 0.0);
                    emit("elm,action,press", "");
                 }
            }
         }
         program { name: "button_unpress";
            signal: "mouse,up,1*";
            source: "over3";
            script {
               if ((get_int(check_disabled) == 0) && (get_int(mouse_down) == 1))
                 {
                    set_int(mouse_down, 0);
                    set_state(PART:"button_bg_clipper", "default", 0.0);
                    set_state(PART:"button_bg", "default", 0.0);
                    set_state(PART:"button_icon", "default", 0.0);
                    emit("elm,action,unpress", "");
                 }
            }
         }
         program { name: "button_click";
            signal: "mouse,clicked,1";
            source: "over2";
            script {
               if ((get_int(check_disabled) == 0) && (get_int(multi_down) == 0)) {
                 run_program(PROGRAM:"play_sound");
                 emit("elm,action,click", "");
               }
            }
         }
         program { name: "play_sound";
            action: RUN_PLUGIN "touch_sound";
         }
         program { name: "key_press";
            signal: "elm,action,pressed";
            source: "elm";
            script {
               if (get_int(check_disabled) == 0)
                 {
                    set_state(PART:"button_bg", "pressed", 0.0);
                    set_state(PART:"button_icon", "pressed", 0.0);
                    set_state(PART:"button_bg_clipper", "pressed", 0.0);
                 }
            }
         }
         program { name: "key_unpress";
            signal: "elm,action,unpressed";
            source: "elm";
            script {
               if (get_int(check_disabled) == 0)
                 {
                    set_state(PART:"button_bg", "default", 0.0);
                    set_state(PART:"button_icon", "default", 0.0);
                    set_state(PART:"button_bg_clipper", "default", 0.0);
                 }
            }
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            script {
               set_int(check_disabled, 0);
               set_state(PART:"button_bg", "default", 0.0);
               set_state(PART:"button_icon", "default", 0.0);
               set_state(PART:"button_bg_clipper", "default", 0.0);
            }
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            script {
               set_int(check_disabled, 1);
               set_state(PART:"button_bg", "disabled", 0.0);
               set_state(PART:"button_icon", "disabled", 0.0);
               set_state(PART:"button_bg_clipper", "disabled", 0.0);
            }
         }
         program {
            name: "multi_down";
            signal: "elm,action,multi,down";
            source: "elm";
            script {
               set_int(multi_down, 1);
            }
         }
         program {
            name: "multi_up";
            signal: "elm,action,multi,up";
            source: "elm";
            script {
               set_int(multi_down, 0);
            }
         }
      }
   }

   group { name: "elm/button/base/naviframe/title_cancel";
      inherit: "elm/button/base/naviframe/title";
      images {
         set {
            name: "core_title_button_bg";
            image {
               image: SMALL"images/Old/core_title_button_bg.png" COMP;
            }
            image {
               image: MEDIUM"images/Old/core_title_button_bg.png" COMP;
            }
         }
         set {
            name: "core_title_icon_cancel";
            image {
               image: SMALL"images/Old/core_title_icon_cancel.png" COMP;
            }
            image {
               image: MEDIUM"images/Old/core_title_icon_cancel.png" COMP;
            }
         }
      }
      parts {
         part { name: "button_bg";
            type: IMAGE;
            scale: 1;
            mouse_events: 0;
            clip_to: "button_bg_clipper";
            description { state: "default" 0.0;
               min: BUTTON_NAVIFRAME_TITLE_BUTTON_BG_SIZE_INC;
               max: BUTTON_NAVIFRAME_TITLE_BUTTON_BG_SIZE_INC;
               fixed: 1 1;
               image.normal: "core_title_button_bg";
               color: 255 255 255 255;
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               color: 104 141 186 255;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: 43 93 155 255;
            }
         }
         part { name: "button_icon";
            type: IMAGE;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: BUTTON_NAVIFRAME_TITLE_BUTTON_IMAGE_SIZE_INC;
               max: BUTTON_NAVIFRAME_TITLE_BUTTON_IMAGE_SIZE_INC;
               fixed: 1 1;
               image.normal: "core_title_icon_cancel";
               color: 224 33 33 255;
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               color: 2 61 132 255;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: 2 61 132 255;
            }
         }
      }
      programs {
         program { name: "button_press";
            signal: "mouse,down,1*";
            source: "over2";
            script {
               if ((get_int(check_disabled) == 0) && (get_int(multi_down) == 0) && (get_int(mouse_down) == 0))
                 {
                    set_int(mouse_down, 1);
                    set_state(PART:"button_bg_clipper", "pressed", 0.0);
                    set_state(PART:"button_bg", "pressed", 0.0);
                    set_state(PART:"button_icon", "pressed", 0.0);
                    emit("elm,action,press", "");
                 }
            }
         }
         program { name: "button_unpress";
            signal: "mouse,up,1*";
            source: "over3";
            script {
               if ((get_int(check_disabled) == 0) && (get_int(mouse_down) == 1))
                 {
                    set_int(mouse_down, 0);
                    set_state(PART:"button_bg_clipper", "default", 0.0);
                    set_state(PART:"button_bg", "default", 0.0);
                    set_state(PART:"button_icon", "default", 0.0);
                    emit("elm,action,unpress", "");
                 }
            }
         }
         program { name: "button_click";
            signal: "mouse,clicked,1";
            source: "over2";
            script {
               if ((get_int(check_disabled) == 0) && (get_int(multi_down) == 0)) {
                 run_program(PROGRAM:"play_sound");
                 emit("elm,action,click", "");
               }
            }
         }
         program { name: "play_sound";
            action: RUN_PLUGIN "touch_sound";
         }
         program { name: "key_press";
            signal: "elm,action,pressed";
            source: "elm";
            script {
               if (get_int(check_disabled) == 0)
                 {
                    set_state(PART:"button_bg", "pressed", 0.0);
                    set_state(PART:"button_icon", "pressed", 0.0);
                    set_state(PART:"button_bg_clipper", "pressed", 0.0);
                 }
            }
         }
         program { name: "key_unpress";
            signal: "elm,action,unpressed";
            source: "elm";
            script {
               if (get_int(check_disabled) == 0)
                 {
                    set_state(PART:"button_bg", "default", 0.0);
                    set_state(PART:"button_icon", "default", 0.0);
                    set_state(PART:"button_bg_clipper", "default", 0.0);
                 }
            }
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            script {
               set_int(check_disabled, 0);
               set_state(PART:"button_bg", "default", 0.0);
               set_state(PART:"button_icon", "default", 0.0);
               set_state(PART:"button_bg_clipper", "default", 0.0);
            }
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            script {
               set_int(check_disabled, 1);
               set_state(PART:"button_bg", "disabled", 0.0);
               set_state(PART:"button_icon", "disabled", 0.0);
               set_state(PART:"button_bg_clipper", "disabled", 0.0);
            }
         }
         program {
            name: "multi_down";
            signal: "elm,action,multi,down";
            source: "elm";
            script {
               set_int(multi_down, 1);
            }
         }
         program {
            name: "multi_up";
            signal: "elm,action,multi,up";
            source: "elm";
            script {
               set_int(multi_down, 0);
            }
         }
      }
   }

   group { name: "elm/button/base/naviframe/title_left";
      script {
         public mouse_down = 0;
         public multi_down = 0;
         public check_disabled = 0;
      }
      parts {
         part { name: "button_bg";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            clip_to: "button_bg_clipper";
            description { state: "default" 0.0;
               min: BUTTON_NAVIFRAME_TITLE_LEFT_BUTTON_SIZE_INC;
               max: BUTTON_NAVIFRAME_TITLE_LEFT_BUTTON_SIZE_INC;
               fixed: 1 1;
               color: 61 185 204 255;
            }
         }
         part { name: "button_bg_clipper";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1.to: "button_bg";
               rel2.to: "button_bg";
               color: 255 255 255 255;
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               color: 193 193 193 255;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: 61 185 204 77;
            }
         }
         part { name: "left_padding";
            type: SPACER;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: BUTTON_NAVIFRAME_TITLE_LEFT_BUTTON_LEFT_PADDING_WIDTH_INC 0;
               max: BUTTON_NAVIFRAME_TITLE_LEFT_BUTTON_LEFT_PADDING_WIDTH_INC -1;
               align: 0.0 0.0;
               fixed: 1 1;
               rel1 { to: "button_bg"; relative: 0.0 0.0; }
               rel2 { to: "button_bg"; relative: 0.0 1.0; }
            }
         }
         part { name: "right_padding";
            type: SPACER;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: BUTTON_NAVIFRAME_TITLE_LEFT_BUTTON_RIGHT_PADDING_WIDTH_INC 0;
               max: BUTTON_NAVIFRAME_TITLE_LEFT_BUTTON_RIGHT_PADDING_WIDTH_INC -1;
               align: 1.0 0.0;
               fixed: 1 1;
               rel1 { to: "button_bg"; relative: 1.0 0.0; }
               rel2 { to: "button_bg"; relative: 1.0 1.0; }
            }
         }
         part { name: "elm.text";
            type: TEXTBLOCK;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               align: 0.0 0.5;
               rel1 { to: "left_padding"; relative: 1.0 0.0; }
               rel2 { to: "right_padding"; relative: 0.0 1.0; }
               text {
                  style: "button_title_left";
                  min: 0 1;
               }
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               text.style: "button_title_left_press";
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               text.style: "button_title_left_dim";
            }
         }
         part { name: "over2";
            type: RECT;
            ignore_flags: ON_HOLD;
            description { state: "default" 0.0;
               rel1.to: "button_bg";
               rel2.to: "button_bg";
               color: 0 0 0 0;
            }
         }
         part { name: "over3";
            type: RECT;
            repeat_events: 1;
            description { state: "default" 0.0;
               rel1.to: "button_bg";
               rel2.to: "button_bg";
               color: 0 0 0 0;
            }
         }
         part { name: "disabler";
            type: RECT;
            description { state: "default" 0.0;
               rel1.to: "button_bg";
               rel2.to: "button_bg";
               color: 0 0 0 0;
               visible: 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
      }
      programs {
         program { name: "button_press";
            signal: "mouse,down,1*";
            source: "over2";
            script {
               if ((get_int(multi_down) == 0) && (get_int(mouse_down) == 0))
                 {
                    set_int(mouse_down, 1);
                    set_state(PART:"button_bg_clipper", "pressed", 0.0);
                    emit("elm,action,press", "");
                 }
            }
         }
         program { name: "button_unpress";
            signal: "mouse,up,1*";
            source: "over3";
            script {
               if (get_int(mouse_down) == 1)
                 {
                    set_int(mouse_down, 0);
                    set_state(PART:"button_bg_clipper", "default", 0.0);
                    emit("elm,action,unpress", "");
                 }
            }
         }
         program { name: "button_click";
            signal: "mouse,clicked,1";
            source: "over2";
            script {
               if (get_int(multi_down) == 0) {
                 run_program(PROGRAM:"play_sound");
                 emit("elm,action,click", "");
               }
            }
         }
         program { name: "play_sound";
            action: RUN_PLUGIN "touch_sound";
         }
         program { name: "key_press";
            signal: "elm,action,pressed";
            source: "elm";
            action: STATE_SET "pressed" 0.0;
            target: "button_bg_clipper";
         }
         program { name: "key_unpress";
            signal: "elm,action,unpressed";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "button_bg_clipper";
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "button_bg_clipper";
            target: "elm.text";
            target: "disabler";
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "button_bg_clipper";
            target: "elm.text";
            target: "disabler";
         }
         program {
            name: "multi_down";
            signal: "elm,action,multi,down";
            source: "elm";
            script {
               set_int(multi_down, 1);
            }
         }
         program {
            name: "multi_up";
            signal: "elm,action,multi,up";
            source: "elm";
            script {
               set_int(multi_down, 0);
            }
         }
      }
   }

   group { name: "elm/button/base/naviframe/title_right";
      inherit: "elm/button/base/naviframe/title_left";
      parts {
         part { name: "left_padding";
            type: SPACER;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: BUTTON_NAVIFRAME_TITLE_RIGHT_BUTTON_LEFT_PADDING_WIDTH_INC 0;
               max: BUTTON_NAVIFRAME_TITLE_RIGHT_BUTTON_LEFT_PADDING_WIDTH_INC -1;
               align: 0.0 0.0;
               fixed: 1 1;
               rel1 { to: "button_bg"; relative: 0.0 0.0; }
               rel2 { to: "button_bg"; relative: 0.0 1.0; }
            }
         }
         part { name: "right_padding";
            type: SPACER;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: BUTTON_NAVIFRAME_TITLE_RIGHT_BUTTON_RIGHT_PADDING_WIDTH_INC 0;
               max: BUTTON_NAVIFRAME_TITLE_RIGHT_BUTTON_RIGHT_PADDING_WIDTH_INC -1;
               align: 1.0 0.0;
               fixed: 1 1;
               rel1 { to: "button_bg"; relative: 1.0 0.0; }
               rel2 { to: "button_bg"; relative: 1.0 1.0; }
            }
         }
         part { name: "elm.text";
            type: TEXTBLOCK;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               align: 1.0 0.5;
               rel1 { to: "left_padding"; relative: 1.0 0.0; }
               rel2 { to: "right_padding"; relative: 0.0 1.0; }
               text {
                  style: "button_title_right";
                  min: 0 1;
               }
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               text.style: "button_title_right_press";
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               text.style: "button_title_right_dim";
            }
         }
      }
   }

   group { name: "elm/button/base/naviframe/back_btn/default";
      alias: "elm/button/base/naviframe/end_btn/default";
      images {
         set {
            name: "core_icon_back";
            image {
               image: SMALL"images/Navigation_elements/core_icon_back.png" COMP;
            }
            image {
               image: MEDIUM"images/Navigation_elements/core_icon_back.png" COMP;
            }
         }
      }
      script {
         public mouse_down = 0;
         public multi_down = 0;
         public check_disabled = 0;
      }
      parts {
         part { name: "button_bg";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            clip_to: "button_bg_clipper";
            description { state: "default" 0.0;
               min: BUTTON_NAVIFRAME_BACK_BUTTON_SIZE_INC;
               max: BUTTON_NAVIFRAME_BACK_BUTTON_SIZE_INC;
               fixed: 1 1;
               color: 61 185 204 255;
            }
         }
         part { name: "button_bg_clipper";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1.to: "button_bg";
               rel2.to: "button_bg";
               color: 255 255 255 255;
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               color: 193 193 193 255;
            }
         }
         part { name: "button_icon";
            type: IMAGE;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: BUTTON_NAVIFRAME_BACK_BUTTON_SIZE_INC;
               max: BUTTON_NAVIFRAME_BACK_BUTTON_SIZE_INC;
               fixed: 1 1;
               color: 255 255 255 255;
               image.normal: "core_icon_back";
            }
         }
         part { name: "over2";
            type: RECT;
            ignore_flags: ON_HOLD;
            description { state: "default" 0.0;
               rel1.to: "button_bg";
               rel2.to: "button_bg";
               color: 0 0 0 0;
            }
         }
         part { name: "over3";
            type: RECT;
            repeat_events: 1;
            description { state: "default" 0.0;
               rel1.to: "button_bg";
               rel2.to: "button_bg";
               color: 0 0 0 0;
            }
         }
         part { name: "disabler";
            type: RECT;
            description { state: "default" 0.0;
               rel1.to: "button_bg";
               rel2.to: "button_bg";
               color: 0 0 0 0;
               visible: 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
      }
      programs {
         program { name: "button_press";
            signal: "mouse,down,1*";
            source: "over2";
            script {
               if ((get_int(multi_down) == 0) && (get_int(mouse_down) == 0))
                 {
                    set_int(mouse_down, 1);
                    set_state(PART:"button_bg_clipper", "pressed", 0.0);
                    emit("elm,action,press", "");
                 }
            }
         }
         program { name: "button_unpress";
            signal: "mouse,up,1*";
            source: "over3";
            script {
               if (get_int(mouse_down) == 1)
                 {
                    set_int(mouse_down, 0);
                    set_state(PART:"button_bg_clipper", "default", 0.0);
                    emit("elm,action,unpress", "");
                 }
            }
         }
         program { name: "button_click";
            signal: "mouse,clicked,1";
            source: "over2";
            script {
               if (get_int(multi_down) == 0) {
                 run_program(PROGRAM:"play_sound");
                 emit("elm,action,click", "");
               }
            }
         }
         program { name: "play_sound";
            action: RUN_PLUGIN "touch_sound";
         }
         program { name: "key_press";
            signal: "elm,action,pressed";
            source: "elm";
            action: STATE_SET "pressed" 0.0;
            target: "button_bg_clipper";
         }
         program { name: "key_unpress";
            signal: "elm,action,unpressed";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "button_bg_clipper";
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "button_bg_clipper";
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "button_bg_clipper";
         }
         program {
            name: "multi_down";
            signal: "elm,action,multi,down";
            source: "elm";
            script {
               set_int(multi_down, 1);
            }
         }
         program {
            name: "multi_up";
            signal: "elm,action,multi,up";
            source: "elm";
            script {
               set_int(multi_down, 0);
            }
         }
      }
   }


   group { name: "elm/button/base/naviframe/drawers";
      images {
         set {
            name: "core_icon_drawer";
            image {
               image: SMALL"images/Old/core_icon_drawer.png" COMP;
            }
            image {
               image: MEDIUM"images/Old/core_icon_drawer.png" COMP;
            }
         }
      }
      script {
         public mouse_down = 0;
         public multi_down = 0;
      }
      parts {
         part { name: "button_bg";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            clip_to: "button_bg_clipper";
            description { state: "default" 0.0;
               min: BUTTON_NAVIFRAME_DRAWERS_WIDTH_INC 0;
               max: BUTTON_NAVIFRAME_DRAWERS_WIDTH_INC -1;
               fixed: 1 0;
            }
         }
         part { name: "button_bg_clipper";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1.to: "button_bg";
               rel2.to: "button_bg";
               visible: 0;
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               color: 2 48 104 255;
               visible: 1;
            }
         }
         part { name: "button_icon";
            type: IMAGE;
            scale: 1;
            mouse_events: 0;
            clip_to: "button_icon_clipper";
            description { state: "default" 0.0;
               min: BUTTON_NAVIFRAME_DRAWERS_IMAGE_SIZE_INC;
               max: BUTTON_NAVIFRAME_DRAWERS_IMAGE_SIZE_INC;
               fixed: 1 1;
               align: 0.0 0.5;
               rel1 { to: "button_bg"; relative: 0.0 0.0; }
               rel2 { to: "button_bg"; relative: 0.0 1.0; }
               image.normal: "core_icon_drawer";
            }
         }
         part { name: "button_icon_clipper";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1.to: "button_icon";
               rel2.to: "button_icon";
               color_class: "F043L1i";
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color_class: "F043L1iD";
            }
         }
         part { name: "over2";
            type: RECT;
            ignore_flags: ON_HOLD;
            description { state: "default" 0.0;
               rel1.to: "button_bg";
               rel2.to: "button_bg";
               color: 0 0 0 0;
            }
         }
         part { name: "over3";
            type: RECT;
            repeat_events: 1;
            description { state: "default" 0.0;
               rel1.to: "button_bg";
               rel2.to: "button_bg";
               color: 0 0 0 0;
            }
         }
         part { name: "disabler";
            type: RECT;
            description { state: "default" 0.0;
               rel1.to: "button_bg";
               rel2.to: "button_bg";
               color: 0 0 0 0;
               visible: 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
      }
      programs {
         program { name: "button_press";
            signal: "mouse,down,1*";
            source: "over2";
            script {
               if ((get_int(multi_down) == 0) && (get_int(mouse_down) == 0))
                 {
                    set_int(mouse_down, 1);
                    set_state(PART:"button_bg_clipper", "pressed", 0.0);
                    emit("elm,action,press", "");
                 }
            }
         }
         program { name: "button_unpress";
            signal: "mouse,up,1*";
            source: "over3";
            script {
               if (get_int(mouse_down) == 1)
                 {
                    set_int(mouse_down, 0);
                    set_state(PART:"button_bg_clipper", "default", 0.0);
                    emit("elm,action,unpress", "");
                 }
            }
         }
         program { name: "button_click";
            signal: "mouse,clicked,1";
            source: "over2";
            script {
               if (get_int(multi_down) == 0) {
                 run_program(PROGRAM:"touch_sound");
                 emit("elm,action,click", "");
               }
            }
         }
         program { name: "touch_sound";
            action: RUN_PLUGIN "touch_sound";
         }
         program { name: "key_press";
            signal: "elm,action,pressed";
            source: "elm";
            action: STATE_SET "pressed" 0.0;
            target: "button_bg_clipper";
         }
         program { name: "key_unpress";
            signal: "elm,action,unpressed";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "button_bg_clipper";
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "button_icon_clipper";
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "button_icon_clipper";
         }
         program {
            name: "multi_down";
            signal: "elm,action,multi,down";
            source: "elm";
            script {
               set_int(multi_down, 1);
            }
         }
         program {
            name: "multi_up";
            signal: "elm,action,multi,up";
            source: "elm";
            script {
               set_int(multi_down, 0);
            }
         }
      }
   }

// FIXME: style for focus UI (and temporally, for ctxpopup)
// This style should have focus image for "focus_image" part after the image is added
#define BUTTON_DEFAULT_FOCUS_STYLES(style_name) \
   group { name: "elm/button/base/"style_name; \
      data { \
         item: "focus_highlight" "on"; \
      } \
      images { \
         set { \
         name: "core_focus.#"; \
            image { \
               image: SMALL"images/Presentation_views/core_focus.#.png" COMP; \
            } \
            image { \
               image: MEDIUM"images/Presentation_views/core_focus.#.png" COMP; \
            } \
         } \
      } \
      script { \
         public mouse_down = 0; \
         public multi_down = 0; \
      } \
      parts { \
         part { name: "elm.swallow.content"; \
            type: SWALLOW; \
            scale: 1; \
            description { state: "default" 0.0; \
            } \
         } \
         part { name: "focus_image"; \
            scale: 1; \
            type: IMAGE; \
            mouse_events: 0; \
            repeat_events: 1; \
            description { state: "default" 0.0; \
               image.normal: "core_focus.#"; \
               visible: 0; \
            } \
            description { state: "focused" 0.0; \
               inherit: "default" 0.0; \
               visible: 1; \
               color: 61 185 204 255; \
            } \
         } \
         part { name: "over2"; \
            type: RECT; \
            repeat_events: 1; \
            ignore_flags: ON_HOLD; \
            description { state: "default" 0.0; \
               color: 0 0 0 0; \
            } \
         } \
         part { name: "over3"; \
            type: RECT; \
            repeat_events: 1; \
            description { state: "default" 0.0; \
               color: 0 0 0 0; \
            } \
         } \
      } \
      programs { \
         program { name: "button_press"; \
            signal: "mouse,down,1*"; \
            source: "over2"; \
            script { \
               if ((get_int(multi_down) == 0) && (get_int(mouse_down) == 0)) \
                 { \
                     set_int(mouse_down, 1); \
                     emit("elm,action,press", ""); \
                 } \
            } \
         } \
         program { name: "button_unpress"; \
            signal: "mouse,up,1*"; \
            source: "over3"; \
            script { \
               if (get_int(mouse_down) == 1) \
                 { \
                     set_int(mouse_down, 0); \
                     emit("elm,action,unpress", ""); \
                  } \
            } \
         } \
         program { name: "button_click"; \
            signal: "mouse,clicked,1"; \
            source: "over2"; \
            script { \
               if (get_int(multi_down) == 0) { \
                 emit("elm,action,click", ""); \
               } \
            } \
         } \
         program { name: "action_focus"; \
            signal: "elm,action,focus_highlight,show"; \
            source: "elm"; \
            action: STATE_SET "focused" 0.0; \
            target: "focus_image"; \
         } \
         program { name: "action_unfocus"; \
            signal: "elm,action,focus_highlight,hide"; \
            source: "elm"; \
            action: STATE_SET "default" 0.0; \
            target: "focus_image"; \
         } \
         program { \
            name: "multi_down"; \
            signal: "elm,action,multi,down"; \
            source: "elm"; \
            script { \
               set_int(multi_down, 1); \
            } \
         } \
         program { \
            name: "multi_up"; \
            signal: "elm,action,multi,up"; \
            source: "elm"; \
            script { \
               set_int(multi_down, 0); \
            } \
         } \
      } \
   } \

BUTTON_DEFAULT_FOCUS_STYLES("focus")

   group { name: "elm/button/base/editfield_clear";
      alias: "elm/button/base/search_clear";
      images {
         set {
            name: "core_button_icon_clear";
            image {
               image: SMALL"images/Presentation_views/core_button_icon_clear.png" COMP;
            }
            image {
               image: MEDIUM"images/Presentation_views/core_button_icon_clear.png" COMP;
            }
         }
      }
      script {
         public mouse_down = 0;
         public multi_down = 0;
      }
      parts {
         part { name: "bg";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               min: BUTTON_EDITFIELD_CLEAR_BUTTON_MIN_MAX_INC;
               max: BUTTON_EDITFIELD_CLEAR_BUTTON_MIN_MAX_INC;
            }
         }
         part { name: "button_image";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
            }
         }
         part { name: "clear_button";
            scale: 1;
            mouse_events: 0;
            clip_to: "clear_button.clipper";
            description { state: "default" 0.0;
               min: BUTTON_EDITFIELD_CLEAR_BUTTON_IMAGE_MIN_MAX_INC;
               max: BUTTON_EDITFIELD_CLEAR_BUTTON_IMAGE_MIN_MAX_INC;
               align: 0.5 0.5;
               image.normal: "core_button_icon_clear";
            }
         }
         part { name: "clear_button.clipper";
            type: RECT;
            description { state: "default" 0.0;
               color: 61 184 204 255;
            }
            description { state: "pressed" 0.0;
               color: 34 104 114 255;
            }
            description { state: "disabled" 0.0;
               color: 0 0 0 76;
            }
         }
         part { name: "over2";
            type: RECT;
            ignore_flags: ON_HOLD;
            description { state: "default" 0.0;
               rel1.to: "bg";
               rel2.to: "bg";
               color: 0 0 0 0;
            }
         }
         part { name: "over3";
            type: RECT;
            repeat_events: 1;
            description { state: "default" 0.0;
               rel1.to: "bg";
               rel2.to: "bg";
               color: 0 0 0 0;
            }
         }
         part { name: "disabler";
            type: RECT;
            description { state: "default" 0.0;
               rel1.to: "bg";
               rel2.to: "bg";
               color: 0 0 0 0;
               visible: 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
      }
      programs {
         program { name: "button_press";
            signal: "mouse,down,1*";
            source: "over2";
            script {
               if ((get_int(multi_down) == 0) && (get_int(mouse_down) == 0))
                 {
                     set_int(mouse_down, 1);
                     run_program(PROGRAM:"button_press2");
                 }
            }
         }
         program { name: "button_press2";
            action: SIGNAL_EMIT "elm,action,press" "";
            after: "button_press_anim";
         }
         program { name: "button_press_anim";
            action: STATE_SET "pressed" 0.0;
            target: "button_image";
            target: "clear_button.clipper";
         }
         program { name: "button_unpress";
            signal: "mouse,up,1*";
            source: "over3";
            script {
               if (get_int(mouse_down) == 1)
                 {
                     set_int(mouse_down, 0);
                     run_program(PROGRAM:"button_unpress2");
                     run_program(PROGRAM:"button_unpress_anim");
                  }
            }
         }
         program { name: "button_unpress2";
            action: SIGNAL_EMIT "elm,action,unpress" "";
         }
         program { name: "button_unpress_anim";
            action: STATE_SET "default" 0.0;
            target: "button_image";
            target: "clear_button.clipper";
         }
         program { name: "button_click";
            signal: "mouse,clicked,1";
            source: "over2";
            script {
               if (get_int(multi_down) == 0) {
                 run_program(PROGRAM:"play_sound");
                 run_program(PROGRAM:"button_click2");
               }
            }
         }
         program { name: "play_sound";
            action: RUN_PLUGIN "touch_sound";
         }
         program { name: "button_click2";
            action: SIGNAL_EMIT "elm,action,click" "";
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "button_image";
            target: "disabler";
            target: "clear_button.clipper";
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "button_image";
            target: "disabler";
            target: "clear_button.clipper";
         }
         program {
            name: "multi_down";
            signal: "elm,action,multi,down";
            source: "elm";
            script {
               set_int(multi_down, 1);
            }
         }
         program {
            name: "multi_up";
            signal: "elm,action,multi,up";
            source: "elm";
            script {
               set_int(multi_down, 0);
            }
         }
      }
   }

   group { name: "elm/button/base/option";
      images {
         set {
            name: "core_title_icon_option";
            image {
               image: SMALL"images/Old/core_title_icon_option.png" COMP;
            }
            image {
               image: MEDIUM"images/Old/core_title_icon_option.png" COMP;
            }
         }
      }
      script {
         public mouse_down = 0;
         public multi_down = 0;
      }
      parts {
         part { name: "bg";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               min: BUTTON_OPTION_MIN_MAX_INC;
               max: BUTTON_OPTION_MIN_MAX_INC;
            }
         }
         part { name: "button_image";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
            }
         }
         part { name: "option_button";
            scale: 1;
            mouse_events: 0;
            clip_to: "option_button.clipper";
            description { state: "default" 0.0;
               min: BUTTON_OPTION_IMAGE_MIN_MAX_INC;
               max: BUTTON_OPTION_IMAGE_MIN_MAX_INC;
               align: 0.5 0.5;
               image.normal: "core_title_icon_option";
            }
         }
         part { name: "option_button.clipper";
            type: RECT;
            description { state: "default" 0.0;
               color: 2 61 132 255;
            }
            description { state: "pressed" 0.0;
               color: 1 43 94 255;
            }
            description { state: "disabled" 0.0;
               color: 7 7 7 76;
            }
         }
         part { name: "over2";
            type: RECT;
            ignore_flags: ON_HOLD;
            description { state: "default" 0.0;
               rel1.to: "bg";
               rel2.to: "bg";
               color: 0 0 0 0;
            }
         }
         part { name: "over3";
            type: RECT;
            repeat_events: 1;
            description { state: "default" 0.0;
               rel1.to: "bg";
               rel2.to: "bg";
               color: 0 0 0 0;
            }
         }
         part { name: "disabler";
            type: RECT;
            description { state: "default" 0.0;
               rel1.to: "bg";
               rel2.to: "bg";
               color: 0 0 0 0;
               visible: 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
      }
      programs {
         program { name: "button_press";
            signal: "mouse,down,1*";
            source: "over2";
            script {
               if ((get_int(multi_down) == 0) && (get_int(mouse_down) == 0))
                 {
                     set_int(mouse_down, 1);
                     run_program(PROGRAM:"button_press2");
                 }
            }
         }
         program { name: "button_press2";
            action: SIGNAL_EMIT "elm,action,press" "";
            after: "button_press_anim";
         }
         program { name: "button_press_anim";
            action: STATE_SET "pressed" 0.0;
            target: "button_image";
            target: "option_button.clipper";
         }
         program { name: "button_unpress";
            signal: "mouse,up,1*";
            source: "over3";
            script {
               if (get_int(mouse_down) == 1)
                 {
                     set_int(mouse_down, 0);
                     run_program(PROGRAM:"button_unpress2");
                     run_program(PROGRAM:"button_unpress_anim");
                  }
            }
         }
         program { name: "button_unpress2";
            action: SIGNAL_EMIT "elm,action,unpress" "";
         }
         program { name: "button_unpress_anim";
            action: STATE_SET "default" 0.0;
            target: "button_image";
            target: "option_button.clipper";
         }
         program { name: "button_click";
            signal: "mouse,clicked,1";
            source: "over2";
            script {
               if (get_int(multi_down) == 0) {
                 run_program(PROGRAM:"play_sound");
                 run_program(PROGRAM:"button_click2");
               }
            }
         }
         program { name: "play_sound";
            action: RUN_PLUGIN "touch_sound";
         }
         program { name: "button_click2";
            action: SIGNAL_EMIT "elm,action,click" "";
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "button_image";
            target: "disabler";
            target: "option_button.clipper";
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "button_image";
            target: "disabler";
            target: "option_button.clipper";
         }
         program {
            name: "multi_down";
            signal: "elm,action,multi,down";
            source: "elm";
            script {
               set_int(multi_down, 1);
            }
         }
         program {
            name: "multi_up";
            signal: "elm,action,multi,up";
            source: "elm";
            script {
               set_int(multi_down, 0);
            }
         }
      }
   }

   group { name: "elm/button/base/datetime/ampm";
      inherit: "elm/button/base/default";
      parts {
         part { name: "base";
            description { state: "default" 0.0;
               min: DATETIME_AMPM_BUTTON_WIDTH_SIZE_INC DATETIME_AMPM_BUTTON_HEIGHT_SIZE_INC;
            }
         }
         part { name: "tizen_vg_shape";
            description { state: "default" 0.0;
               min: 0 DATETIME_AMPM_BUTTON_HEIGHT_SIZE_INC;
            }
         }
          part { name: "tizen_vg_shape_clipper";
              description { state: "unselected" 0.0;
                 color: 204 204 204 255;
              }
         }
         part { name: "padding_left_top";
            description { state: "default" 0.0;
               min: DATETIME_AMPM_BUTTON_TOP_LEFT_PADDING_INC;
            }
         }
         part { name: "padding_right_bottom";
            description { state: "default" 0.0;
               min: DATETIME_AMPM_BUTTON_BOTTOM_RIGHT_PADDING_INC;
            }
         }
         part { name: "elm.text";
            description { state: "default" 0.0;
               text.style: "button_ampm";
            }
            description { state: "unselected" 0.0;
               text.style: "button_ampm_dim";
            }
         }
      }
      program { name: "unselected";
         signal: "elm,action,button,unselected";
         source: "elm";
         action: STATE_SET "unselected" 0.0;
         target: "tizen_vg_shape_clipper";
         target: "elm.text";
      }
      program { name: "selected";
         signal: "elm,action,button,selected";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "tizen_vg_shape_clipper";
         target: "elm.text";
      }
   }

/******************* SPINNER BUTTONS STYLES **********************/

   group { name: "elm/button/base/spinner/increase/default";
      alias: "elm/button/base/spinner/increase/horizontal";
      data.item: "focus_highlight" "on";
      images {
         image: "core_icon_picker_arrow_right.png" COMP;
      }
      script {
         public mouse_down = 0;
         public multi_down = 0;
      }
      parts {
         part { name: "arrow.image.bg";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               align: 0.5 0.0;
               min: SPINNER_LEFT_RIGHT_BG_IMAGE_SIZE_INC;
               max: SPINNER_LEFT_RIGHT_BG_IMAGE_SIZE_INC;
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               color: 2 61 132 127;
               visible: 1;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
            }
         }
         part { name: "arrow.image";
            scale: 1;
            description { state: "default" 0.0;
               rel1.to: "arrow.image.bg";
               rel2.to: "arrow.image.bg";
               min: SPINNER_LEFT_RIGHT_ARROW_IMAGE_SIZE_INC;
               max: SPINNER_LEFT_RIGHT_ARROW_IMAGE_SIZE_INC;
               color: 111 125 142 255;
               image.normal: "core_icon_picker_arrow_right.png";
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               color: 244 244 244 255;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: 111 125 142 127;
            }
         }
         part { name: "focus_image";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               align: 0.5 0.0;
               rel1.to: "arrow.image.bg";
               rel2.to: "arrow.image.bg";
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
            }
         }
         part { name: "over";
            type: RECT;
            repeat_events: 1;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part { name: "disabler";
            type: RECT;
            description { state: "default" 0.0;
               color: 0 0 0 0;
               visible: 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
      }
      programs {
         program { name: "button_press";
            signal: "mouse,down,1*";
            source: "over";
            script {
               if ((get_int(multi_down) == 0) &&
                   (get_int(mouse_down) == 0)) {
                     set_int(mouse_down, 1);
                     run_program(PROGRAM:"button_press2");
               }
            }
         }
         program { name: "button_press2";
            action: SIGNAL_EMIT "elm,action,press" "";
            after: "button_press_anim";
         }
         program { name: "button_press_anim";
            action: STATE_SET "pressed" 0.0;
            target: "arrow.image.bg";
            target: "arrow.image";
         }
         program { name: "button_unpress";
            signal: "mouse,up,1*";
            source: "over";
            script {
               if (get_int(mouse_down) == 1) {
                     set_int(mouse_down, 0);
                     run_program(PROGRAM:"button_unpress2");
                     run_program(PROGRAM:"button_unpress_anim");
               }
            }
         }
         program { name: "button_unpress2";
            action: SIGNAL_EMIT "elm,action,unpress" "";
         }
         program { name: "button_unpress_anim";
            action: STATE_SET "default" 0.0;
            target: "arrow.image.bg";
            target: "arrow.image";
         }
         program { name: "button_click";
            signal: "mouse,clicked,1";
            source: "over";
            script {
               if (get_int(multi_down) == 0) {
                 run_program(PROGRAM:"play_sound");
                 run_program(PROGRAM:"button_click2");
               }
            }
         }
         program { name: "play_sound";
            action: RUN_PLUGIN "touch_sound";
         }
         program { name: "longpress_sound";
            signal: "elm,action,longpress";
            source: "elm";
            action: RUN_PLUGIN "touch_haptic";
         }
         program { name: "action_unpressed";
            signal: "elm,action,unpressed";
            source: "elm";
            after: "button_unpress_anim";
         }
         program { name: "action_pressed";
            signal: "elm,action,pressed";
            source: "elm";
            after: "button_press_anim";
         }
         program { name: "button_click2";
            action: SIGNAL_EMIT "elm,action,click" "";
         }
         program { name: "action_focus";
            signal: "elm,action,focus_highlight,show";
            source: "elm";
            action: STATE_SET "focused" 0.0;
            target: "focus_image";
         }
         program { name: "action_unfocus";
            signal: "elm,action,focus_highlight,hide";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "focus_image";
         }
         program { name: "access_pressed";
            signal: "elm,action,anim,activate";
            source: "elm";
            action: STATE_SET "pressed" 0.0;
            target: "arrow.image.bg";
            target: "arrow.image";
            after: "access_pressed_anim";
         }
         program { name: "access_pressed_anim";
            action: STATE_SET "default" 0.0;
            transition: DECELERATE 0.1;
            target: "arrow.image.bg";
            target: "arrow.image";
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "arrow.image.bg";
            target: "arrow.image";
            target: "disabler";
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "arrow.image.bg";
            target: "arrow.image";
            target: "disabler";
         }
         program {
            name: "multi_down";
            signal: "elm,action,multi,down";
            source: "elm";
            script {
               set_int(multi_down, 1);
            }
         }
         program {
            name: "multi_up";
            signal: "elm,action,multi,up";
            source: "elm";
            script {
               set_int(multi_down, 0);
            }
         }
      }
   }

   group { name: "elm/button/base/spinner/decrease/default";
      inherit: "elm/button/base/spinner/increase/default";
      alias: "elm/button/base/spinner/decrease/horizontal";
      images {
         image: "core_icon_picker_arrow_left.png" COMP;
      }
      parts {
         part { name: "arrow.image";
            scale: 1;
            description { state: "default" 0.0;
               rel1.to: "arrow.image.bg";
               rel2.to: "arrow.image.bg";
               min: SPINNER_LEFT_RIGHT_ARROW_IMAGE_SIZE_INC;
               max: SPINNER_LEFT_RIGHT_ARROW_IMAGE_SIZE_INC;
               color: 111 125 142 255;
               image.normal: "core_icon_picker_arrow_left.png";
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               color: 244 244 244 255;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: 111 125 142 127;
            }
         }
      }
   }

   group { name: "elm/button/base/spinner/default";
      alias: "elm/button/base/spinner/horizontal";
      data.item: "focus_highlight" "on";
      parts {
         part { name: "bg";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               min: SPINNER_VERTICAL_TEXT_BUTTON_BG_SIZE_INC;
            }
         }
         part { name: "elm.text";
            type: TEXT;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               color: 7 7 7 255;
               rel1.to: "bg";
               rel2.to: "bg";
               text {
                  font: "Tizen:style=Light";
                  size: 106;
                  text_class: "tizen";
               }
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0 0 ;
            }
         }
         part { name: "focus_image";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               rel1.to: "bg";
               rel2.to: "bg";
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
            }
         }
         part { name: "over";
            type: RECT;
            repeat_events: 1;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part { name: "disabler";
            type: RECT;
            description { state: "default" 0.0;
               color: 0 0 0 0;
               visible: 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
      }
      programs {
         program { name: "button_click";
            signal: "mouse,clicked,1";
            source: "over";
            script {
                 run_program(PROGRAM:"play_sound");
                 run_program(PROGRAM:"button_click2");
            }
         }
         program { name: "play_sound";
            action: RUN_PLUGIN "touch_sound";
         }
         program { name: "button_click2";
            action: SIGNAL_EMIT "elm,action,click" "";
         }
         program { name: "action_focus";
            signal: "elm,action,focus_highlight,show";
            source: "elm";
            action: STATE_SET "focused" 0.0;
            target: "focus_image";
         }
         program { name: "action_unfocus";
            signal: "elm,action,focus_highlight,hide";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "focus_image";
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "disabler";
            target: "elm.text";
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "disabler";
            target: "elm.text";
         }
      }
   }

/////////////////////////
// Vertical /////////////
/////////////////////////
   group { name: "elm/button/base/spinner/increase/vertical";
      alias: "elm/button/base/spinner/increase/vertical_time_picker";
      alias: "elm/button/base/spinner/increase/vertical_date_picker";
      alias: "elm/button/base/spinner/increase/datetime";
      data.item: "focus_highlight" "on";
      images {
         image: "core_icon_picker_arrow_up.png" COMP;
      }
      script {
         public mouse_down = 0;
         public multi_down = 0;
      }
      parts {
         part { name: "arrow.image.bg";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               align: 0.5 0.0;
               min: SPINNER_UP_DOWN_BG_IMAGE_SIZE_INC;
               max: SPINNER_UP_DOWN_BG_IMAGE_SIZE_INC;
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               color: 61 184 204 76;
               visible: 1;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
            }
         }
         part { name: "arrow.image";
            scale: 1;
            description { state: "default" 0.0;
               rel1.to: "arrow.image.bg";
               rel2.to: "arrow.image.bg";
               min: SPINNER_UP_DOWN_ARROW_IMAGE_SIZE_INC;
               max: SPINNER_UP_DOWN_ARROW_IMAGE_SIZE_INC;
               color: 204 204 204 255;
               image.normal: "core_icon_picker_arrow_up.png";
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: 204 204 204 127;
            }
         }
         part { name: "focus_image";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               align: 0.5 0.0;
               rel1.to: "arrow.image.bg";
               rel2.to: "arrow.image.bg";
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
            }
         }
         part { name: "over";
            type: RECT;
            repeat_events: 1;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part { name: "disabler";
            type: RECT;
            description { state: "default" 0.0;
               color: 0 0 0 0;
               visible: 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
      }
      programs {
         program { name: "button_press";
            signal: "mouse,down,1*";
            source: "over";
            script {
               if ((get_int(multi_down) == 0) &&
                   (get_int(mouse_down) == 0)) {
                     set_int(mouse_down, 1);
                     run_program(PROGRAM:"button_press2");
               }
            }
         }
         program { name: "button_press2";
            action: SIGNAL_EMIT "elm,action,press" "";
            after: "button_press_anim";
         }
         program { name: "button_press_anim";
            action: STATE_SET "pressed" 0.0;
            target: "arrow.image.bg";
            target: "arrow.image";
         }
         program { name: "button_unpress";
            signal: "mouse,up,1*";
            source: "over";
            script {
               if (get_int(mouse_down) == 1) {
                     set_int(mouse_down, 0);
                     run_program(PROGRAM:"button_unpress2");
                     run_program(PROGRAM:"button_unpress_anim");
               }
            }
         }
         program { name: "button_unpress2";
            action: SIGNAL_EMIT "elm,action,unpress" "";
         }
         program { name: "button_unpress_anim";
            action: STATE_SET "default" 0.0;
            target: "arrow.image.bg";
            target: "arrow.image";
         }
         program { name: "button_click";
            signal: "mouse,clicked,1";
            source: "over";
            script {
               if (get_int(multi_down) == 0) {
                 run_program(PROGRAM:"play_sound");
                 run_program(PROGRAM:"button_click2");
               }
            }
         }
         program { name: "play_sound";
            action: RUN_PLUGIN "touch_sound";
         }
         program { name: "longpress_sound";
            signal: "elm,action,longpress";
            source: "elm";
            action: RUN_PLUGIN "touch_haptic";
         }
         program { name: "action_unpressed";
            signal: "elm,action,unpressed";
            source: "elm";
            after: "button_unpress_anim";
         }
         program { name: "action_pressed";
            signal: "elm,action,pressed";
            source: "elm";
            after: "button_press_anim";
         }
         program { name: "button_click2";
            action: SIGNAL_EMIT "elm,action,click" "";
         }
         program { name: "action_focus";
            signal: "elm,action,focus_highlight,show";
            source: "elm";
            action: STATE_SET "focused" 0.0;
            target: "focus_image";
         }
         program { name: "action_unfocus";
            signal: "elm,action,focus_highlight,hide";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "focus_image";
         }
         program { name: "access_pressed";
            signal: "elm,action,anim,activate";
            source: "elm";
            action: STATE_SET "pressed" 0.0;
            target: "arrow.image.bg";
            target: "arrow.image";
            after: "access_pressed_anim";
         }
         program { name: "access_pressed_anim";
            action: STATE_SET "default" 0.0;
            transition: DECELERATE 0.1;
            target: "arrow.image.bg";
            target: "arrow.image";
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "arrow.image.bg";
            target: "arrow.image";
            target: "disabler";
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "arrow.image.bg";
            target: "arrow.image";
            target: "disabler";
         }
         program {
            name: "multi_down";
            signal: "elm,action,multi,down";
            source: "elm";
            script {
               set_int(multi_down, 1);
            }
         }
         program {
            name: "multi_up";
            signal: "elm,action,multi,up";
            source: "elm";
            script {
               set_int(multi_down, 0);
            }
         }
      }
   }

   group { name: "elm/button/base/spinner/decrease/vertical";
      inherit: "elm/button/base/spinner/increase/vertical";
      alias: "elm/button/base/spinner/decrease/vertical_time_picker";
      alias: "elm/button/base/spinner/decrease/vertical_date_picker";
      alias: "elm/button/base/spinner/decrease/datetime";
      images {
         image: "core_icon_picker_arrow_down.png" COMP;
      }
      parts {
         part { name: "arrow.image";
            scale: 1;
            description { state: "default" 0.0;
               rel1.to: "arrow.image.bg";
               rel2.to: "arrow.image.bg";
               min: SPINNER_UP_DOWN_ARROW_IMAGE_SIZE_INC;
               max: SPINNER_UP_DOWN_ARROW_IMAGE_SIZE_INC;
               color: 204 204 204 255;
               image.normal: "core_icon_picker_arrow_down.png";
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: 204 204 204 127;
            }
         }
      }
   }

   group { name: "elm/button/base/spinner/vertical";
      alias: "elm/button/base/spinner/vertical_time_picker";
      alias: "elm/button/base/spinner/datetime";
      data.item: "focus_highlight" "on";
      parts {
         part { name: "bg";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               min: SPINNER_VERTICAL_TEXT_BUTTON_BG_SIZE_INC;
            }
         }
         part { name: "elm.text";
            type: TEXT;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               color: 0 0 0 255;
               rel1.to: "bg";
               rel2.to: "bg";
               text {
                  // FIXME: It should be changed to SNum-3L font.
                  font: "Tizen:style=Light";
                  size: 106;
                  text_class: "tizen";
               }
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0 0 ;
            }
         }
         part { name: "focus_image";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               rel1.to: "bg";
               rel2.to: "bg";
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
            }
         }
         part { name: "over";
            type: RECT;
            repeat_events: 1;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part { name: "disabler";
            type: RECT;
            description { state: "default" 0.0;
               color: 0 0 0 0;
               visible: 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
      }
      programs {
         program { name: "button_click";
            signal: "mouse,clicked,1";
            source: "over";
            script {
                 run_program(PROGRAM:"play_sound");
                 run_program(PROGRAM:"button_click2");
            }
         }
         program { name: "play_sound";
            action: RUN_PLUGIN "touch_sound";
         }
         program { name: "button_click2";
            action: SIGNAL_EMIT "elm,action,click" "";
         }
         program { name: "action_focus";
            signal: "elm,action,focus_highlight,show";
            source: "elm";
            action: STATE_SET "focused" 0.0;
            target: "focus_image";
         }
         program { name: "action_unfocus";
            signal: "elm,action,focus_highlight,hide";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "focus_image";
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "disabler";
            target: "elm.text";
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "disabler";
            target: "elm.text";
         }
      }
   }

group { name: "elm/button/base/spinner/vertical_date_picker";
   inherit: "elm/button/base/spinner/vertical";
   parts {
      part { name: "bg";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            min: SPINNER_VERTICAL_DATE_PICKER_TEXT_BUTTON_SIZE_INC;
         }
      }
      part { name: "elm.text";
         type: TEXT;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            color: 0 0 0 255;
            rel1.to: "bg";
            rel2.to: "bg";
            text {
               font: "TizenSans:style=Light";
               size: 60;
               size_range: 60 90;
               fit: 1 0;
            }
         }
         description { state: "active" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
   }
}
/***********************SPINNER BUTTONS STYLES******************************/

group { name: "elm/button/base/hoversel_vertical_entry/default";
   alias: "elm/button/base/hoversel_vertical_entry/entry";
   alias: "elm/button/base/hoversel_horizontal_entry/default";
   alias: "elm/button/base/hoversel_horizontal_entry/entry";
   script {
      public disabled = 0;
   }
   parts {
      part { name: "button_image";
         type: RECT;
         mouse_events: 1;
         scale: 1;
         description { state: "default" 0.0;
            min: 0 HOVERSEL_ITEM_MIN_HEIGHT_INC;
            color: 0 0 0 0;
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            color: 61 185 204 77;
         }
         description { state: "disabled" 0.0;
            inherit:  "default" 0.0;
         }
      }
      part { name: "text_left_padding";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            min: HOVERSEL_ITEM_TEXT_LR_PADDING_INC 0;
            fixed: 1 1;
            align: 0.0 0.5;
            rel1 { to: "button_image"; relative: 0.0 0.0; }
            rel2 { to: "button_image"; relative: 0.0 1.0; }
         }
      }
      part { name: "text_right_padding";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            min: HOVERSEL_ITEM_TEXT_LR_PADDING_INC 0;
            fixed: 1 1;
            align: 1.0 0.5;
            rel1 { to: "button_image"; relative: 1.0 0.0; }
            rel2 { to: "button_image"; relative: 1.0 1.0; }
         }
      }
      part { name: "elm.text";
         type: TEXT;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            align: 0.5 0.5;
            rel1 { to_x: "text_left_padding"; to_y: "button_image"; relative: 1.0 0.0; }
            rel2 { to_x: "text_right_padding"; to_y: "button_image"; relative: 0.0 1.0; }
            text {
               font: "Tizen:style=Regular";
               size: "26";
               align: 0.0 0.5;
               min: 1 1;
            }
            color: 0 0 0 255;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 115;
         }
      }
      part { name: "over2";
         type: RECT;
         mouse_events: 1;
         repeat_events: 1;
         ignore_flags: ON_HOLD;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
         description { state: "disabled" 0.0;
            inherit:  "default" 0.0;
            visible: 0;
         }
      }
   }
   programs {
      program { name: "button_click";
         signal: "mouse,down,1";
         source: "over2";
         script {
            if (get_int(disabled) == 0) {
               emit("elm,action,press", "");
               run_program(PROGRAM:"button_click_anim");
            }
         }
      }
      program { name: "button_click_anim";
         action: STATE_SET "pressed" 0.0;
         target: "button_image";
      }
      program { name: "button_unclick_anim";
         signal: "mouse,up,1";
         source: "over2";
         script {
            if (get_int(disabled) == 0) {
               set_state(PART:"button_image", "default", 0.0);
               run_program(PROGRAM:"button_unclick");
            }
         }
      }
      program { name: "button_unclick";
         action: SIGNAL_EMIT "elm,action,click" "";
      }
      program { name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         script {
            set_int(disabled, 1);
            set_state(PART:"button_image", "disabled", 0.0);
            set_state(PART:"over2", "disabled", 0.0);
            set_state(PART:"elm.text", "disabled", 0.0);
         }
      }
      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         script {
            set_int(disabled, 0);
            set_state(PART:"button_image", "default", 0.0);
            set_state(PART:"over2", "default", 0.0);
            set_state(PART:"elm.text", "default", 0.0);
         }
      }
   }
}

group { name: "elm/button/base/hoversel_vertical/default";
   alias: "elm/button/base/hoversel_vertical/entry";
   alias: "elm/button/base/hoversel_horizontal/default";
   alias: "elm/button/base/hoversel_horizontal/entry";
   images {
      set {
         name: "core_dropdown_label_icon_arrow";
         image {
            image: SMALL"images/User_Input_Elements/core_dropdown_label_icon_arrow.png" COMP;
         }
         image {
            image: MEDIUM"images/User_Input_Elements/core_dropdown_label_icon_arrow.png" COMP;
         }
      }
   }
   script {
      public disabled = 0;
   }
   parts {
      part { name: "base";
         scale: 1;
         type: SPACER;
         description { state: "default" 0.0;
            min: BUTTON_HOVERSEL_MIN_SIZE_INC;
         }
      }
      part { name: "button_image";
         type: RECT;
         mouse_events: 1;
         scale: 1;
         description { state: "default" 0.0;
            color: 255 255 255 255;
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            color: 61 185 204 77;
         }
         description { state: "disabled" 0.0;
            inherit:  "default" 0.0;
         }
      }
      part { name: "text_left_padding";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            min: BUTTON_HOVERSEL_TEXT_LEFT_PADDING_INC 0;
            fixed: 1 0;
            align: 0.0 0.5;
            rel1 { to: "button_image"; relative: 0.0 0.0; }
            rel2 { to: "button_image"; relative: 0.0 1.0; }
         }
      }
      part { name: "elm.text";
         type: TEXT;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            rel1 { to: "text_left_padding"; relative: 1.0 0.0; }
            rel2 { to: "text_right_padding"; relative: 0.0 1.0; }
            color: 61 185 204 255;
            text {
               font: "Tizen:style=Regular";
               size: "40";
               min: 1 0;
               ellipsis: -1;
               align: -1.0 0.5;
            }
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            color: 61 185 204 255;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 61 185 204 163;
         }
      }
      part { name: "underline";
         type: RECT;
         scale: 1;
         mouse_events: 0;
         description { state: "default" 0.0;
            min: 0 BUTTON_HOVERSEL_UNDERLINE_HEIGHT_INC;
            fixed: 0 1;
            align: 0.5 1.0;
            rel1 { to: "button_image"; relative: 0.0 1.0; }
            rel2 { to: "button_image"; relative: 1.0 1.0; }
            color: 61 185 204 255;
         }
      }
      part { name: "underline_padding";
         type: SPACER;
         scale: 1;
         description { state: "default";
            fixed: 0 1;
            align: 0.5 1.0;
            min: 0 BUTTON_HOVERSEL_UNDERLINE_PADDING_INC;
            rel1 { to: "underline"; relative: 0.0 0.0; }
            rel2 { to: "underline"; relative: 1.0 0.0; }
         }
      }
      part { name: "arrow";
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            min: BUTTON_HOVERSEL_ARROW_ICON_SIZE_INC;
            fixed: 1 1;
            align: 1.0 1.0;
            rel1 { to_x: "button_image"; to_y: "underline_padding"; relative: 1.0 0.0; }
            rel1 { to_x: "button_image"; to_y: "underline_padding"; relative: 1.0 0.0; }
            image.normal: "core_dropdown_label_icon_arrow";
            color: 61 185 204 255;
         }
      }
      part { name: "text_right_padding";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            min: BUTTON_HOVERSEL_TEXT_RIGHT_PADDING_INC 0;
            fixed: 1 0;
            align: 1.0 0.5;
            rel1 { to_x: "arrow"; to_y: "button_image"; relative: 0.0 0.0; }
            rel2 { to_x: "arrow"; to_y: "button_image"; relative: 0.0 1.0; }
         }
      }
     part { name: "over2";
         type: RECT;
         mouse_events: 1;
         repeat_events: 1;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
         description { state: "disabled" 0.0;
            inherit:  "default" 0.0;
            visible: 0;
         }
      }
   }
   programs {
      program { name: "button_click";
         signal: "mouse,down,1";
         source: "over2";
         script {
            if (get_int(disabled) == 0) {
               emit("elm,action,press", "");
               run_program(PROGRAM:"button_click_anim");
            }
         }
      }
      program { name: "button_click_anim";
         action: STATE_SET "pressed" 0.0;
         target: "button_image";
      }
      program { name: "button_unclick_anim";
         signal: "mouse,up,1";
         source: "over2";
         script {
            if (get_int(disabled) == 0) {
               set_state(PART:"button_image", "default", 0.0);
            }
         }
      }
      program { name: "button_clicked_prog";
         signal: "mouse,clicked,1";
         source: "over2";
         script {
            if (get_int(disabled) == 0) {
               run_program(PROGRAM:"button_clicked");
            }
         }
      }
      program { name: "button_clicked";
         action: SIGNAL_EMIT "elm,action,click" "";
      }
      program { name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         script {
            set_int(disabled, 1);
            set_state(PART:"button_image", "disabled", 0.0);
            set_state(PART:"over2", "disabled", 0.0);
            set_state(PART:"elm.text", "disabled", 0.0);
         }
      }
      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         script {
            set_int(disabled, 0);
            set_state(PART:"button_image", "default", 0.0);
            set_state(PART:"over2", "default", 0.0);
            set_state(PART:"elm.text", "default", 0.0);
         }
      }
   }
}
