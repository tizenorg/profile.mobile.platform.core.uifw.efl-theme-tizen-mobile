group { name: "elm/button/base/hoversel_vertical_entry/default";
   alias: "elm/button/base/hoversel_vertical_entry/entry";
   alias: "elm/button/base/hoversel_horizontal_entry/default";
   alias: "elm/button/base/hoversel_horizontal_entry/entry";
   parts {
      part { name: "button_image";
         type: RECT;
         mouse_events: 1;
         scale: 1;
         description { state: "default" 0.0;
            min: 0 BUTTON_HOVERSEL_HEIGHT;
         }
         description { state: "clicked" 0.0;
            inherit: "default" 0.0;
            color_class: "W012P";
         }
      }
      part { name: "elm.padding.content.left";
         type: SPACER;
         scale: 1;
         mouse_events: 0;
         description { state: "default" 0.0;
            align: 0 0.5;
            fixed: 1 0;
            min: BUTTON_HOVERSEL_PADDING_SIZE_DEFAULT 0;
            rel2.relative: 0 1;
         }
      }
      part { name: "elm.padding.text.left";
         type: SPACER;
         scale: 1;
         mouse_events: 0;
         description { state: "default" 0.0;
            align: 0 0.5;
            fixed: 1 0;
            min: BUTTON_HOVERSEL_PADDING_SIZE_DEFAULT 0;
            rel1 {
               to: "elm.swallow.content";
               relative: 1 0;
            }
            rel2 {
               to: "elm.swallow.content";
               relative: 1 1;
            }
         }
      }
      part {
         name: "elm.padding.text.right";
         type: SPACER;
         scale: 1;
         mouse_events: 0;
         description { state: "default" 0.0;
            align: 1 0.5;
            fixed: 1 0;
            min: BUTTON_HOVERSEL_PADDING_SIZE_DEFAULT 0;
            rel1.relative: 1 0;
         }
      }
      part { name: "elm.swallow.content";
         type: SWALLOW;
         description { state: "default" 0.0;
            visible: 0;
            align: 0 0.5;
            min: 0 BUTTON_HOVERSEL_CONTENT_HEIGHT;
            max: BUTTON_HOVERSEL_CONTENT_WIDTH BUTTON_HOVERSEL_CONTENT_HEIGHT;
            fixed: 1 1;
            rel1 {
               to: "elm.padding.content.left";
               relative: 1 0;
            }
            rel2 {
               to: "elm.padding.content.left";
               relative: 1 1;
            }
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            fixed: 1 0;
            visible: 1;
            aspect: 1.0 1.0;
         }
         description { state: "icononly" 0.0;
            inherit: "default" 0.0;
            fixed: 0 0;
            visible: 1;
            align: 0.5 0.5;
            aspect_preference: VERTICAL;
         }
      }
      part { name: "textvis";
         type: RECT;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            visible: 0;
            rel1 {
               to: "elm.padding.content.left";
               relative: 1 0;
            }
            rel2 {
               to: "elm.padding.text.right";
               relative: 0 1;
            }
         }
         description {
            state: "visible" 0.0;
            visible: 1;
            rel1 {
               to: "elm.padding.content.left";
               relative: 1 0;
            }
            rel2 {
               to: "elm.padding.text.right";
               relative: 0 1;
            }
         }
      }
      part { name: "elm.text";
         type: TEXTBLOCK;
         mouse_events:  0;
         scale: 1;
         clip_to: "textvis";
         description { state: "default" 0.0;
            rel1 {
               to_x: "elm.padding.text.left";
               relative: 1.0 0.0;
            }
            rel2 {
               to: "elm.padding.text.right";
               relative: 0 1;
            }
            text {
               style: "button_hoversel_entry_main";
               min: 1 0;
               max: 1 0;
            }
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            text.min: 1 1;
         }
         description { state: "clicked" 0.0;
            inherit: "default" 0.0;
            text.style: "button_main_press";
         }
      }
      part { name: "over2";
         type: RECT;
         mouse_events: 1;
         description { state: "default" 0.0;
            color: BUTTON_COLOR_TRANPARENT;
         }
      }
      // used to force sizing of icon to follow label sizing nearby
      part { name: "sizer.content";
         type: TEXT;
         mouse_events:  0;
         scale: 1;
         description { state: "default" 0.0;
            visible: 0;
            fixed: 1 1;
            text {
               font:     "SLP:style=Medium";
               size:     BUTTON_HOVERSEL_TEXT_SIZE;
               min:      0 0;
               align:    0.5 0.5;
               text_class: "slp_medium";
            }
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            rel1.to: "elm.swallow.content";
            rel2.to: "elm.swallow.content";
            text {
               min: 1 1;
               text: "M";
            }
         }
         description { state: "icononly" 0.0;
            inherit: "default" 0.0;
            rel1.to: "elm.swallow.content";
            rel2.to: "elm.swallow.content";
            text {
               min: 1 1;
               text: "M";
            }
         }
      }
      // end sizer
   }
   programs {
      program { name:   "button_click";
         signal: "mouse,down,1";
         source: "over2";
         action: STATE_SET "clicked" 0.0;
         target: "button_image";
         target: "elm.text";
      }
      program { name:   "button_unclick";
         signal: "mouse,up,1";
         source: "over2";
         action: STATE_SET "default" 0.0;
         target: "button_image";
         target: "elm.text";
      }
      program { name:   "button_unclick3";
         signal: "mouse,up,1";
         source: "over2";
         action: SIGNAL_EMIT "elm,action,click" "";
      }
      program { name: "text_show";
         signal: "elm,state,text,visible";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.swallow.content", st, 30, vl);
            if (!strcmp(st, "icononly")) {
               set_state(PART:"elm.swallow.content", "visible", 0.0);
               set_state(PART:"sizer.content", "visible", 0.0);
            }
            set_state(PART:"textvis", "visible", 0.0);
            set_state(PART:"elm.text", "visible", 0.0);
         }
      }
      program { name: "text_hide";
         signal: "elm,state,text,hidden";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.swallow.content", st, 30, vl);
            if (!strcmp(st, "visible")) {
               set_state(PART:"elm.swallow.content", "icononly", 0.0);
               set_state(PART:"sizer.content", "icononly", 0.0);
            }
            set_state(PART:"textvis", "default", 0.0);
            set_state(PART:"elm.text", "default", 0.0);
         }
      }
      program { name: "icon_show";
         signal: "elm,state,icon,visible";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"textvis", st, 30, vl);
            if (!strcmp(st, "visible")) {
               set_state(PART:"elm.swallow.content", "visible", 0.0);
               set_state(PART:"sizer.content", "visible", 0.0);
            }
            else {
               set_state(PART:"elm.swallow.content", "icononly", 0.0);
               set_state(PART:"sizer.content", "icononly", 0.0);
            }
         }
      }
      program { name: "icon_hide";
         signal: "elm,state,icon,hidden";
         source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "elm.swallow.content";
         target: "sizer.content";
      }
   }
}

group { name: "elm/button/base/hoversel_vertical/default";
   alias: "elm/button/base/hoversel_vertical/entry";
   alias: "elm/button/base/hoversel_horizontal/default";
   alias: "elm/button/base/hoversel_horizontal/entry";
   images {
      image: "core_list_button_bg.#.png" COMP;
      image: "whitetheme/btn_arrow_updown_nor.png" COMP;
      image: "whitetheme/btn_arrow_updown_sel.png" COMP;
   }
   parts {
      part { name: "button_image";
         mouse_events: 1;
         scale: 1;
         description { state: "default" 0.0;
            color_class: "W012";
            image {
               normal: "core_list_button_bg.#.png";
            }
         }
         description { state: "clicked" 0.0;
            inherit: "default" 0.0;
            color_class: "W012P";
            image {
               normal: "core_list_button_bg.#.png";
            }
         }
         description { state: "disabled" 0.0;
            inherit:  "default" 0.0;
            color_class: "W012D";
            image {
               normal: "core_list_button_bg.#.png";
            }
         }
      }
      part { name: "elm.padding.arrow.left-top";
         type: SPACER;
         scale: 1;
         mouse_events: 0;
         description { state: "default" 0.0;
            align: 0 0;
            rel2.relative: 0 0;
            fixed: 1 1;
            min: BUTTON_ANCHOR_PADDING_DEFAULT_SIZE BUTTON_ANCHOR_PADDING_DEFAULT_SIZE;
         }
      }
      part { name: "elm.padding.arrow.bottom";
         type: SPACER;
         scale: 1;
         mouse_events: 0;
         description { state: "default" 0.0;
            align: 0 1;
            rel1.relative: 0 1;
            fixed: 1 1;
            min: BUTTON_ANCHOR_PADDING_DEFAULT_SIZE BUTTON_ANCHOR_PADDING_DEFAULT_SIZE;
         }
      }
      part { name: "arrow";
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            min: BUTTON_HOVERSEL_ICON_SIZE BUTTON_HOVERSEL_ICON_SIZE;
            max: BUTTON_HOVERSEL_ICON_SIZE BUTTON_HOVERSEL_ICON_SIZE;
            rel1 {
               to: "elm.padding.arrow.left-top";
               relative: 1 1;
            }
            rel2 {
               to: "elm.padding.arrow.bottom";
               relative: 1 0;
            }
            image.normal: "whitetheme/btn_arrow_updown_nor.png";
            align: 0.0 0.5;
         }
         description { state: "clicked" 0.0;
            inherit: "default" 0.0;
            image.normal: "whitetheme/btn_arrow_updown_sel.png";
            min: BUTTON_HOVERSEL_ICON_SIZE BUTTON_HOVERSEL_ICON_SIZE;
            max: BUTTON_HOVERSEL_ICON_SIZE BUTTON_HOVERSEL_ICON_SIZE;
         }
      }
      part { name: "elm.swallow.content";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            visible: 0;
            align: 0.0 0.5;
            rel1 {
               to: "arrow";
               relative: 1.0 0.0;
            }
            rel2 {
               to: "arrow";
               relative: 1.0 1.0;
            }
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            fixed: 1 0;
            visible: 1;
            aspect: 1.0 1.0;
         }
         description { state: "icononly" 0.0;
            inherit: "default" 0.0;
            fixed: 0 0;
            visible: 1;
            align: 0.5 0.5;
            rel1 {
               to_x: "button_image";
               relative: 1.0 1.0;
            }
         }
      }
      part { name: "elm.padding.text.left";
         type: SPACER;
         scale: 1;
         mouse_events: 0;
         description { state: "default" 0.0;
            align: 0 0.5;
            rel1 {
               to: "arrow";
               relative: 1 0;
            }
            rel2 {
               to: "arrow";
               relative: 1 1;
            }
            fixed: 1 0;
            min: BUTTON_ANCHOR_PADDING_DEFAULT_SIZE 0;
         }
      }
      part { name: "elm.padding.text.right-bottom";
         type: SPACER;
         scale: 1;
         mouse_events: 0;
         description { state: "default" 0.0;
            align: 1 1;
            rel1.relative: 1 1;
            fixed: 1 1;
            min: 25 16;
         }
      }
      part { name: "elm.text";
         type: TEXTBLOCK;
         mouse_events:  0;
         scale: 1;
         description { state: "default" 0.0;
            visible: 1;
            rel1 {
               to: "elm.padding.text.left";
               relative: 1 0;
            }
            rel2 {
               to : "elm.padding.text.right-bottom";
               relative: 0 0;
            }
            align: 0.5 0.5;
            text {
               style: "button_main";
               min: 1 0;
               max: 1 0;
            }
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
         description { state: "clicked" 0.0;
               inherit: "default" 0.0;
               text.style: "button_main_press";
            }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            text.style: "button_main_dim";
         }
         description { state: "disabled_visible" 0.0;
            inherit: "default" 0.0;
            color: BUTTON_ANCHOR_DISABLE_COLOR;
            visible: 1;
         }
      }
      part { name: "over2";
         type: RECT;
         mouse_events: 1;
         repeat_events: 1;
         ignore_flags: ON_HOLD;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
         description { state: "disabled" 0.0;
            inherit:  "default" 0.0;
            visible: 0;
         }
      }
      part { name: "over3";
         type: RECT;
         mouse_events: 1;
         repeat_events: 1;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
         description { state: "clicked" 0.0;
            inherit:  "default" 0.0;
            visible: 0;
         }
      }
      part { name: "disabler";
         type: RECT;
         description { state: "default" 0.0;
            color: 0 0 0 0;
            visible: 0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      // used to force sizing of icon to follow label sizing nearby
      part { name: "sizer.content"; type: TEXT;
         mouse_events:  0;
         scale: 1;
         description { state: "default" 0.0;
            visible: 0;
            text {
               font: "Sans,Edje-Vera";
               size: 10;
               min: 0 0;
               text_class: "button";
            }
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            rel1.to: "elm.swallow.content";
            rel2.to: "elm.swallow.content";
            text {
               min: 1 1;
               text: "M";
            }
         }
         description { state: "icononly" 0.0;
            inherit: "default" 0.0;
            rel1.to: "elm.swallow.content";
            rel2.to: "elm.swallow.content";
            text {
               min: 1 1;
               text: "M";
            }
         }
      }
      // end sizer
   }
   programs {
      program { name:   "button_click";
         signal: "mouse,down,1";
         source: "over2";
         action: SIGNAL_EMIT "elm,action,press" "";
         after: "button_click_anim";
      }
      program { name: "button_click_anim";
         action: STATE_SET "clicked" 0.0;
         target: "button_image";
         target: "arrow";
         after: "text_clicked";
      }
      program { name: "text_clicked";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.text", st, 30, vl);
            if (!strcmp(st, "visible"))
              set_state(PART:"elm.text", "clicked", 0.0);
         }
      }
      program { name:   "button_unclick";
         signal: "mouse,up,1";
         source: "over2";
         action: STATE_SET "default" 0.0;
         target: "button_image";
         target: "arrow";
         after: "text_unclicked";
      }
      program { name: "button_unclick_anim";
         action: STATE_SET "clicked" 0.0;
         target: "button_image";
         after: "text_unclicked";
      }
      program { name: "text_unclicked";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.text", st, 30, vl);
            if (!strcmp(st, "clicked"))
              set_state(PART:"elm.text", "visible", 0.0);
         }
      }
      program { name:   "button_unclick3";
         signal: "mouse,up,1";
         source: "over2";
         action: SIGNAL_EMIT "elm,action,click" "";
      }
      program { name: "text_show";
         signal: "elm,state,text,visible";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.swallow.content", st, 30, vl);
            if (!strcmp(st, "icononly")) {
               set_state(PART:"elm.swallow.content", "visible", 0.0);
               set_state(PART:"sizer.content", "visible", 0.0);
            }
            set_state(PART:"elm.text", "visible", 0.0);
         }
      }
      program { name: "text_hide";
         signal: "elm,state,text,hidden";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.swallow.content", st, 30, vl);
            if (!strcmp(st, "visible")) {
               set_state(PART:"elm.swallow.content", "icononly", 0.0);
               set_state(PART:"sizer.content", "icononly", 0.0);
            }
            set_state(PART:"elm.text", "default", 0.0);
         }
      }
      program { name: "icon_show";
         signal: "elm,state,icon,visible";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.text", st, 30, vl);
            if (!strcmp(st, "visible")) {
               set_state(PART:"elm.swallow.content", "visible", 0.0);
               set_state(PART:"sizer.content", "visible", 0.0);
            }
            else {
               set_state(PART:"elm.swallow.content", "icononly", 0.0);
               set_state(PART:"sizer.content", "icononly", 0.0);
            }
         }
      }
      program { name: "icon_hide";
         signal: "elm,state,icon,hidden";
         source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "elm.swallow.content";
         target: "sizer.content";
      }
      program { name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "button_image";
         target: "over2";
         target: "disabler";
         after: "disable_text";
      }
      program { name: "disable_text";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.text", st, 30, vl);
            if (!strcmp(st, "visible"))
              set_state(PART:"elm.text", "disabled_visible", 0.0);
            else
              set_state(PART:"elm.text", "disabled", 0.0);
         }
      }
      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "button_image";
         target: "over2";
         target: "disabler";
         after: "enable_text";
      }
      program { name: "enable_text";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.text", st, 30, vl);
            if (!strcmp(st, "disabled_visible"))
              set_state(PART:"elm.text", "visible", 0.0);
            else
              set_state(PART:"elm.text", "default", 0.0);
         }
      }
   }
}

group { name: "elm/button/base/anchor";
   images {
      image: "whitetheme/btn_style_nor.png" COMP;
      image: "whitetheme/btn_style_sel.png" COMP;
   }
   parts {
      part { name: "button_image";
         mouse_events: 1;
         scale: 1;
         description {
            state: "default" 0.0;
            min: BUTTON_TEXT_STYLE1_VISIBLE_BG_MIN_INC;
            visible: 0;
            image {
               normal: "whitetheme/btn_style_nor.png";
               border: BUTTON_ANCHOR_BG_BORDER;
               middle: SOLID;
            }
         }
         description { state: "clicked" 0.0;
            visible: 1;
            min: BUTTON_TEXT_STYLE1_VISIBLE_BG_MIN_INC;
            color_class: "W012P";
            image {
               normal: "whitetheme/btn_style_nor.png";
               border: BUTTON_ANCHOR_BG_BORDER;
               border_scale: 1;
            }
         }
         description { state: "visible" 0.0;
            visible: 1;
            min: BUTTON_TEXT_STYLE1_VISIBLE_BG_MIN_INC;
            color_class: "W012";
            image {
               normal: "whitetheme/btn_style_nor.png";
               border: BUTTON_ANCHOR_BG_BORDER;
               border_scale: 1;
            }
         }
         description { state: "disabled" 0.0;
            inherit:  "default" 0.0;
            image {
               normal: "whitetheme/btn_style_nor.png";
               border: BUTTON_ANCHOR_BG_BORDER;
            }
         }
      }
      part { name: "elm.swallow.content";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            visible: 0;
            align: 0.0 0.5;
            rel2.relative: 0.0 1.0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            fixed: 1 0;
            visible: 1;
            aspect: 1.0 1.0;
            aspect_preference: VERTICAL;
         }
         description { state: "icononly" 0.0;
            inherit: "default" 0.0;
            fixed: 0 0;
            visible: 1;
            align: 0.5 0.5;
            aspect: 1.0 1.0;
            rel2.relative: 1.0 1.0;
            aspect_preference: VERTICAL;
         }
      }
      part { name: "elm.padding.text.left";
         type: SPACER;
         scale: 1;
         mouse_events: 0;
         description {  state: "default" 0.0;
            align: 0 0.5;
            fixed: 1 0;
            min: BUTTON_ANCHOR_PADDING_DEFAULT_SIZE 0;
            rel1 {
               to: "elm.swallow.content";
               relative: 1 0;
            }
            rel2 {
               to: "elm.swallow.content";
               relative: 1 1;
            }
         }
      }
      part { name: "elm.padding.text.right";
         type: SPACER;
         scale: 1;
         mouse_events: 0;
         description {  state: "default" 0.0;
            align: 1 0.5;
            rel1.relative: 1 0;
            fixed: 1 0;
            min: BUTTON_ANCHOR_PADDING_DEFAULT_SIZE 10;
         }
      }
      part { name: "elm.text";
         type: TEXT;
         mouse_events:  0;
         scale: 1;
         effect: SHADOW BOTTOM;
         description { state: "default" 0.0;
            rel1 {
               to_x: "elm.padding.text.left";
               relative: 1 0;
            }
            rel2 {
               to : "elm.padding.text.right";
               relative: 0 1;
            }
            color: BUTTON_TEXT_STYLE1_NORMAL_COLOR_INC;
            color2: BUTTON_TEXT_SHADOW_NORMAL_COLOR_INC;
            text {
               font: "SLP:style=Regular";
               size: BUTTON_TEXT_STYLE1_FONT_SIZE_INC;
               min: 0 0;
               text_class: "slp";
            }
         }
         description { state: "clicked" 0.0;
            inherit: "default" 0.0;
            color: BUTTON_TEXT_STYLE1_PRESSED_COLOR_INC;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: BUTTON_TEXT_STYLE1_DISABLED_COLOR_INC;
         }
         description { state: "disabled_visible" 0.0;
            inherit: "default" 0.0;
            color: BUTTON_TEXT_STYLE1_DISABLED_COLOR_INC;
            visible: 1;
            text.min: 1 1;
         }
      }
      part { name: "over";
         type: RECT;
         mouse_events: 1;
         repeat_events: 1;
         description { state: "default" 0.0;
            color: BUTTON_ANCHOR_COLOR_TRANSPARENT;
         }
      }
      part { name: "disabler";
         type: RECT;
         description { state: "default" 0.0;
            color: BUTTON_ANCHOR_COLOR_TRANSPARENT;
            visible: 0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      // used to force sizing of icon to follow label sizing nearby
      part { name: "sizer.content"; type: TEXT;
         mouse_events:  0;
         scale: 1;
         description { state: "default" 0.0;
            visible: 0;
            text {
               font: "SLP:style=Medium";
               size: BUTTON_TEXT_STYLE1_FONT_SIZE_INC;
               min: 0 0;
               text_class: "button";
            }
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            rel1.to: "elm.swallow.content";
            rel2.to: "elm.swallow.content";
            text {
               min: 1 1;
               text: "M";
            }
         }
         description { state: "icononly" 0.0;
            inherit: "default" 0.0;
            rel1.to: "elm.swallow.content";
            rel2.to: "elm.swallow.content";
            text {
               min: 1 1;
               text: "M";
            }
         }
      }
      // end sizer
   }
   programs {
      program { name: "button_mouse_in";
         signal: "mouse,in";
         source: "over";
         action: STATE_SET "visible" 0.0;
         target: "button_image";
         target: "elm.text";
      }
      program { name: "button_mouse_out";
         signal: "mouse,out";
         source: "over";
         action: STATE_SET "default" 0.0;
         target: "button_image";
         target: "elm.text";
      }
      program { name: "button_unclick";
         signal: "mouse,up,1";
         source: "over";
         action: STATE_SET "visible" 0.0;
         target: "button_image";
         target: "elm.text";
      }
      program { name: "button_click2";
         signal: "mouse,down,1";
         source: "over";
         action: STATE_SET "clicked" 0.0;
         target: "button_image";
         target: "elm.text";
      }
      program { name: "button_unclick2";
         signal: "mouse,up,1";
         source: "over";
         action: STATE_SET "default" 0.0;
         transition: DECELERATE 0.5;
         target: "button_image";
         target: "elm.text";
      }
      program { name: "button_unclick3";
         signal: "mouse,up,1";
         source: "over";
         action: SIGNAL_EMIT "elm,action,click" "";
      }
      program { name: "text_show";
         signal: "elm,state,text,visible";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.swallow.content", st, 30, vl);
            if (!strcmp(st, "icononly")) {
               set_state(PART:"elm.swallow.content", "visible", 0.0);
               set_state(PART:"sizer.content", "visible", 0.0);
            }
            get_state(PART:"elm.text", st, 30, vl);
            if (!strcmp(st, "disabled") || (!strcmp(st, "disabled_visible")))
              set_state(PART:"elm.text", "disabled_visible", 0.0);
            else
              set_state(PART:"elm.text", "visible", 0.0);
         }
      }
      program { name: "text_hide";
         signal: "elm,state,text,hidden";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.swallow.content", st, 30, vl);
            if (!strcmp(st, "visible")) {
               set_state(PART:"elm.swallow.content", "icononly", 0.0);
               set_state(PART:"sizer.content", "icononly", 0.0);
            }
            get_state(PART:"elm.text", st, 30, vl);
            if (!strcmp(st, "default") || (!strcmp(st, "visible")))
              set_state(PART:"elm.text", "default", 0.0);
            else
              set_state(PART:"elm.text", "disabled", 0.0);
         }
      }
      program { name: "icon_show";
         signal: "elm,state,icon,visible";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.text", st, 30, vl);
            if (!strcmp(st, "visible")) {
               set_state(PART:"elm.swallow.content", "visible", 0.0);
               set_state(PART:"sizer.content", "visible", 0.0);
            }
            else {
               set_state(PART:"elm.swallow.content", "icononly", 0.0);
               set_state(PART:"sizer.content", "icononly", 0.0);
            }
         }
      }
      program { name: "icon_hide";
         signal: "elm,state,icon,hidden";
         source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "elm.swallow.content";
         target: "sizer.content";
      }
      program { name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            set_state(PART:"button_image", "disabled", 0.0);
            set_state(PART:"over", "disabled", 0.0);
            set_state(PART:"disabler", "disabled", 0.0);
            get_state(PART:"elm.text", st, 30, vl);
            if (!strcmp(st, "visible") || !strcmp(st, "disabled_visible"))
              set_state(PART:"elm.text", "disabled_visible", 0.0);
            else
              set_state(PART:"elm.text", "disabled", 0.0);
         }
      }
      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            set_state(PART:"button_image", "visible", 0.0);
            set_state(PART:"over", "visible", 0.0);
            set_state(PART:"disabler", "visible", 0.0);
            get_state(PART:"elm.text", st, 30, vl);
            if (!strcmp(st, "visible") || !strcmp(st, "disabled_visible"))
              set_state(PART:"elm.text", "visible", 0.0);
            else
              set_state(PART:"elm.text", "default", 0.0);
         }
      }
   }
}

group { name: "elm/button/base/dropdown";
      script {
         public mouse_down = 0;
         public multi_down = 0;
      }
      images {
         image: "core_dropdown_label_icon_arrow.png" COMP;
      }
      parts {
         part { name: "base";
            scale: 1;
            type: SPACER;
            description { state: "default" 0.0;
               min: BUTTON_MIN_WIDTH BUTTON_DROPDOWN_MIN_HEIGHT;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
            }
         }
         part { name: "padding_left_top";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               align: 0.0 0.0;
               rel1.to: "base";
               rel2 {
                 relative: 0.0 0.0;
                 to: "base";
               }
               min: BUTTON_DROPDOWN_PADDING_LEFT_RIGHT 0;
               fixed: 1 1;
            }
         }
         part { name: "padding_right_bottom";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               align: 1.0 1.0;
               rel1 {
                 relative: 1.0 1.0;
                 to:"base";
               }
               rel2.to:"base";
               min: BUTTON_DROPDOWN_PADDING_LEFT_RIGHT 0;
               fixed: 1 1;
            }
         }
         part { name: "elm.text";
            type: TEXTBLOCK;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               align: 0.0 0.5;
               rel1 {
                  relative: 1.0 1.0;
                  to: "padding_left_top";
               }
               rel2 {
                  relative: 0.0 1.0;
                  to: "padding_after_text";
               }
               text {
                  style: "button_dropdown";
               }
            }
            description { state: "invisible" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
         }
         part { name: "arrow_icon";
            scale: 1;
            description { state: "default" 0.0;
              min: BUTTON_DROPDOWN_ICON_SIZE;
              max: BUTTON_DROPDOWN_ICON_SIZE;
              image.normal: "core_dropdown_label_icon_arrow.png";
              color_class: "B0734";
              rel2 {
                 to_x: "padding_right_bottom";
                 to_y: "underline_bottom";
                 relative: 0.0 0.0;
              }
              align: 1.0 1.0;
            }
         }
         part { name: "underline_bottom";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               min:  0 BUTTON_DROPDOWN_UNDERLINE_HEIGHT;
               color_class:"B0733L2";
               rel1 {
                  relative: 1.0 1.0;
                  to_x: "padding_left_top";
                  to_y: "base";
               }
               rel2 {
                  relative: 0.0 1.0;
                  to_x: "padding_right_bottom";
                  to_y: "base";
               }
               align: 1.0 1.0 ;
               fixed: 1 1;
            }
         }
         part { name: "padding_after_text";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
              min: BUTTON_DROPDOWN_PADDING_TEXT_WIDTH 0;
              rel1 {
                 relative: 0.0 0.0;
                 to: "arrow_icon";
              }
              rel2 {
                 relative: 0.0 1.0;
                 to: "arrow_icon";
              }
              align: 0.0 0.0;
              fixed: 1 1;
            }
         }
         part { name: "event";
            scale: 1;
            type: RECT;
            description { state: "default" 0.0;
              rel1.to: "base";
              rel2.to: "base";
              color: 0 0 0 0;
            }
         }
      }
      programs {
         program { name: "touch_snd";
            signal: "mouse,clicked,1";
            source: "event";
            script {
               new st[31];
               new Float:vl;
               if (get_int(multi_down) == 0) {
                  get_state(PART:"base", st, 30, vl);
                  if (strcmp(st, "disabled")) {
                     run_program(PROGRAM:"touch_sound");
                     emit("elm,action,click", "");
                  }
               }
            }
         }
         program { name: "touch_sound";
            action: RUN_PLUGIN "touch_sound";
         }
         program { name: "text_show";
            signal: "elm,state,text,visible";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: elm.text;
         }
         program { name: "text_hide";
            signal: "elm,state,text,hidden";
            source: "elm";
            action: STATE_SET "invisible" 0.0;
            target: elm.text;
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "base";
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "base";
         }
         program { name: "multi_down";
            signal: "elm,action,multi,down";
            source: "elm";
            script {
               set_int(multi_down, 1);
            }
         }
         program { name: "multi_up";
            signal: "elm,action,multi,up";
            source: "elm";
            script {
               set_int(multi_down, 0);
            }
         }
      }
   }

