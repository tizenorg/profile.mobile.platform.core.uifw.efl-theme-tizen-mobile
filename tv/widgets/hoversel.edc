#define HOVERSEL_FONT_SIZE 30

/*********************************************************************************
Document: Tizen TV_General Guide_GUI Guideline_v1.1_140709.pdf
HOVERSEL
Page No.: 84~89
*********************************************************************************/
images {
   image: "round_rectangle_4X4.png" COMP;
   image: "ico_dropdown_menu_open_arrow.png" COMP;
   image: "ico_dropdown_menu_check.png" COMP;
}

group { name: "elm/button/base/hoversel_vertical/default";
   data.item: "focus_highlight" "on";
   parts {
      part { name: "base"; type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            min: 0 70;
            color: 193 193 193 204;
         }
         description { state: "focus" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 193 193 193 51;
         }
      }
      part { name: "pad.left"; type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            align: 0.0 0.5;
            min: 32 0;
            max: 32 0;
         }
      }
      part { name: "pad.icon"; type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            rel2.to: "down_icon";
            rel2.relative: 0.0 1.0;
            align: 1 0.5;
            fixed: 1 1;
            min: 20 0;
            max: 20 0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            min: 56 0;
            max: 56 0;
         }
      }
      part { name: "pad.right"; type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            align: 1.0 0.5;
            min: 24 0;
            max: 24 0;
         }
      }
      part { name: "button_base";
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "base";
            rel2.to: "base";
            color: 0 0 0 76;
            image {
               normal: "round_rectangle_4X4.png";
               border: 4 4 4 4;
               border_scale: 1;
            }
         }
         description { state: "focus" 0.0;
            inherit: "default" 0.0;
            color_class: "open_ux_theme";
            color: 255 255 255 255;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 25;
         }
      }
      part { name: "down_icon";
         scale: 1;
         clip_to: "base";
         description { state: "default" 0.0;
            rel2.to_x: "pad.right";
            rel2.relative: 0.0 1.0;
            align: 1.0 0.5;
            fixed: 1 1;
            min: 26 26;
            max: 26 26;
            image.normal: "ico_dropdown_menu_open_arrow.png";
         }
      }
      part { name: "elm.text"; type: TEXT; mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to_x: "pad.left";
            rel1.relative: 1.0 0.0;
            rel2.to_x: "pad.icon";
            rel2.relative: 0.0 1.0;
            align: 0 0.5;
            fixed: 1 1;
            color: 175 175 175 255;
            text {
               size: HOVERSEL_FONT_SIZE;
               max: 1 0;
               text_class: "button";
               align: 0.0 0.5;
            }
         }
         description { state: "focus" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 175 175 175 102;
         }
         description { state: "disabled_visible" 0.0;
            inherit: "default" 0.0;
            color: 158 158 158 102;
            color3: 0 0 0 0;
         }
      }
      part { name: "pad.text"; type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            min: 10 0;
            max: 10 0;
            fixed: 1 1;
            align: 0.0 0.5;
            rel1.to_x: "elm.text";
            rel1.relative: 1.0 0.0;
            rel2.to_x: "elm.text";
            rel2.relative: 1.0 1.0;
         }
      }
      part { name: "elm.swallow.content"; type: SWALLOW;
         scale: 1;
         clip_to: "base";
         description { state: "default" 0.0;
            min: 26 26;
            max: 26 26;
            fixed: 1 1;
            align: 0.0 0.5;
            rel1.to_x: "pad.text";
            rel1.relative: 1.0 0.5;
            rel2.to_x: "pad.text";
            rel2.relative: 1.0 0.5;
         }
      }
      part { name: "event"; type: RECT;
         description { state: "default" 0.0;
            color: 0 0 0 0;
            fixed: 1 1;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
   }
   programs {
      program { name: "button_click";
         signal: "mouse,down,1"; source: "event";
         action: SIGNAL_EMIT "elm,action,press" "";
         after: "button_click_anim";
      }
      program { name: "button_click_anim";
         action: STATE_SET "focus" 0.0;
         target: "button_base";
         target: "base";
         target: "elm.text";
      }
      program { name: "button_unclick";
         signal: "mouse,up,1"; source: "event";
         action: SIGNAL_EMIT "elm,action,unpress" "";
         after: "button_unclick_anim";
      }
      program { name: "button_unclick_anim";
         action: STATE_SET "focus" 0.0;
         target: "elm.text";
         target: "button_base";
         target: "base";
      }
      program { name: "mouse_unclick_after";
         signal: "mouse,clicked,1"; source: "event";
         action: SIGNAL_EMIT "elm,action,click" "";
      }
      program { name: "key_press";
         signal: "elm,anim,activate"; source: "elm";
         action: STATE_SET "focus" 0.0;
         target: "elm.text";
         target: "button_base";
         target: "base";
         after: "key_unpress";
      }
      program { name: "key_unpress";
         action: STATE_SET "focus" 0.0;
         transition: DECELERATE 0.2;
         target: "button_base";
         target: "base";
         target: "elm.text";
      }
      program { name: "focused";
         signal: "elm,action,focus"; source: "elm";
         action: STATE_SET "focus" 0.0;
         target: "elm.text";
         target: "button_base";
         target: "base";
      }
      program { name: "unfocused";
         signal: "elm,action,unfocus"; source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.text";
         target: "button_base";
         target: "base";
      }
      program { name: "icon_show";
         signal: "elm,state,icon,visible"; source: "elm";
         action: STATE_SET "visible" 0.0;
         target: "pad.icon";
      }
      program { name: "icon_hide";
         signal: "elm,state,icon,hidden"; source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "pad.icon";
      }
      program { name: "text_show";
         signal: "elm,state,text,visible"; source: "elm";
         script {
            new st[31];
            new Float: vl;
            get_state(PART:"elm.text", st, 30, vl);
            if ((!strcmp(st, "disabled")) || (!strcmp(st, "disabled_visible")))
               set_state(PART:"elm.text", "disabled_visible", 0.0);
            else
               set_state(PART:"elm.text", "visible", 0.0);
         }
      }
      program { name: "text_hide";
         signal: "elm,state,text,hidden"; source: "elm";
         script {
            new st[31];
            new Float: vl;
            get_state(PART:"elm.text", st, 30, vl);
            if ((!strcmp(st, "default")) || (!strcmp(st, "visible")))
               set_state(PART:"elm.text", "default", 0.0);
            else
               set_state(PART:"elm.text", "disabled", 0.0);
         }
      }
      program { name: "disable";
         signal: "elm,state,disabled"; source: "elm";
         script {
            new st[31];
            new Float: vl;
            set_state(PART:"button_base", "disabled", 0.0);
            set_state(PART:"event", "disabled", 0.0);
            set_state(PART:"down_icon", "disabled", 0.0);
            get_state(PART:"elm.text", st, 30, vl);
            if ((!strcmp(st, "visible")) || (!strcmp(st, "disabled_visible")))
               set_state(PART:"elm.text", "disabled_visible", 0.0);
            else
               set_state(PART:"elm.text", "disabled", 0.0);
         }
      }
      program { name: "enable";
         signal: "elm,state,enabled"; source: "elm";
         script {
            new st[31];
            new Float: vl;
            set_state(PART:"button_base", "visible", 0.0);
            set_state(PART:"event", "visible", 0.0);
            get_state(PART:"elm.text", st, 30, vl);
            if ((!strcmp(st, "visible")) || (!strcmp(st, "disabled_visible")))
               set_state(PART:"elm.text", "visible", 0.0);
            else
               set_state(PART:"elm.text", "default", 0.0);
         }
      }
   }
}

/******************************************************************************
Document: Tizen TV_General Guide_GUI Guideline_v1.1_140709.pdf
HOVERSEL
Page No.: 84~89
******************************************************************************/
group { name: "elm/button/base/hoversel_vertical_entry/default";
   data.item: "focus_highlight" "on";
   script {
      public is_selected = 0;
   }
   parts {
      part { name: "base"; type: RECT;
         description { state: "default" 0.0;
            min: 0 70;
            color: 98 98 98 255;
         }
         description { state: "focus" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
         }
         description { state: "highlight" 0.0;
            inherit: "focus" 0.0;
            color_class: "open_ux_theme";
         }
         description { state: "highlight_focus" 0.0;
            inherit: "focus" 0.0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
         }
      }
      part { name: "pad.left"; type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            align: 0 0.5;
            fixed: 1 1;
            min: 32 0;
            max: 32 0;
         }
      }
      part { name: "pad.right"; type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            align: 1.0 0.5;
            min: 24 0;
            max: 24 0;
         }
      }
      part { name: "clipper.all_item"; type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "base";
            rel2.to: "base";
         }
         description { state: "last_item" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "clipper.last_item"; type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "base";
            rel2.to: "base";
            visible: 0;
         }
         description { state: "last_item" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "button_image"; type: RECT;
         scale: 1;
         clip_to: "clipper.all_item";
         description { state: "default" 0.0;
            rel1.to: "base";
            rel2.to: "base";
         }
         description { state: "focus" 0.0;
            inherit: "default" 0.0;
            color_class: "open_ux_theme";
         }
         description { state: "highlight" 0.0;
            inherit: "default" 0.0;
         }
         description { state: "highlight_focus" 0.0;
            inherit: "default" 0.0;
            color_class: "open_ux_theme";
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
         }
      }
      part { name: "pad.last_item"; type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            min: 0 4;
            fixed: 1 1;
            rel1.to: "base";
            rel1.relative: 0.0 0.0;
            rel2.to: "base";
            rel2.relative: 1.0 0.0;
            align: 0.5 1.0;
         }
      }
      part { name: "button_image_last";
         scale: 1;
         clip_to: "clipper.last_item";
         description
          { state: "default" 0.0;
            rel1.to: "pad.last_item";
            rel2.to: "base";
            image {
               normal: "round_rectangle_4X4.png";
               border: 4 4 4 4;
               border_scale: 1;
            }
         }
         description { state: "focus" 0.0;
            inherit: "default" 0.0;
            color_class: "open_ux_theme";
         }
         description { state: "highlight" 0.0;
            inherit: "default" 0.0;
         }
         description { state: "highlight_focus" 0.0;
            inherit: "default" 0.0;
            color_class: "open_ux_theme";
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
         }
      }
      part { name: "list_division"; type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "base";
            rel2.to: "base";
            rel2.relative: 1 0;
            fixed: 1 1;
            color: 222 222 222 255;
            min: 2 2;
            max: 9999 2;
         }
         description { state: "focus" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
         description { state: "highlight" 0.0;
            inherit: "default" 0.0;
         }
         description { state: "highlight_focus" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
         }
      }
      part { name: "check";
         scale: 1;
         clip_to:"base";
         description { state: "default" 0.0;
            rel2.to_x: "pad.right";
            rel2.relative: 0.0 1.0;
            align: 1 0.5;
            fixed: 1 1;
            min: 0 0;
            max: 0 0;
            image.normal: "ico_dropdown_menu_check.png";
            visible: 0;
         }
         description { state: "highlight" 0.0;
            inherit: "default" 0.0;
            min: 26 26;
            max: 26 26;
            visible: 1;
         }
      }
      part { name: "pad.middle_right"; type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "check";
            rel1.relative: 1 0;
            rel2.to: "check";
            rel2.relative: 0 1;
            fixed: 1 1;
            align: 1 0.5;
            min: 20 0;
            max: 20 0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            min: 56 0;
            max: 56 0;
         }
      }
      part { name: "elm.text"; type: TEXT; mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "pad.left";
            rel1.relative: 1.0 0.0;
            rel2.to: "pad.middle_right";
            rel2.relative: 0 1;
            align: 0.0 0.5;
            fixed: 1 1;
            color: 89 89 89 255;
            text.text_source: "elm.text";
            text {
               size: 30;
               max: 1 0;
               align: 0 0.5;
               text_class: "button";
            }
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
         }
         description { state: "focus" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
         }
         description { state: "highlight" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
            color_class: "open_ux_theme";
            color3: 0 0 0 0;
         }
         description { state: "highlight_focus" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
            color3: 0 0 0 0;
         }
      }
      part { name: "pad.middle_left"; type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "elm.text";
            rel1.relative: 1.0 0.0;
            rel2.to: "elm.text";
            fixed: 1 1;
            align: 0.0 0.5;
            min: 10 0;
            max: 10 0;
         }
      }
      part { name: "elm.swallow.content"; type: SWALLOW;
         scale: 1;
         clip_to: "base";
         description { state: "default" 0.0;
            rel1.to: "pad.middle_left";
            rel1.relative: 1.0 0.5;
            rel2.to_x: "pad.middle_left";
            rel2.relative: 1.0 0.5;
            align: 0.0 0.5;
            fixed: 1 1;
            min: 26 26;
            max: 26 26;
         }
      }
      part { name: "event"; type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
   }
   programs {
      program { name: "init";
         signal: "load";
         script {
            new var = 0;
            set_int(is_selected, var);
         }
      }
      program { name: "button_click";
         signal: "mouse,down,1"; source: "event";
         action: SIGNAL_EMIT "elm,action,press" "";
         after: "button_click_anim";
      }
      program { name: "button_click_anim";
         action: STATE_SET "highlight" 0.0;
         target: "elm.text";
         target: "button_image";
         target: "button_image_last";
         target: "base";
      }
      program { name: "button_unclick";
         signal: "mouse,up,1"; source: "event";
         action: SIGNAL_EMIT "elm,action,unpress" "";
         after: "button_unclick_anim";
      }
      program { name: "mouse_unclick_after";
         signal: "mouse,clicked,1"; source: "event";
         action: SIGNAL_EMIT "elm,action,click" "";
      }
      program { name: "button_pressed_anim";
         signal: "elm,anim,activate"; source: "elm";
         action: STATE_SET "highlight" 0.0;
         target: "elm.text";
         target: "button_image";
         target: "button_image_last";
         target: "list_division";
         target: "base";
      }
      program { name: "button_unclick_anim";
         action: STATE_SET "default" 0.0;
         target: "elm.text";
         target: "button_image";
         target: "button_image_last";
         target: "base";
      }
      program { name: "focused";
         signal: "elm,action,focus"; source: "elm";
         action: STATE_SET "focus" 0.0;
         target: "elm.text";
         target: "button_image";
         target: "button_image_last";
         target: "list_division";
         target: "base";
      }
      program { name: "unfocused";
         signal: "elm,action,unfocus"; source: "elm";
         script {
            set_state(PART:"button_image", "default", 0.0);
            set_state(PART:"button_image_last", "default", 0.0);
            set_state(PART:"list_division", "default", 0.0);
            if(!get_int(is_selected))
            {
               set_state(PART:"elm.text", "default", 0.0);
               set_state(PART:"base", "default", 0.0);
            }
            else
            {
               set_state(PART:"elm.text", "highlight", 0.0);
               set_state(PART:"base", "highlight", 0.0);
            }
         }
      }
      program { name: "button_highlight";
         signal: "elm,state,highlight"; source: "elm";
         script {
            new var = 1;
            set_int(is_selected, var);
            set_state(PART:"elm.text", "highlight", 0.0);
            set_state(PART:"base", "highlight", 0.0);
            set_state(PART:"check", "highlight", 0.0);
         }
      }
      program { name: "icon_show";
         signal: "elm,state,icon,visible"; source: "elm";
         action: STATE_SET "visible" 0.0;
         target: "pad.middle_right";
      }
      program { name: "icon_hide";
         signal: "elm,state,icon,hidden"; source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "pad.middle_right";
      }
      program { name: "disable";
         signal: "elm,state,disabled"; source: "elm";
         script {
            new st[31];
            new Float: vl;
            set_state(PART:"base", "disabled", 0.0);
            set_state(PART:"event", "disabled", 0.0);
            get_state(PART:"elm.text", st, 30, vl);
            if ((!strcmp(st, "visible")) || (!strcmp(st, "disabled_visible")))
               set_state(PART:"elm.text", "disabled_visible", 0.0);
            else
               set_state(PART:"elm.text", "disabled", 0.0);
         }
      }
      program { name: "any_item";
         signal: "elm,state,any,item"; source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "clipper.all_item";
         target: "clipper.last_item";
      }
      program { name: "last_item";
         signal: "elm,state,last,item"; source: "elm";
         action:  STATE_SET "last_item" 0.0;
         target: "clipper.all_item";
         target: "clipper.last_item";
      }
   }
}

/*****************************************************************************************
Document: Tizen TV_General Guide_GUI Guideline_v1.1_140613.pdf
HOVERSEL
Page No.: 86, Style Name: menu_text close
*****************************************************************************************/
group { name: "elm/hover/base/hoversel_vertical/default";
   parts {
      part { name: "elm.swallow.offset"; type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
            rel1.relative: 0.0 0.0;
            rel2.relative: 0.0 0.0;
            align: 0.0 0.0;
         }
      }
      part { name: "elm.swallow.size"; type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "elm.swallow.offset";
            rel1.relative: 1.0 1.0;
            rel2.to: "elm.swallow.offset";
            align: 0.0 0.0;
         }
      }
      part { name: "button_image"; type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to_x: "limit0";
            rel1.to_y: "pad.top.upper";
            rel1.relative: 1.0 0.5;
            rel2.to_x: "limit1";
            rel2.to_y: "elm.swallow.slot.middle";
            rel2.relative: 0.0 0.0;
            align: 0 0;
         }
         description { state: "bottom" 0.0;
            rel1.to_x: "limit0";
            rel1.to_y: "elm.swallow.slot.middle";
            rel1.relative: 1.0 1.0;
            rel2.to_x: "limit1";
            rel2.to_y: "pad.bottom.lower";
            rel2.relative: 0.0 0.5;
         }
      }
      part { name: "limit0"; type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to_x: "elm.swallow.slot.top";
            rel2.to_x: "elm.swallow.slot.middle";
            rel2.relative: 0.0 1.0;
            align: 1 1;
            min: 1 1;
            max: 1 99999;
         }
         description { state: "bottom" 0.0;
            inherit: "default" 0.0;
            rel1.to_x: "elm.swallow.slot.bottom";
         }
      }
      part { name: "limit1"; type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to_x: "elm.swallow.slot.middle";
            rel1.relative: 1.0 0.0;
            rel2.to_x: "elm.swallow.slot.top";
            align: 0 0;
            min: 1 1;
            max: 1 99999;
         }
         description { state: "bottom" 0.0;
            inherit: "default" 0.0;
            rel2.to_x: "elm.swallow.slot.bottom";
         }
      }
      part { name: "base"; type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            color: 0 0 0 128;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
         }
      }
      part { name: "topclip"; type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            rel2.to_y: "button_image";
         }
      }
      part { name: "pad.middle.left_top"; type: SPACER;
         scale: 1;
         clip_to: "topclip";
         description { state: "default" 0.0;
            rel1.to: "elm.swallow.slot.middle";
            rel1.relative: 0.0 1.0;
            rel2.to: "elm.swallow.slot.middle";
            align: 0.0 0.0;
            min: 0 0;
            max: 0 0;
         }
      }
      part { name: "pad.middle.upper.right_bottom"; type: SPACER;
         scale: 1;
         clip_to: "topclip";
         description { state: "default" 0.0;
            rel1.to: "pad.middle.upper";
            rel2.to: "pad.middle.upper";
            rel2.relative: 1.0 0.0;
            align: 1.0 1.0;
            min: 0 0;
            max: 0 0;
         }
      }
      part { name: "elm.swallow.slot.top"; type: SWALLOW;
         clip_to: "topclip";
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "pad.middle.left_top";
            rel1.relative: 1.0 0.0;
            rel2.to: "pad.middle.upper.right_bottom";
            rel2.relative: 0.0 0.0;
            align: 0.5 0.0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            align: 0.5 1.0;
         }
      }
      part { name: "bottomclip"; type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to_y: "button_image";
         }
      }
      part { name: "pad.middle.lower.left_top"; type: RECT;
         clip_to: "topclip";
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "pad.middle.lower";
            rel1.relative: 0.0 1.0;
            rel2.to: "pad.middle.lower";
            align: 0.0 0.0;
            min: 0 0;
            max: 0 0;
         }
      }
      part { name: "pad.middle.right_bottom"; type: SPACER;
         clip_to: "topclip";
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "elm.swallow.slot.middle";
            rel2.to: "elm.swallow.slot.middle";
            rel2.relative: 1.0 0.0;
            align: 1.0 1.0;
            min: 0 0;
            max: 0 0;
         }
      }
      part { name: "elm.swallow.slot.bottom"; type: SWALLOW;
         clip_to: "bottomclip";
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "pad.middle.lower.left_top";
            rel1.relative: 1.0 1.0;
            rel2.to: "pad.middle.right_bottom";
            rel2.relative: 0.0 1.0;
            align: 0.5 1.0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            align: 0.5 0.0;
         }
      }
      part { name: "elm.swallow.slot.middle"; type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "elm.swallow.size";
            rel2.to: "elm.swallow.size";
         }
      }
      part { name: "pad.top.upper"; type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to_x: "limit0";
            rel2.to_x: "limit1";
            rel2.to_y: "elm.swallow.slot.top";
            rel1.relative: 1.0 1.0;
            rel2.relative: 1.0 0.0;
            align: 0.5 1.0;
            min: 12 0;
            max: 9999 0;
         }
      }
      part { name: "pad.bottom.lower"; type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to_x: "limit0";
            rel1.to_y: "elm.swallow.slot.bottom";
            rel1.relative: 1.0 1.0;
            rel2.to_x: "limit1";
            rel2.relative: 0.0 1.0;
            align: 0.5 0.0;
            min: 1 0;
            max: 9999 0;
         }
      }
      part { name: "pad.middle.upper"; type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to_x: "elm.swallow.size";
            rel1.relative: 0.0 1.0;
            rel2.to_x: "elm.swallow.size";
            rel2.to_y: "elm.swallow.size";
            rel2.relative: 1.0 0.0;
            align: 0.5 1.0;
            min: 1 0;
            max: 9999 0;
         }
      }
      part { name: "pad.middle.lower"; type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to_x: "elm.swallow.size";
            rel1.to_y: "elm.swallow.size";
            rel1.relative: 0.0 1.0;
            rel2.to_x: "elm.swallow.size";
            align: 0.5 0.0;
            min: 1 0;
            max: 9999 0;
         }
      }
   }
   programs {
      program { name: "end";
         signal: "mouse,up,1"; source: "base";
         action: SIGNAL_EMIT "elm,action,dismiss" "";
      }
      program { name: "show";
         signal: "elm,action,show"; source: "elm";
         action: STATE_SET "visible" 0.0;
         target: "base";
      }
      program { name: "hide";
         signal: "elm,action,hide"; source: "elm";
         action: STATE_SET "default" 0.0;
         target: "base";
      }
      program { name: "topshow";
         signal: "elm,action,slot,top,show"; source: "elm";
         action: STATE_SET "visible" 0.0;
         transition: DECELERATE 0.5;
         target: "elm.swallow.slot.top";
      }
      program { name: "topshow3";
         signal: "elm,action,slot,top,show"; source: "elm";
         action: STATE_SET "default" 0.0;
         target: "button_image";
         target: "limit0";
         target: "limit1";
      }
      program { name: "tophide";
         signal: "elm,action,slot,top,hide"; source: "elm";
         action: STATE_SET "default" 0.0;
         transition: DECELERATE 0.5;
         target: "elm.swallow.slot.top";
      }
      program { name: "bottomshow";
         signal: "elm,action,slot,bottom,show"; source: "elm";
         action: STATE_SET "visible" 0.0;
         transition: DECELERATE 0.5;
         target: "elm.swallow.slot.bottom";
      }
      program { name: "bottomshow3";
         signal: "elm,action,slot,bottom,show"; source: "elm";
         action: STATE_SET "bottom" 0.0;
         target: "button_image";
         target: "limit0";
         target: "limit1";
      }
      program { name: "bottomhide";
         signal: "elm,action,slot,bottom,hide"; source: "elm";
         action: STATE_SET "default" 0.0;
         transition: DECELERATE 0.5;
         target: "elm.swallow.slot.bottom";
      }
   }
}

#undef HOVERSEL_FONT_SIZE
