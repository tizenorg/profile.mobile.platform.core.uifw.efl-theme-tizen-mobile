#define BUTTON_DEFAULT_PAD_SIZE 20 70
#define BUTTON_DEFAULT_MIN_SIZE 196 70
#define BUTTON_DEFAULT_FONT_SIZE 28
#define BUTTON_TEXT_PAD_SIZE 20 45
#define BUTTON_TEXT_MIN_SIZE 147 45
#define BUTTON_TEXT_FONT_SIZE 20
#define BUTTON_BORDER 4 4 4 4

/*********************************************************************************
Document: Tizen TV_General Guide_GUI Guideline_v1.0_140430.ppt
Button
Page No.: 72, Style Name: default
*********************************************************************************/
group { name: "elm/button/base/default";
   images {
      image: "round_rectangle_4X4.png" COMP;
   }
   data.item: "focus_highlight" "on";
   parts {
      part { name: "base"; type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
      part { name: "pad.left"; type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            align: 0.0 0.5;
            rel1.to: "base";
            min: BUTTON_DEFAULT_PAD_SIZE;
            max: BUTTON_DEFAULT_PAD_SIZE;
         }
      }
      part { name: "pad.right"; type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            align: 1.0 0.5;
            rel2.to: "base";
            min: BUTTON_DEFAULT_PAD_SIZE;
            max: BUTTON_DEFAULT_PAD_SIZE;
         }
      }
      part { name: "button_base";
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "base";
            rel2.to: "base";
            min: BUTTON_DEFAULT_MIN_SIZE;
            color: 204 204 204 255;
            image {
               normal: "round_rectangle_4X4.png";
               border: BUTTON_BORDER;
               border_scale: 1;
            }
         }
         description { state: "focus" 0.0;
            inherit: "default" 0.0;
            color_class: "open_ux_theme";
         }
         description { state: "dim" 0.0;
            inherit: "default" 0.0;
            color_class: "open_ux_theme_alpha";
         }
      }
      part { name: "elm.swallow.content"; type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
            align: 0 0.5;
            rel1.to: "pad.left";
            rel1.relative: 1 0;
            rel2.to: "pad.left";
            rel2.relative: 1 1;
            align: 0.0 0.5;
            min: 0 0;
            max: 37 37;
         }
      }
      part { name: "elm.text"; type: TEXT; mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to_x: "pad.left";
            rel1.relative: 1.0 0.0;
            rel2.to_x: "pad.right";
            rel2.relative: 0.0 1.0;
            color: 89 89 89 255;
            text {
               font: FONT_M;//TODO Tizen Sans regular
               size: BUTTON_DEFAULT_FONT_SIZE;
               min: 1 1;
               max: 1 1;
               ellipsis: -1;
               text_class: "button";
            }
         }
         description { state: "focus" 0.0;
            inherit: "default" 0.0;
            color: WHITE 255;
            text.min: 1 1;
         }
         description { state: "dim" 0.0;
            inherit: "default" 0.0;
            color: 89 89 89 102;
         }
      }
      part { name: "event"; type: RECT;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
   }
   programs {
      program { name: "button_click";
         signal: "mouse,down,1"; source: "event";
         action: SIGNAL_EMIT "elm,action,press" "";
      }
      program { name: "button_unclick";
         signal: "mouse,up,1"; source: "event";
         action: SIGNAL_EMIT "elm,action,unpress" "";
      }
      program { name: "button_unclick_anim";
         action: STATE_SET "default" 0.0;
         target: "button_base";
         target: "elm.text";
      }
      program{ name: "mouse_unclick_after";
         signal: "mouse,clicked,1"; source: "event";
         action: SIGNAL_EMIT "elm,action,click" "";
      }
     program { name: "key_press";
         signal: "elm,action,pressed"; source: "elm";
      }
      program { name: "key_unpress";
         signal: "elm,action,unpressed"; source: "elm";
      }
      program { name: "focused";
         signal: "elm,action,focus"; source: "elm";
         action: STATE_SET "focus" 0.0;
         target: "button_base";
         target: "elm.text";
      }
      program { name: "unfocused";
         signal: "elm,action,unfocus"; source: "elm";
         action: STATE_SET "default" 0.0;
         target: "button_base";
         target: "elm.text";
      }
      program { name: "text_show";
         signal: "elm,state,text,visible"; source: "elm";
         script {
            new st[31];
            new Float: vl;
            get_state(PART:"elm.text", st, 30, vl);
            if (!strcmp(st, "disabled") || (!strcmp(st, "disabled_visible")))
               set_state(PART:"elm.text", "disabled_visible", 0.0);
            else
               set_state(PART:"elm.text", "visible", 0.0);
         }
      }
      program { name: "text_hide";
         signal: "elm,state,text,hidden"; source: "elm";
         script {
            new st[31];
            new Float: vl;
            set_state(PART:"elm.text", "default", 0.0);
            get_state(PART:"elm.text", st, 30, vl);
            if (!strcmp(st, "default") || (!strcmp(st, "visible")))
               set_state(PART:"elm.text", "default", 0.0);
            else
               set_state(PART:"elm.text", "disabled", 0.0);
         }
      }
      program { name: "disable";
         signal: "elm,state,disabled"; source: "elm";
         script {
            new st[31];
            new Float: vl;
            set_state(PART:"button_base", "dim", 0.0);
            set_state(PART:"event", "disabled", 0.0);
            get_state(PART:"elm.text", st, 30, vl);
            if (!strcmp(st, "visible") || !strcmp(st, "disabled_visible"))
               set_state(PART:"elm.text", "disabled_visible", 0.0);
            else
               set_state(PART:"elm.text", "disabled", 0.0);
         }
      }
      program { name: "enable";
         signal: "elm,state,enabled"; source: "elm";
         script {
            new st[31];
            new Float: vl;
            set_state(PART:"button_base", "visible", 0.0);
            set_state(PART:"event", "visible", 0.0);
            get_state(PART:"elm.text", st, 30, vl);
            if (!strcmp(st, "visible") || !strcmp(st, "disabled_visible"))
               set_state(PART:"elm.text", "visible", 0.0);
            else
               set_state(PART:"elm.text", "default", 0.0);
         }
      }
   }
}

/*********************************************************************************
Document: Tizen TV_General Guide_GUI Guideline_v1.0_140508.ppt
Button
Page No.: 89, Style Name: text
*********************************************************************************/
group { name: "elm/button/base/text";
   inherit: "elm/button/base/default";
   images {
      image: "btn_text_foc.png" COMP;
      image: "btn_text_nor.png" COMP;
   }
   parts {
      part { name: "base"; type: RECT;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
      part { name: "pad.left"; type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            align: 0.0 0.5;
            rel1.to: "base";
            min: BUTTON_TEXT_PAD_SIZE;
            max: BUTTON_TEXT_PAD_SIZE;
         }
      }
      part { name: "pad.right"; type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            align: 1.0 0.5;
            rel2.to: "base";
            min: BUTTON_TEXT_PAD_SIZE;
            max: BUTTON_TEXT_PAD_SIZE;
         }
      }
      part { name: "button_base";
         description { state: "default" 0.0;
            rel1.to: "base";
            rel2.to: "base";
            min: BUTTON_TEXT_MIN_SIZE;
            image {
               normal: "btn_text_nor.png";
               border:BUTTON_BORDER;
               border_scale: 1;
            }
         }
         description { state: "focus" 0.0;
            inherit: "default" 0.0;
            image {
               normal: "btn_text_foc.png";
               border: BUTTON_BORDER;
               border_scale: 1;
            }
         }
         description { state: "dim" 0.0;
            inherit:  "default" 0.0;
            color: 255 255 255 51;
            image {
               normal: "btn_text_nor.png";
               border: BUTTON_BORDER;
               border_scale: 1;
            }
         }
      }
      part { name: "elm.text"; type: TEXT; mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to_x: "pad.left";
            rel1.relative: 1.0 0.0;
            rel2.to_x: "pad.right";
            rel2.relative: 0.0 1.0;
            color: 164 164 174 255;
            text {
               font: FONT_M;//TODO Tizen Sans regular
               size: BUTTON_TEXT_FONT_SIZE;
               min: 1 1;
               max: 1 1;
               text_class: "button";
            }
         }
         description { state: "focus" 0.0;
            inherit: "default" 0.0;
            color: WHITE 255;
            text.min: 1 1;
         }
         description { state: "dim" 0.0;
            inherit: "default" 0.0;
            color: 164 167 174 102;
         }
      }
      part { name: "event"; type: RECT;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
   }
   programs {
      program { name: "focused";
         signal: "elm,action,focus"; source: "elm";
         action: STATE_SET "focus" 0.0;
         target: "button_base";
         target: "elm.text";
      }
      program { name: "unfocused";
         signal: "elm,action,unfocus"; source: "elm";
         action: STATE_SET "default" 0.0;
         target: "button_base";
         target: "elm.text";
      }
   }
}

group { name: "elm/button/base/popup";
   inherit: "elm/button/base/default";
   parts {
      part { name: "elm.text";
         description { state: "default" 0.0;
            text.min: 0 0;
            text.ellipsis: 0.0;
         }
         description { state: "focus" 0.0;
            inherit: "default" 0.0;
            color: WHITE 255;
         }
         description { state: "dim" 0.0;
            inherit: "default" 0.0;
            color: 89 89 89 102;
         }
      }
   }
}

group { name: "elm/button/base/datetime/ampm";
   script {
      public mouse_down = 0;
      public multi_down = 0;
      public unselected = 0;
   }
   images {
      set {
         name: "core_list_button_bg.#";
         image {
            image: SMALL"images/Controls/core_list_button_bg.#.png" COMP;
         }
         image {
            image: MEDIUM"images/Controls/core_list_button_bg.#.png" COMP;
         }
      }
   }
   parts {
      part { name: "bg";
         scale: 1;
         description { state: "default" 0.0;
            min: DATETIME_AMPM_BUTTON_SIZE_INC;
            image.normal: "core_list_button_bg.#";
            color: 82 199 217 255;;
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            color: 84 144 153 255;
         }
         description { state: "unselected" 0.0;
            inherit: "default" 0.0;
            color: 204 204 204 255;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 204 204 204 255;
         }
      }
      part { name: "padding_left_top";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            state: "default" 0.0;
            min: 24 0;
            fixed: 1 0;
            rel2.relative: 0.0 1.0;
            align: 0.0 0.5;
         }
      }
      part { name: "padding_right_bottom";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            state: "default" 0.0;
            min: 24 0;
            fixed: 1 0;
            rel1.relative: 1.0 0.0;
            align: 1.0 0.5;
         }
      }
      part { name: "elm.text";
         type: TEXTBLOCK;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1 {
               relative: 1.0 0.0;
               to: "padding_left_top";
            }
            rel2 {
               relative: 0.0 1.0;
               to: "padding_right_bottom";
            }
            text {
               style: "button_ampm";
            }
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            text.style: "button_ampm_press";
         }
         description { state: "unselected" 0.0;
            inherit: "default" 0.0;
            text.style: "button_ampm_dim";
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            text.style: "button_ampm_dim";
         }
      }
      part { name: "event";
         scale: 1;
         type: RECT;
         description { state: "default" 0.0;
            rel1.to: "bg";
            rel2.to: "bg";
            color: 0 0 0 0;
         }
      }
   }
   programs {
      program { name: "pressed";
         signal: "mouse,down,1*";
         source: "event";
         script {
            if ((get_int(multi_down) == 0) && (get_int(mouse_down) == 0)) {
               set_int(mouse_down, 1);
               run_program(PROGRAM:"button_press1");
            }
         }
      }
      program { name: "button_press1";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"bg", st, 30, vl);
            if (strcmp(st, "disabled")) {
               set_state(PART:"bg", "pressed", 0.0);
               set_state(PART:"elm.text", "pressed", 0.0);
               emit("elm,action,press", "");
            }
         }
      }
      program { name: "unpressed";
         signal: "mouse,up,1";
         source: "event";
         script {
            if (get_int(mouse_down) == 1) {
               set_int(mouse_down, 0);
               run_program(PROGRAM:"button_unpress1");
            }
         }
      }
      program { name: "button_unpress1";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"bg", st, 30, vl);
            if (strcmp(st, "disabled")) {
               set_state(PART:"bg", "default", 0.0);
               set_state(PART:"elm.text", "default", 0.0);
               emit("elm,action,unpress", "");
            }
         }
      }
      program { name: "touch_snd";
         signal: "mouse,clicked,1";
         source: "event";
         script {
            new st[31];
            new Float:vl;
            if (get_int(multi_down) == 0) {
               get_state(PART:"bg", st, 30, vl);
               if (strcmp(st, "disabled")) {
                  run_program(PROGRAM:"touch_sound");
                  emit("elm,action,click", "");
               }
            }
         }
      }
      program { name: "touch_sound";
         action: RUN_PLUGIN "touch_sound";
      }
      program { name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "bg";
         target: "elm.text";
      }
      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "bg";
         target: "elm.text";
      }
      program { name: "button_unselected";
         signal: "elm,action,button,unselected";
         source: "elm";
         action: STATE_SET "unselected" 0.0;
         target: "bg";
         target: "elm.text";
      }
      program { name: "selected";
         signal: "elm,action,button,selected";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "bg";
         target: "elm.text";
      }
      program { name: "multi_down";
         signal: "elm,action,multi,down";
         source: "elm";
         script {
            set_int(multi_down, 1);
         }
      }
      program { name: "multi_up";
         signal: "elm,action,multi,up";
         source: "elm";
         script {
            set_int(multi_down, 0);
         }
      }
   }
}

/******************* SPINNER BUTTONS STYLES **********************/

group { name: "elm/button/base/spinner/increase/default";
   alias: "elm/button/base/spinner/increase/horizontal";
   data.item: "focus_highlight" "on";
   images {
      image: "core_icon_picker_arrow_right.png" COMP;
   }
   script {
      public mouse_down = 0;
      public multi_down = 0;
   }
   parts {
      part { name: "arrow.image.bg";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            visible: 0;
            align: 0.5 0.0;
            min: SPINNER_LEFT_RIGHT_BG_IMAGE_SIZE_INC;
            max: SPINNER_LEFT_RIGHT_BG_IMAGE_SIZE_INC;
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            color: 2 61 132 127;
            visible: 1;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
         }
      }
      part { name: "arrow.image";
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "arrow.image.bg";
            rel2.to: "arrow.image.bg";
            min: SPINNER_LEFT_RIGHT_ARROW_IMAGE_SIZE_INC;
            max: SPINNER_LEFT_RIGHT_ARROW_IMAGE_SIZE_INC;
            color: 111 125 142 255;
            image.normal: "core_icon_picker_arrow_right.png";
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            color: 244 244 244 255;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 111 125 142 127;
         }
      }
      part { name: "focus_image";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            align: 0.5 0.0;
            rel1.to: "arrow.image.bg";
            rel2.to: "arrow.image.bg";
         }
         description { state: "focused" 0.0;
            inherit: "default" 0.0;
         }
      }
      part { name: "over";
         type: RECT;
         repeat_events: 1;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
      part { name: "disabler";
         type: RECT;
         description { state: "default" 0.0;
            color: 0 0 0 0;
            visible: 0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
   }
   programs {
      program { name: "button_press";
         signal: "mouse,down,1*";
         source: "over";
         script {
            if ((get_int(multi_down) == 0) &&
                (get_int(mouse_down) == 0)) {
                  set_int(mouse_down, 1);
                  run_program(PROGRAM:"button_press2");
            }
         }
      }
      program { name: "button_press2";
         action: SIGNAL_EMIT "elm,action,press" "";
         after: "button_press_anim";
      }
      program { name: "button_press_anim";
         action: STATE_SET "pressed" 0.0;
         target: "arrow.image.bg";
         target: "arrow.image";
      }
      program { name: "button_unpress";
         signal: "mouse,up,1*";
         source: "over";
         script {
            if (get_int(mouse_down) == 1) {
                  set_int(mouse_down, 0);
                  run_program(PROGRAM:"button_unpress2");
                  run_program(PROGRAM:"button_unpress_anim");
            }
         }
      }
      program { name: "button_unpress2";
         action: SIGNAL_EMIT "elm,action,unpress" "";
      }
      program { name: "button_unpress_anim";
         action: STATE_SET "default" 0.0;
         target: "arrow.image.bg";
         target: "arrow.image";
      }
      program { name: "button_click";
         signal: "mouse,clicked,1";
         source: "over";
         script {
            if (get_int(multi_down) == 0) {
              run_program(PROGRAM:"play_sound");
              run_program(PROGRAM:"button_click2");
            }
         }
      }
      program { name: "play_sound";
         action: RUN_PLUGIN "touch_sound";
      }
      program { name: "longpress_sound";
         signal: "elm,action,longpress";
         source: "elm";
         action: RUN_PLUGIN "touch_haptic";
      }
      program { name: "action_unpressed";
         signal: "elm,action,unpressed";
         source: "elm";
         after: "button_unpress_anim";
      }
      program { name: "action_pressed";
         signal: "elm,action,pressed";
         source: "elm";
         after: "button_press_anim";
      }
      program { name: "button_click2";
         action: SIGNAL_EMIT "elm,action,click" "";
      }
      program { name: "action_focus";
         signal: "elm,action,focus_highlight,show";
         source: "elm";
         action: STATE_SET "focused" 0.0;
         target: "focus_image";
      }
      program { name: "action_unfocus";
         signal: "elm,action,focus_highlight,hide";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "focus_image";
      }
      program { name: "access_pressed";
         signal: "elm,action,anim,activate";
         source: "elm";
         action: STATE_SET "pressed" 0.0;
         target: "arrow.image.bg";
         target: "arrow.image";
         after: "access_pressed_anim";
      }
      program { name: "access_pressed_anim";
         action: STATE_SET "default" 0.0;
         transition: DECELERATE 0.1;
         target: "arrow.image.bg";
         target: "arrow.image";
      }
      program { name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "arrow.image.bg";
         target: "arrow.image";
         target: "disabler";
      }
      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "arrow.image.bg";
         target: "arrow.image";
         target: "disabler";
      }
      program {
         name: "multi_down";
         signal: "elm,action,multi,down";
         source: "elm";
         script {
            set_int(multi_down, 1);
         }
      }
      program {
         name: "multi_up";
         signal: "elm,action,multi,up";
         source: "elm";
         script {
            set_int(multi_down, 0);
         }
      }
   }
}

group { name: "elm/button/base/spinner/decrease/default";
   inherit: "elm/button/base/spinner/increase/default";
   alias: "elm/button/base/spinner/decrease/horizontal";
   images {
      image: "core_icon_picker_arrow_left.png" COMP;
   }
   parts {
      part { name: "arrow.image";
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "arrow.image.bg";
            rel2.to: "arrow.image.bg";
            min: SPINNER_LEFT_RIGHT_ARROW_IMAGE_SIZE_INC;
            max: SPINNER_LEFT_RIGHT_ARROW_IMAGE_SIZE_INC;
            color: 111 125 142 255;
            image.normal: "core_icon_picker_arrow_left.png";
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            color: 244 244 244 255;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 111 125 142 127;
         }
      }
   }
}

group { name: "elm/button/base/spinner/default";
   alias: "elm/button/base/spinner/horizontal";
   data.item: "focus_highlight" "on";
   parts {
      part { name: "bg";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            min: SPINNER_LEFT_RIGHT_BG_IMAGE_SIZE_INC;
         }
      }
      part { name: "elm.text";
         type: TEXT;
         scale: 1;
         description { state: "default" 0.0;
            visible: 1;
            color: 7 7 7 255;
            min: 0 SPINNER_TEXT_HEIGHT_INC;
            max: -1 SPINNER_TEXT_HEIGHT_INC;
            rel1.to: "bg";
            rel2.to: "bg";
            text {
               min: 0 0;
               max: 1 0;
               font: "Tizen:style=Light"; size: "60";
               text_class: "tizen";
            }
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0 0 ;
         }
      }
      part { name: "focus_image";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "bg";
            rel2.to: "bg";
         }
         description { state: "focused" 0.0;
            inherit: "default" 0.0;
         }
      }
      part { name: "over";
         type: RECT;
         repeat_events: 1;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
      part { name: "disabler";
         type: RECT;
         description { state: "default" 0.0;
            color: 0 0 0 0;
            visible: 0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
   }
   programs {
      program { name: "button_click";
         signal: "mouse,clicked,1";
         source: "over";
         script {
              run_program(PROGRAM:"play_sound");
              run_program(PROGRAM:"button_click2");
         }
      }
      program { name: "play_sound";
         action: RUN_PLUGIN "touch_sound";
      }
      program { name: "button_click2";
         action: SIGNAL_EMIT "elm,action,click" "";
      }
      program { name: "action_focus";
         signal: "elm,action,focus_highlight,show";
         source: "elm";
         action: STATE_SET "focused" 0.0;
         target: "focus_image";
      }
      program { name: "action_unfocus";
         signal: "elm,action,focus_highlight,hide";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "focus_image";
      }
      program { name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "disabler";
         target: "elm.text";
      }
      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "disabler";
         target: "elm.text";
      }
   }
}

/////////////////////////
// Vertical /////////////
/////////////////////////
group { name: "elm/button/base/spinner/increase/vertical";
   alias: "elm/button/base/spinner/increase/vertical_time_picker";
   alias: "elm/button/base/spinner/increase/vertical_date_picker";
   alias: "elm/button/base/spinner/increase/datetime";
   data.item: "focus_highlight" "on";
   images {
      image: "core_icon_picker_arrow_up.png" COMP;
   }
   script {
      public mouse_down = 0;
      public multi_down = 0;
   }
   parts {
      part { name: "arrow.image.bg";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            visible: 0;
            align: 0.5 0.0;
            min: SPINNER_UP_DOWN_BG_IMAGE_SIZE_INC;
            max: SPINNER_UP_DOWN_BG_IMAGE_SIZE_INC;
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            color: 61 184 204 76;
            visible: 1;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
         }
      }
      part { name: "arrow.image";
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "arrow.image.bg";
            rel2.to: "arrow.image.bg";
            min: SPINNER_UP_DOWN_ARROW_IMAGE_SIZE_INC;
            max: SPINNER_UP_DOWN_ARROW_IMAGE_SIZE_INC;
            color: 204 204 204 255;
            image.normal: "core_icon_picker_arrow_up.png";
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 204 204 204 127;
         }
      }
      part { name: "focus_image";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            align: 0.5 0.0;
            rel1.to: "arrow.image.bg";
            rel2.to: "arrow.image.bg";
         }
         description { state: "focused" 0.0;
            inherit: "default" 0.0;
         }
      }
      part { name: "over";
         type: RECT;
         repeat_events: 1;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
      part { name: "disabler";
         type: RECT;
         description { state: "default" 0.0;
            color: 0 0 0 0;
            visible: 0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
   }
   programs {
      program { name: "button_press";
         signal: "mouse,down,1*";
         source: "over";
         script {
            if ((get_int(multi_down) == 0) &&
                (get_int(mouse_down) == 0)) {
                  set_int(mouse_down, 1);
                  run_program(PROGRAM:"button_press2");
            }
         }
      }
      program { name: "button_press2";
         action: SIGNAL_EMIT "elm,action,press" "";
         after: "button_press_anim";
      }
      program { name: "button_press_anim";
         action: STATE_SET "pressed" 0.0;
         target: "arrow.image.bg";
         target: "arrow.image";
      }
      program { name: "button_unpress";
         signal: "mouse,up,1*";
         source: "over";
         script {
            if (get_int(mouse_down) == 1) {
                  set_int(mouse_down, 0);
                  run_program(PROGRAM:"button_unpress2");
                  run_program(PROGRAM:"button_unpress_anim");
            }
         }
      }
      program { name: "button_unpress2";
         action: SIGNAL_EMIT "elm,action,unpress" "";
      }
      program { name: "button_unpress_anim";
         action: STATE_SET "default" 0.0;
         target: "arrow.image.bg";
         target: "arrow.image";
      }
      program { name: "button_click";
         signal: "mouse,clicked,1";
         source: "over";
         script {
            if (get_int(multi_down) == 0) {
              run_program(PROGRAM:"play_sound");
              run_program(PROGRAM:"button_click2");
            }
         }
      }
      program { name: "play_sound";
         action: RUN_PLUGIN "touch_sound";
      }
      program { name: "longpress_sound";
         signal: "elm,action,longpress";
         source: "elm";
         action: RUN_PLUGIN "touch_haptic";
      }
      program { name: "action_unpressed";
         signal: "elm,action,unpressed";
         source: "elm";
         after: "button_unpress_anim";
      }
      program { name: "action_pressed";
         signal: "elm,action,pressed";
         source: "elm";
         after: "button_press_anim";
      }
      program { name: "button_click2";
         action: SIGNAL_EMIT "elm,action,click" "";
      }
      program { name: "action_focus";
         signal: "elm,action,focus_highlight,show";
         source: "elm";
         action: STATE_SET "focused" 0.0;
         target: "focus_image";
      }
      program { name: "action_unfocus";
         signal: "elm,action,focus_highlight,hide";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "focus_image";
      }
      program { name: "access_pressed";
         signal: "elm,action,anim,activate";
         source: "elm";
         action: STATE_SET "pressed" 0.0;
         target: "arrow.image.bg";
         target: "arrow.image";
         after: "access_pressed_anim";
      }
      program { name: "access_pressed_anim";
         action: STATE_SET "default" 0.0;
         transition: DECELERATE 0.1;
         target: "arrow.image.bg";
         target: "arrow.image";
      }
      program { name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "arrow.image.bg";
         target: "arrow.image";
         target: "disabler";
      }
      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "arrow.image.bg";
         target: "arrow.image";
         target: "disabler";
      }
      program {
         name: "multi_down";
         signal: "elm,action,multi,down";
         source: "elm";
         script {
            set_int(multi_down, 1);
         }
      }
      program {
         name: "multi_up";
         signal: "elm,action,multi,up";
         source: "elm";
         script {
            set_int(multi_down, 0);
         }
      }
   }
}

group { name: "elm/button/base/spinner/decrease/vertical";
   inherit: "elm/button/base/spinner/increase/vertical";
   alias: "elm/button/base/spinner/decrease/vertical_time_picker";
   alias: "elm/button/base/spinner/decrease/vertical_date_picker";
   alias: "elm/button/base/spinner/decrease/datetime";
   images {
      image: "core_icon_picker_arrow_down.png" COMP;
   }
   parts {
      part { name: "arrow.image";
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "arrow.image.bg";
            rel2.to: "arrow.image.bg";
            min: SPINNER_UP_DOWN_ARROW_IMAGE_SIZE_INC;
            max: SPINNER_UP_DOWN_ARROW_IMAGE_SIZE_INC;
            color: 204 204 204 255;
            image.normal: "core_icon_picker_arrow_down.png";
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 204 204 204 127;
         }
      }
   }
}

group { name: "elm/button/base/spinner/vertical";
   alias: "elm/button/base/spinner/vertical_time_picker";
   alias: "elm/button/base/spinner/datetime";
   data.item: "focus_highlight" "on";
   parts {
      part { name: "bg";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            min: SPINNER_VERTICAL_TEXT_BUTTON_BG_SIZE_INC;
         }
      }
      part { name: "elm.text";
         type: TEXT;
         scale: 1;
         description { state: "default" 0.0;
            visible: 1;
            color: 0 0 0 255;
            min: 0 SPINNER_TEXT_HEIGHT_INC;
            max: -1 SPINNER_TEXT_HEIGHT_INC;
            rel1.to: "bg";
            rel2.to: "bg";
            text {
               // FIXME: It should be changed to SNum-3L font.
               font: "Tizen:style=Light";
               size: 80;
               text_class: "tizen";
            }
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0 0 ;
         }
      }
      part { name: "focus_image";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "bg";
            rel2.to: "bg";
         }
         description { state: "focused" 0.0;
            inherit: "default" 0.0;
         }
      }
      part { name: "over";
         type: RECT;
         repeat_events: 1;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
      part { name: "disabler";
         type: RECT;
         description { state: "default" 0.0;
            color: 0 0 0 0;
            visible: 0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
   }
   programs {
      program { name: "button_click";
         signal: "mouse,clicked,1";
         source: "over";
         script {
              run_program(PROGRAM:"play_sound");
              run_program(PROGRAM:"button_click2");
         }
      }
      program { name: "play_sound";
         action: RUN_PLUGIN "touch_sound";
      }
      program { name: "button_click2";
         action: SIGNAL_EMIT "elm,action,click" "";
      }
      program { name: "action_focus";
         signal: "elm,action,focus_highlight,show";
         source: "elm";
         action: STATE_SET "focused" 0.0;
         target: "focus_image";
      }
      program { name: "action_unfocus";
         signal: "elm,action,focus_highlight,hide";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "focus_image";
      }
      program { name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "disabler";
         target: "elm.text";
      }
      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "disabler";
         target: "elm.text";
      }
   }
}

group { name: "elm/button/base/spinner/vertical_date_picker";
   inherit: "elm/button/base/spinner/vertical";
   parts {
      part { name: "bg";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            min: SPINNER_VERTICAL_DATE_PICKER_TEXT_BUTTON_SIZE_INC;
         }
      }
      part { name: "elm.text";
         type: TEXT;
         scale: 1;
         description { state: "default" 0.0;
            visible: 1;
            color: 0 0 0 255;
            min: 0 SPINNER_TEXT_HEIGHT_INC;
            max: -1 SPINNER_TEXT_HEIGHT_INC;
            text {
               font: "Tizen:style=Regular";
               size: 68;
               size_range: 50 68;
               fit: 1 0;
               text_class: "tizen";
            }
         }
         description { state: "active" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
   }
}

#undef BUTTON_DEFAULT_PAD_SIZE
#undef BUTTON_DEFAULT_MIN_SIZE
#undef BUTTON_DEFAULT_FONT_SIZE
#undef BUTTON_TEXT_PAD_SIZE
#undef BUTTON_TEXT_MIN_SIZE
#undef BUTTON_TEXT_FONT_SIZE
#undef BUTTON_BORDER
