group {
   name: "elm/border/base/default";
   data.item: "focus_highlight" "off";
   images {
      image: "whitetheme/icon_close_small.png" COMP;
      image: "whitetheme/icon_arrow_up_right.png" COMP;
      image: "whitetheme/icon_arrow_down_left.png" COMP;
      image: "whitetheme/icon_close_small_press.png" COMP;
      image: "whitetheme/icon_arrow_up_right_press.png" COMP;
      image: "whitetheme/icon_arrow_down_left_press.png" COMP;
      image: "whitetheme/shadow_title.png" COMP;
   }
   parts {
      part { name: "base";
         type : RECT;
         scale: 1;
         mouse_events: 0;
         description { state: "default" 0.0;
            color: BORDER_BG_COLOR_INC;
         }
      }
      part { name: "elm.padding.title";
         type: SPACER;
         scale:1 ;
         description {
            align: 0 0;
            min: BORDER_PADDING_WIDTH BORDER_HEIGHT_INC;
            fixed: 1 1;
            rel1 {
               relative: 0 0;
            } 
            rel2 {
               relative: 0 0;
            }
         }
      }
      part { name: "base-text";
         type :RECT;
         scale: 1;
         mouse_events: 1;
         description { state: "default" 0.0;
            color: BORDER_BG_COLOR_INC;
            align: 0 0;
            fixed: 1 1;
            min: 0 BORDER_HEIGHT_INC;
            rel1 {
               to: "elm.padding.title";
               relative: 1 0;
            }
            rel2 {
               to_y: "base";
               to_x: "elm.padding.title.button";
               relative: 0 0;
            }
         }
      }
      part { name: "elm.text.title";
         type: TEXT;
         scale: 1;
         mouse_events: 0;
         description { state: "default" 0.0;
            color: BORDER_FONT_COLOR_INC;
            rel1 {
               to: "base-text";
            }
            rel2 {
               to: "base-text";
            }
            text {
               font: "SLP:style=Bold";
               size: BORDER_FONT_SIZE_INC;
               align: 0.0 0.5;
            }
         }
         description { state: "focused" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
         }
      }
      part { name: "elm.padding.title.button";
         type: SPACER;
         scale:1 ;
         description { state: "default" 0.0;
            align: 1 0;
            min: BORDER_ICON_PADDING_WIDTH 0;
            fixed: 1 1;
            rel1 {
               to: "restore";
               relative: 0 0;
            } 
            rel2 {
               to: "restore";
               relative: 0 1;
            }
         }
      }
      part { name: "elm.padding.restore";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            align : 1 0;
            min: BORDER_ICON_PADDING_WIDTH 0;
            fixed: 1 1;
            rel1 {
               to: "maximize";
               relative: 0.0 0.0;
            }
            rel2 {
               to: "maximize";
               relative: 0.0 1.0;
            }
         }
      }
      part { name: "restore";
         mouse_events: 1;
         scale: 1;
         description { state: "default" 0.0;
            image.normal: "whitetheme/icon_arrow_down_left.png";
            min: BORDER_ICON_SIZE;
            max: BORDER_ICON_SIZE;
            align : 1 0.0;
            fixed: 1 1;
            rel1 {
               to: "elm.padding.restore";
                relative: 0.0 0.0;
            }
            rel2 {
               to: "elm.padding.restore";
               relative: 0.0 1.0;
            }
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            image.normal: "whitetheme/icon_arrow_down_left_press.png";
         }
      }
      part { name: "elm.padding.maximize";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            align : 1 0;
            min: BORDER_ICON_PADDING_WIDTH 0;
            fixed: 1 1;
            rel1 {
               to: "close";
               relative: 0.0 0.0;
            }
            rel2 {
               to: "close";
               relative: 0.0 1.0;
            }
         }
      }

      part { name: "maximize";
         mouse_events: 1;
         scale: 1;
         description { state: "default" 0.0;
            image.normal: "whitetheme/icon_arrow_up_right.png";
            min: BORDER_ICON_SIZE;
            max: BORDER_ICON_SIZE;
            align : 1 0.0;
            fixed: 1 1;
            rel1 {
               to: "elm.padding.maximize";
               relative: 0.0 0.0;
            }
            rel2 {
               to: "elm.padding.maximize";
               relative: 0.0 1.0;
            }
         }
         description { state: "maximized" 0.0;
            inherit: "default" 0.0;
            //color: 255 255 255 96;
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            image.normal: "whitetheme/icon_arrow_up_right_press.png";
         }
      }
      part { name: "elm.padding.close";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            align : 1 0;
            min: BORDER_PADDING_WIDTH BORDER_HEIGHT_INC;
            fixed: 1 1;
            rel1 {
               to: "base";
               relative: 1 0;
            }
            rel2 {
               to: "base";
               relative: 1 0;
            }
         }
      }
      part { name: "close";
         mouse_events: 1;
         scale: 1;
         description { state: "default" 0.0;
            image.normal: "whitetheme/icon_close_small.png";
            min: BORDER_ICON_SIZE;
            max: BORDER_ICON_SIZE;
            align : 1 0.5;
            fixed: 1 1;
            rel1 {
               to: "elm.padding.close";
               relative: 0.0 0.5;
            }
            rel2 {
               to: "elm.padding.close";
               relative: 0.0 0.5;
            }
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            image.normal: "whitetheme/icon_close_small_press.png";
            
         }
      }
      part { name: "shadow";
         mouse_events:  0;
         scale: 1;
         description { state: "default" 0.0;
            image {
               normal: "whitetheme/shadow_title.png";
            }
            min: 0 BORDER_SHADOW_HEIGHT;
            align: 0 0;
            fixed: 1 1;
            rel1 {
               to_x: "base";
               to_y: "elm.padding.title";
               relative: 0 1;
            }
            rel2 {
               to_x: "base";
               to_y: "elm.padding.title";
               relative: 1 1;
            }
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
   }
   programs {
      program {
         name: "focus_in";
         signal: "elm,action,focus";
         source: "elm";
         action: STATE_SET "focused" 0.0;
         transition: LINEAR 0.2;
         target: "elm.text.title";
         target: "base";
      }
      program {
         name: "focus_out";
         signal: "elm,action,unfocus";
         source: "elm";
         action: STATE_SET "default" 0.0;
         transition: LINEAR 0.2;
         target: "elm.text.title";
         target: "base";
      }
      program {
         name: "move_start";
         signal: "mouse,down,1";
         source: "elm.event.titlebar";
         action: SIGNAL_EMIT "elm,action,move,start" "elm";
      }
      program { signal: "mouse,clicked,1";
         source: "close";
         action: SIGNAL_EMIT "elm,action,close" "elm";
      }
      program { signal: "mouse,down,1";
         source: "close";
         action: STATE_SET "pressed" 0.0;
         target: "close";
      }
      program { signal: "mouse,up,1";
         source: "close";
         action: STATE_SET "default" 0.0;
         target: "close";
      }
      program { signal: "mouse,clicked,1";
         source: "maximize";
         action: SIGNAL_EMIT "elm,action,maximize" "elm";
      }
      program { signal: "mouse,down,1";
         source: "maximize";
         action: STATE_SET "pressed" 0.0;
         target: "maximize";
      }
      program { signal: "mouse,up,1";
         source: "maximize";
         action: STATE_SET "default" 0.0;
         target: "maximize";
      }
      program { signal: "mouse,clicked,1";
         source: "restore";
         action: SIGNAL_EMIT "elm,action,restore" "elm";
      }
      program { signal: "mouse,down,1";
         source: "restore";
         action: STATE_SET "pressed" 0.0;
         target: "restore";
      }
      program { signal: "mouse,up,1";
         source: "restore";
         action: STATE_SET "default" 0.0;
         target: "restore";
      }
   }
}
