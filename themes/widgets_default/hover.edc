/* TODO: replicate diagonal swallow slots to the other hover styles */
group { name: "elm/hover/base/default";
   parts {
      part { name: "elm.swallow.offset";
         type: SWALLOW;
         description { state: "default" 0.0;
            align: 0.0 0.0;
            rel1.relative: 0.0 0.0;
            rel2.relative: 0.0 0.0;
         }
      }
      part { name: "elm.swallow.size";
         type: SWALLOW;
         description { state: "default" 0.0;
            align: 0.0 0.0;
            rel1 {
               to: "elm.swallow.offset";
               relative: 1.0 1.0;
            }
            rel2 {
               to: "elm.swallow.offset";
               relative: 1.0 1.0;
            }
         }
      }
      part { name: "base";
         type: RECT;
         mouse_events: 1;
         description { state: "default" 0.0;
            color: HOVER_DEFAULT_DIM_COLOR;
         }
      }
      part { name: "elm.padding.slot.left";
         type: SPACER;
         mouse_events: 0;
         description { state: "default" 0.0;
            fixed: 1 0;
            min: HOVER_DEFAULT_PADDING_SIZE_DEFAULT 0;
            align: 1 0;
            rel1.to: "elm.swallow.size";
            rel2 {
               to: "elm.swallow.size";
               relative: 0 1;
            }
         }
      }
      part { name: "elm.padding.slot.top";
         type: SPACER;
         mouse_events: 0;
         description { state: "default" 0.0;
            fixed: 0 1;
            min: 0 HOVER_DEFAULT_PADDING_SIZE_DEFAULT;
            align: 0 1;
            rel1.to: "elm.swallow.size";
            rel2 {
               to: "elm.swallow.size";
               relative: 1 0;
            }
         }
      }
      part { name: "elm.padding.slot.right";
         type: SPACER;
         mouse_events: 0;
         description { state: "default" 0.0;
            fixed: 1 0;
            min: HOVER_DEFAULT_PADDING_SIZE_DEFAULT 0;
            align: 0 0;
            rel1 {
               to: "elm.swallow.size";
               relative: 1 0;
            }
            rel2.to: "elm.swallow.size";
         }
      }
      part { name: "elm.padding.slot.bottom";
         type: SPACER;
         mouse_events: 0;
         description { state: "default" 0.0;
            fixed: 0 1;
            min: 0 HOVER_DEFAULT_PADDING_SIZE_DEFAULT;
            align: 0.5 0;
            rel1 {
               to: "elm.swallow.size";
               relative: 0 1;
            }
            rel2.to: "elm.swallow.size";
         }
      }
      part { name: "box";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
            color: 0 0 0 0;
            rel1.to: "elm.swallow.size";
            rel2.to: "elm.swallow.size";
         }
      }
      part { name: "elm.swallow.slot.left";
         type: SWALLOW;
         description { state: "default" 0.0;
            align: 1.0 0.5;
            rel1.to: "elm.padding.slot.left";
            rel2 {
               to: "elm.padding.slot.left";
               relative: 0.0 1.0;
            }            
         }
      }
      part { name: "elm.swallow.slot.top-left";
         type: SWALLOW;
         description { state: "default" 0.0;
            align: 1.0 1.0;
            rel1 {
               to_x: "elm.padding.slot.left";
               to_y: "elm.padding.slot.top";
               relative: 0 0;
            }
            rel2 {
               to_x: "elm.padding.slot.left";
               to_y: "elm.padding.slot.top";
               relative: 0 0;
            }
         }
      }
      part { name: "elm.swallow.slot.top";
         type: SWALLOW;
         description { state: "default" 0.0;
            align: 0.5 1.0;
            rel1.to: "elm.padding.slot.top";
            rel2 {
               to: "elm.padding.slot.top";
               relative: 1.0 0.0;
            }
         }
      }
      part { name: "elm.swallow.slot.top-right";
         type: SWALLOW;
         description { state: "default" 0.0;
            align: 0.0 1.0;
            rel1 {
               to_x: "elm.padding.slot.right";
               to_y: "elm.padding.slot.top";
               relative: 1 0;
            }
            rel2 {
               to_x: "elm.padding.slot.right";
               to_y: "elm.padding.slot.top";
               relative: 1 0;
            }
         }
      }
      part { name: "elm.swallow.slot.right";
         type: SWALLOW;
         description { state: "default" 0.0;
            align: 0.0 0.5;
            rel1 {
               to: "elm.padding.slot.right";
               relative: 1.0 0.0;
            }
            rel2.to: "elm.padding.slot.right";
         }
      }
      part { name: "elm.swallow.slot.bottom-right";
         type: SWALLOW;
         description { state: "default" 0.0;
            align: 0 0;
            rel1 {
               to_x: "elm.padding.slot.right";
               to_y: "elm.padding.slot.bottom";
               relative: 1 1;
            }
            rel2 {
               to_x: "elm.padding.slot.right";
               to_y: "elm.padding.slot.bottom";
               relative: 1 1;
            }
         }
      }
      part { name: "elm.swallow.slot.bottom";
         type: SWALLOW;
         description { state: "default" 0.0;
            align: 0.5 0.0;
            rel1 {
               to: "elm.padding.slot.bottom";
               relative: 0.0 1.0;
            }
            rel2.to: "elm.padding.slot.bottom";
         }
      }
      part { name: "elm.swallow.slot.bottom-left";
         type: SWALLOW;
         description { state: "default" 0.0;
            align: 1 0;
            rel1 {
               to_x: "elm.padding.slot.left";
               to_y: "elm.padding.slot.bottom";
               relative: 0 1;
            }
            rel2 {
               to_x: "elm.padding.slot.left";
               to_y: "elm.padding.slot.bottom";
               relative: 0 1;
            }
         }
      }
      part { name: "elm.swallow.slot.middle";
         type: SWALLOW;
         description { state: "default" 0.0;
            rel1.to: "elm.swallow.size";
            rel2.to: "elm.swallow.size";
         }
      }
   }
   programs {
      program { name: "end";
         signal: "mouse,up,1";
         source: "base";
         action: SIGNAL_EMIT "elm,action,dismiss" "";
      }
   }
}

group { name: "elm/hover/base/popout";
   images {
      image: "whitetheme/hover_top_bg.png" COMP;
      image: "whitetheme/hover_left_bg.png" COMP;
      image: "whitetheme/hover_right_bg.png" COMP;
      image: "whitetheme/hover_bottom_bg.png" COMP;
      image: "whitetheme/hover_center_bg.png" COMP;
   }
   parts {
      part { name: "elm.swallow.offset";
         type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
            align: 0.0 0.0;
            rel1.relative: 0.0 0.0;
            rel2.relative: 0.0 0.0;
         }
      }
      part { name: "elm.swallow.size";
         type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
            align: 0.0 0.0;
            rel1 {
               to: "elm.swallow.offset";
               relative: 1.0 1.0;
            }
            rel2 {
               to: "elm.swallow.offset";
               relative: 1.0 1.0;
            }
         }
      }
      part { name: "base";
         type: RECT;
         scale: 1;
         mouse_events: 1;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 1.0;
            color: HOVER_DEFAULT_DIM_COLOR;
         }
      }
      
      part { name: "elm.padding.pop.left";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 0;
            min: HOVER_DEFAULT_PADDING_SIZE_DEFAULT 0;
            align: 1 0.5;
            rel1.to: "pop";
            rel2 {
               to: "pop";
               relative: 0.0 1.0;
            }
         }
      }
      
      part { name: "leftclip";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            rel2.to_x: "pop";
            rel2 {
               relative: 0.0 1.0;
               offset: 1 -1;
            }
         }
      }
      part { name: "elm.padding.swallow-left.left";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 0;
            min: HOVER_DEFAULT_PADDING_SIZE_DEFAULT 0;
            align: 1 0.5;
            rel1.to: "elm.swallow.slot.left";
            rel2 {
               to: "elm.swallow.slot.left";
               relative: 0.0 1.0;
            }
         }
      }
      part { name: "left";
         clip_to: "leftclip";
         scale: 1;
         description { state: "default" 0.0;
            visible: 0;
            rel1 {
               to_x: "elm.padding.swallow-left.left";
               to_y: "pop";
            }
            rel2 {
               to: "pop";
               relative: 0 1;
            }
            image {
               normal: "whitetheme/hover_left_bg.png";
               border: HOVER_DEFAULT_IMG_BORDER_LEFT;      
               border_scale: 1;       
               middle: 1;
            }
            fill.smooth: 1;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "elm.swallow.slot.left";
         type: SWALLOW;
         scale: 1;
         clip_to: "leftclip";
         description { state: "default" 0.0;
            align: 0.0 0.5;
            rel1 {
               to_x: "pop";
               to_y: "elm.swallow.slot.middle";
               relative: 0.0 0.0;
            }
            rel2 {
               to_x: "pop";
               to_y: "elm.swallow.slot.middle";
               relative: 0.0 1.0;
            }
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            align: 1.0 0.5;
         }
      }
      
      part { name: "elm.padding.pop.right";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 0;
            min: HOVER_DEFAULT_PADDING_SIZE_DEFAULT 0;
            align: 0 0.5;
            rel1.to: "pop";
            rel2 {
               to: "pop";
               relative: 0.0 1.0;
            }
         }
      }
      
      part { name: "rightclip";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            rel1 {
               to_x: "pop";
               relative: 1.0 0.0;
               offset: 0 0;
            }
         }
      }
      part { name: "elm.padding.swallow-right.right";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 0;
            min: HOVER_DEFAULT_PADDING_SIZE_DEFAULT 0;
            align: 0 0.5;
            rel1 {
               to: "elm.swallow.slot.right";
               relative: 1 0;
            }
            rel2.to: "elm.swallow.slot.right";
         }
      }
      part { name: "right";
         clip_to: "rightclip";
         scale: 1;
         description { state: "default" 0.0;
            visible: 0;
            rel1 {
               to: "pop";
               relative: 1 0;
            }
            rel2 {
               to_x: "elm.padding.swallow-right.right";
               to_y: "pop";
               relative: 1 1;
            }
            image {
               normal: "whitetheme/hover_right_bg.png";
               border: HOVER_DEFAULT_IMG_BORDER_RIGHT;           
               border_scale: 1;    
               middle: 1;    
            }
            fill.smooth: 0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "elm.swallow.slot.right";
         type: SWALLOW;
         clip_to: "rightclip";
         scale: 1;
         description { state: "default" 0.0;
            align: 1.0 0.5;
            rel1 {
               to_x: "pop";
               to_y: "elm.swallow.slot.middle";
               relative: 1.0 0.0;
            }
            rel2 {
               to_x: "pop";
               to_y: "elm.swallow.slot.middle";
               relative: 1.0 1.0;
            }
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            align: 0.0 0.5;
         }
      }
      part { name: "topclip";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            rel2 {
               to_y: "pop";
               relative: 1.0 0.0;
               offset: -1 0;
            }
         }
      }
      part { name: "elm.padding.swallow-top.top";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 0 1;
            min: 0 HOVER_DEFAULT_PADDING_SIZE_DEFAULT;
            align: 0 1;
            rel1.to: "elm.swallow.slot.top";
            rel2 {
               to: "elm.swallow.slot.top";
               relative: 1 0;
            }
         }
      }
      part { name: "top";
         clip_to: "topclip";
         scale: 1;
         description { state: "default" 0.0;
            visible: 0;
            rel1 {
               to_x: "pop";
               to_y: "elm.swallow.slot.top";
               relative: 0 0;
            }
            rel2 {
               to: "pop";
               relative: 1 0;
            }
            image {
               normal: "whitetheme/hover_top_bg.png";
               border: HOVER_DEFAULT_IMG_BORDER_TOP;         
               border_scale: 1;
               middle: 1;       
            }
            fill.smooth: 0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "elm.swallow.slot.top";
         type: SWALLOW;
         scale: 1;
         clip_to: "topclip";
         description { state: "default" 0.0;
            visible: 1;
            align: 0.5 0.0;
            rel1 {
               to_x: "elm.swallow.slot.middle";
               to_y: "pop";
               relative: 0.0 0;
            }
            rel2 {
               to_x: "elm.swallow.slot.middle";
               to_y: "pop";
               relative: 1 0;
            }
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            align: 0.5 1.0;
         }
      }
      part { name: "bottomclip";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            rel1 {
               to_y: "pop";
               relative: 0.0 1.0;
            }
         }
      }
      part { name: "elm.padding.swallow-bottom.bottom";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 0 1;
            min: 0 HOVER_DEFAULT_PADDING_SIZE_DEFAULT;
            align: 0.5 0;
            rel1 {
               to: "elm.swallow.slot.bottom";
               relative: 0 1;
            }
            rel2.to: "elm.swallow.slot.bottom";
         }
      }
      part { name: "bottom";
         clip_to: "bottomclip";
         scale: 1;
         description { state: "default" 0.0;
            visible: 0;
            rel1 {
               to: "pop";
               relative: 0 1;
            }
            rel2 {
               to_x: "pop";
               to_y: "elm.padding.swallow-bottom.bottom";
               relative: 1 1;
            }
            image {
               normal: "whitetheme/hover_bottom_bg.png";
               border: HOVER_DEFAULT_IMG_BORDER_BOTTOM;             
               border_scale: 1;
               middle: 1;
            }
            fill.smooth: 1;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "elm.swallow.slot.bottom";
         type: SWALLOW;
         scale: 1;
         clip_to: "bottomclip";
         description { state: "default" 0.0;
            align: 0.5 1;
            rel1 {
               to_x: "elm.swallow.slot.middle";
               to_y: "pop";
               relative: 0.0 1.0;
            }
            rel2 {
               to_x: "elm.swallow.slot.middle";
               to_y: "pop";
               relative: 1.0 1.0;
            }
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            align: 0.5 0.0;
         }
      }
      part { name: "elm.padding.pop.left-top";
         type: SPACER;
         scale: 1;
         description { 
            state: "default" 0.0;
            fixed: 1 1;
            min: HOVER_DEFAULT_PADDING_SIZE_DEFAULT HOVER_DEFAULT_PADDING_SIZE_DEFAULT;
            align: 1 1;
            rel1.to: "elm.swallow.slot.middle";
            rel2 {
               to: "elm.swallow.slot.middle";
               relative: 0 0;
            }
         }
      }
      part { name: "elm.padding.pop.right-bottom";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            min: HOVER_DEFAULT_PADDING_SIZE_DEFAULT HOVER_DEFAULT_PADDING_SIZE_DEFAULT;
            align: 0 0;
            rel1 {
               to: "elm.swallow.slot.middle";
               relative: 1 1;
            }
            rel2.to: "elm.swallow.slot.middle";
         }
      }
      part { name: "pop";
         mouse_events: 1;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "elm.padding.pop.left-top";
            rel2.to: "elm.padding.pop.right-bottom";
            image {
               normal: "whitetheme/hover_center_bg.png";
               border: HOVER_DEFAULT_IMG_BORDER_CENTER;
               middle: 1;
            }
            visible: 1;
         }
      }
      part { name: "elm.swallow.slot.middle";
         type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "elm.swallow.size";
            rel2.to: "elm.swallow.size";
            color: HOVER_COLOR_TRANSPARENT;
         }
      }
   }
   programs {
      program { name: "end";
         signal: "mouse,up,1";
         source: "base";
         action: SIGNAL_EMIT "elm,action,dismiss" "";
      }

      program { name: "show";
         signal: "elm,action,show";
         source: "elm";
         action: STATE_SET "visible" 0.0;
         target: "base";
      }
      program { name: "hide";
         signal: "elm,action,hide";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "base";
      }

      program { name: "leftshow";
         signal: "elm,action,slot,left,show";
         source: "elm";
         action: STATE_SET "visible" 0.0;
         transition: DECELERATE 0.5;
         target: "left";
         target: "elm.swallow.slot.left";
      }
      program { name: "lefthide";
         signal: "elm,action,slot,left,hide";
         source: "elm";
         action: STATE_SET "default" 0.0;
         transition: DECELERATE 0.5;
         target: "left";
         target: "elm.swallow.slot.left";
      }
      program { name: "rightshow";
         signal: "elm,action,slot,right,show";
         source: "elm";
         action: STATE_SET "visible" 0.0;
         transition: DECELERATE 0.5;
         target: "right";
         target: "elm.swallow.slot.right";
      }
      program { name: "righthide";
         signal: "elm,action,slot,right,hide";
         source: "elm";
         action: STATE_SET "default" 0.0;
         transition: DECELERATE 0.5;
         target: "right";
         target: "elm.swallow.slot.right";
      }
      program { name: "topshow";
         signal: "elm,action,slot,top,show";
         source: "elm";
         action: STATE_SET "visible" 0.0;
         transition: DECELERATE 0.5;
         target: "top";
         target: "elm.swallow.slot.top";
      }
      program { name: "tophide";
         signal: "elm,action,slot,top,hide";
         source: "elm";
         action: STATE_SET "default" 0.0;
         transition: DECELERATE 0.5;
         target: "top";
         target: "elm.swallow.slot.top";
      }
      program { name: "bottomshow";
         signal: "elm,action,slot,bottom,show";
         source: "elm";
         action: STATE_SET "visible" 0.0;
         transition: DECELERATE 0.5;
         target: "bottom";
         target: "elm.swallow.slot.bottom";
      }
      program { name: "bottomhide";
         signal: "elm,action,slot,bottom,hide";
         source: "elm";
         action: STATE_SET "default" 0.0;
         transition: DECELERATE 0.5;
         target: "bottom";
         target: "elm.swallow.slot.bottom";
      }
   }
}

//In the hover used by the menu only the bottom part is used.
group { name: "elm/hover/base/menu";
   images {
      image: "whitetheme/hoversel_bg.png" COMP;
      image: "whitetheme/hoversel_bg_shadow.png" COMP;
   }
   parts {
      part { name: "elm.swallow.offset";
         type: SWALLOW;
         description { state: "default" 0.0;
            align: 0.0 0.0;
            rel1.relative: 0.0 0.0;
            rel2.relative: 0.0 0.0;
         }
      }
      part { name: "elm.swallow.size";
         type: SWALLOW;
         description { state: "default" 0.0;
            align: 0.0 0.0;
            rel1 {
               to: "elm.swallow.offset";
               relative: 1.0 1.0;
            }
            rel2 {
               to: "elm.swallow.offset";
               relative: 1.0 1.0;
            }
         }
      }
      part { name: "base";
         type: RECT;
         mouse_events: 1;
         description { state: "default" 0.0;
            color: HOVER_COLOR_TRANSPARENT;
         }
         description { state: "visible" 0.0;
            inherit: "default" 1.0;
            color: HOVER_DEFAULT_DIM_COLOR;
         }
      }
      part { name: "elm.swallow.slot.left";
         type: SWALLOW;
         description { state: "default" 0.0;
         }
      }
      part { name: "elm.swallow.slot.right";
         type: SWALLOW;
         description { state: "default" 0.0;
         }
      }
      part { name: "elm.swallow.slot.top";
         type: SWALLOW;
         description { state: "default" 0.0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
         }
      }
      part { name: "bottomclip";
         type: RECT;
         description { state: "default" 0.0;
            rel1.to_y: "elm.padding.clip.top";
         }
      }
      part { name: "elm.padding.clip.top";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 0 1;
            align: 0.5 1;
            min: 0 HOVER_MENU_CLIP_PADDING_TOP;
            rel1 {
               to_y: "pop";
               relative: 0 0;
            }
            rel2 {
               to_y: "pop";
               relative: 0 0;
            }
         }
      }
      part { name: "elm.padding.slot.left-top";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            align: 1 1;
            min: HOVER_MENU_SLOT_PADDING_LEFT_TOP;
            rel1.to: "elm.swallow.slot.bottom";
            rel2 {
               to: "elm.swallow.slot.bottom";
               relative: 0 0;
            }
         }
      }
      part { name: "elm.padding.slot.right-bottom";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 0 0;
            min: HOVER_MENU_SLOT_PADDING_RIGHT_BOTTOM;
            rel1 {
               to: "elm.swallow.slot.bottom";
               relative: 1 1;
            }
            rel2.to: "elm.swallow.slot.bottom";            
         }
      }
      part { name: "bottom";
         clip_to: "bottomclip";
         scale: 1;
         description { state: "default" 0.0;
            visible: 0;
            rel1.to: "elm.padding.slot.left-top";
            rel2.to: "elm.padding.slot.right-bottom";
            image {
               normal: "whitetheme/hoversel_bg.png";
               border: HOVER_MENU_IMG_BG_BORDER;
               border_scale: 1;
               middle: SOLID;
            }
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "bottom_sh";
         clip_to: "bottomclip";
         scale: 1;
         description { state: "default" 0.0;
            visible: 0;
            rel1.to: "elm.padding.slot.left-top";
            rel2.to: "elm.padding.slot.right-bottom";
            image {
               normal: "whitetheme/hoversel_bg_shadow.png";
               border: HOVER_MENU_IMG_BG_BORDER;
               border_scale: 1;
               middle: 0;
            }
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "elm.swallow.slot.bottom";
         type: SWALLOW;
         clip_to: "bottomclip";
         description { state: "default" 0.0;
            align: 0.5 1.0;            
            rel1 {
               to: "elm.swallow.slot.middle";
               relative: 0.0 1.0;
            }
            rel2 {
               to: "elm.swallow.slot.middle";
               relative: 1.0 1.0;
               offset: -1 0;
            }
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            align: 0.5 0.0;
         }
      }
      part { name: "pop";
         mouse_events: 1;
         repeat_events:1;
         type: RECT;
         description { state: "default" 0.0;
            rel1.to: "elm.swallow.slot.middle";
            rel2.to: "elm.swallow.slot.middle";
            visible: 0;
         }
      }      
      part { name: "elm.swallow.slot.middle";
         type: SWALLOW;
         repeat_events:1;
         description { state: "default" 0.0;
            rel1 {
               to_x: "elm.padding.slot.middle.left-top";
               to_y: "elm.swallow.size";
               relative: 1 0;
            }
            rel2 {
               to: "elm.swallow.size";
               offset: 0 0;
            }
         }
      }
      part { name: "elm.padding.slot.middle.left-top";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            align: 0 0;
            min: HOVER_MENU_SLOT_MIDDLE_PADDING_LEFT_TOP;
            rel1.to: "elm.swallow.size";            
            rel2 {
               to: "elm.swallow.size";
               relative: 0 0;
            }
         }
      }
   }
   programs {
      program { name: "end";
         signal: "mouse,up,1";
         source: "base";
         action: SIGNAL_EMIT "elm,action,dismiss" "";
      }
      program { name: "show";
         signal: "elm,action,show";
         source: "elm";
         action: STATE_SET "visible" 0.0;
                 //            transition: DECELERATE 0.5;
         target: "base";
      }
      program { name: "hide";
         signal: "elm,action,hide";
         source: "elm";
         action: STATE_SET "default" 0.0;
                 //            transition: DECELERATE 0.5;
         target: "base";
      }
      program { name: "bottomshow";
         signal: "elm,action,slot,bottom,show";
         source: "elm";
         action: STATE_SET "visible" 0.0;
         transition: DECELERATE 0.3;
         target: "bottom";
         target: "bottom_sh";
         target: "elm.swallow.slot.bottom";
      }
      program { name: "bottomhide";
         signal: "elm,action,slot,bottom,hide";
         source: "elm";
         action: STATE_SET "default" 0.0;
         transition: DECELERATE 0.5;
         target: "bottom";
         target: "bottom_sh";
         target: "elm.swallow.slot.bottom";
      }
   }
}

//In the hover used by the submenu only the bottom part is used
//and no part should interact except the bottom area
group { name: "elm/hover/base/submenu";
   images {
      image: "whitetheme/hoversel_bg.png" COMP;
      image: "whitetheme/hoversel_bg_shadow.png" COMP;
   }
   parts {
      part { name: "elm.swallow.offset";
         type: SWALLOW;
         repeat_events:1;
         description { state: "default" 0.0;
            align: 0.0 0.0;
            rel1.relative: 0.0 0.0;
            rel2.relative: 0.0 0.0;
         }
      }
      part { name: "elm.swallow.size";
         type: SWALLOW;
         description { state: "default" 0.0;
            align: 0.0 0.0;
            rel1 {
               to: "elm.swallow.offset";
               relative: 1.0 1.0;
            }
            rel2 {
               to: "elm.swallow.offset";
               relative: 1.0 1.0;
            }
         }
      }
      //here we do non catch events like the hover hover does
      part { name: "base";
         type: RECT;
         mouse_events: 1;
         description { state: "default" 0.0;
            color: HOVER_COLOR_TRANSPARENT;
            visible: 0;
         }
      }
      part { name: "elm.swallow.slot.left";
         type: SWALLOW;
         description { state: "default" 0.0;
         }
      }
      part { name: "elm.swallow.slot.right";
         type: SWALLOW;
         description { state: "default" 0.0;
         }
      }
      part { name: "elm.swallow.slot.top";
         type: SWALLOW;
         description { state: "default" 0.0;
         }
      }
      part { name: "bottomclip";
         type: RECT;
         description { state: "default" 0.0;
            rel1.to_y: "elm.padding.clip.top";
         }
      }
      
      part { name: "elm.padding.clip.top";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 0 1;
            align: 0.5 1;
            min: 0 HOVER_MENU_CLIP_PADDING_TOP;
            rel1 {
               to_y: "pop";
               relative: 0 0;
            }
            rel2 {
               to_y: "pop";
               relative: 0 0;
            }
         }
      }
      part { name: "elm.padding.slot.left-top";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            align: 1 1;
            min: HOVER_MENU_SLOT_PADDING_LEFT_TOP;
            rel1.to: "elm.swallow.slot.bottom";
            rel2 {
               to: "elm.swallow.slot.bottom";
               relative: 0 0;
            }
         }
      }
      
      part { name: "elm.padding.slot.right-bottom";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 0 0;
            min: HOVER_MENU_SLOT_PADDING_RIGHT_BOTTOM;
            rel1 {
               to: "elm.swallow.slot.bottom";
               relative: 1 1;
            }
            rel2.to: "elm.swallow.slot.bottom";            
         }
      }
      part { name: "bottom";
         clip_to: "bottomclip";
         scale: 1;
         description { state: "default" 0.0;
            visible: 0;
            rel1.to: "elm.padding.slot.left-top";
            rel2.to: "elm.padding.slot.right-bottom";
            image {
               normal: "whitetheme/hoversel_bg.png";
               border: HOVER_MENU_IMG_BG_BORDER;
               border_scale: 1;
               middle: SOLID;
            }
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "bottom_sh";
         clip_to: "bottomclip";
         scale: 1;
         description { state: "default" 0.0;
            visible: 0;
            rel1.to: "elm.padding.slot.left-top";
            rel2.to: "elm.padding.slot.right-bottom";
            image {
               normal: "whitetheme/hoversel_bg_shadow.png";
               border: HOVER_MENU_IMG_BG_BORDER;
               border_scale: 1;
               middle: 0;
            }
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "elm.swallow.slot.bottom";
         type: SWALLOW;
         clip_to: "bottomclip";
         description { state: "default" 0.0;
            align: 0.5 1.0;            
            rel1 {
               to: "elm.swallow.slot.middle";
               relative: 0.0 1.0;
            }
            rel2 {
               to: "elm.swallow.slot.middle";
               relative: 1.0 1.0;
               offset: -1 0;
            }
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            align: 0.5 0.0;
         }
      }
      part { name: "pop";
         mouse_events: 1;
         repeat_events:1;
         type: RECT;
         description { state: "default" 0.0;
            rel1.to: "elm.swallow.slot.middle";
            rel2.to: "elm.swallow.slot.middle";
            visible: 0;
         }
      }
      part { name: "elm.swallow.slot.middle";
         type: SWALLOW;
         repeat_events:1;
         description { state: "default" 0.0;
            rel1 {
               to_x: "elm.padding.slot.middle.left";
               to_y: "elm.swallow.size";
               relative: 1 0;
            }
            rel2 {
               to: "elm.swallow.size";
               offset: 0 0;
            }
         }
      }
      part { name: "elm.padding.slot.middle.left";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            align: 0 0;
            min: HOVER_MENU_SLOT_MIDDLE_PADDING_LEFT_TOP;
            rel1.to: "elm.swallow.size";            
            rel2 {
               to: "elm.swallow.size";
               relative: 0 0;
            }
         }
      }
   }
   programs {
      program { name: "end";
         signal: "mouse,up,1";
         source: "base";
         action: SIGNAL_EMIT "elm,action,dismiss" "";
      }
      program { name: "show";
         signal: "elm,action,show";
         source: "elm";
         action: STATE_SET "visible" 0.0;
         target: "base";
      }
      program { name: "hide";
         signal: "elm,action,hide";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "base";
      }
      program { name: "bottomshow";
         signal: "elm,action,slot,bottom,show";
         source: "elm";
         action: STATE_SET "visible" 0.0;
         transition: DECELERATE 0.3;
         target: "bottom";
         target: "bottom_sh";
         target: "elm.swallow.slot.bottom";
      }
      program { name: "bottomhide";
         signal: "elm,action,slot,bottom,hide";
         source: "elm";
         action: STATE_SET "default" 0.0;
         transition: DECELERATE 0.5;
         target: "bottom";
         target: "bottom_sh";
         target: "elm.swallow.slot.bottom";
      }
   }
}

group { name: "elm/hover/base/hoversel_horizontal/default";
   alias: "elm/hover/base/hoversel_horizontal/entry";
   images {
      image: "whitetheme/hoversel_bg.png" COMP;
      image: "whitetheme/hoversel_bg_shadow" COMP;
   }
   parts {
      part { name: "elm.swallow.offset";
         type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
            align: 0.0 0.0;
            rel1.relative: 0.0 0.0;
            rel2.relative: 0.0 0.0;
         }
      }
      part { name: "elm.swallow.size";
         type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
            align: 0.0 0.0;
            rel1 {
               to: "elm.swallow.offset";
               relative: 1.0 1.0;
            }
            rel2 {
               to: "elm.swallow.offset";
               relative: 1.0 1.0;
            }
         }
      }
      
      part { name: "elm.padding.bg-left.left-top";
         type: SPACER;
         scale: 1;
         mouse_events: 0;
         description { state: "default" 0.0;
            align: 1 1;
            fixed: 1 1;
            min: HOVER_HOVERSEL_VERTICAL_PADDING_SIZE_DEFAULT
               HOVER_HOVERSEL_VERTICAL_PADDING_SIZE_TOP;
            rel1.to: "elm.swallow.slot.left";
            rel2 {
               to: "elm.swallow.slot.left";
               relative: 0 0;
            }
         }
      }
      part { name: "elm.padding.bg-left.right-bottom";
         type: SPACER;
         scale: 1;
         mouse_events: 0;
         description { state: "default" 0.0;
            align: 0 0;
            fixed: 1 1;
            min: HOVER_HOVERSEL_VERTICAL_PADDING_SIZE_DEFAULT
               HOVER_HOVERSEL_VERTICAL_PADDING_SIZE_DEFAULT;
            rel1 {
               to_x: "elm.swallow.slot.right";
               to_y: "elm.swallow.slot.left";
               relative: 1 1;
            }
            rel2 {
               to_x: "elm.swallow.slot.right";
               to_y: "elm.swallow.slot.left";
            }
         }
      }
      part { name: "elm.padding.bg-right.left-top";
         type: SPACER;
         scale: 1;
         mouse_events: 0;
         description { state: "default" 0.0;
            align: 1 1;
            fixed: 1 1;
            min: HOVER_HOVERSEL_VERTICAL_PADDING_SIZE_DEFAULT
               HOVER_HOVERSEL_VERTICAL_PADDING_SIZE_TOP;
            rel1.to: "elm.swallow.slot.left";
            rel2 {
               to: "elm.swallow.slot.left";
               relative: 0 0;            
            }
         }
      }
      part { name: "elm.padding.bg-right.right-bottom";
         type: SPACER;
         scale: 1;
         mouse_events: 0;
         description { state: "default" 0.0;
            align: 0 0;
            fixed: 1 1;
            min: HOVER_HOVERSEL_VERTICAL_PADDING_SIZE_DEFAULT
               HOVER_HOVERSEL_VERTICAL_PADDING_SIZE_DEFAULT;
            rel1 {
               to: "elm.swallow.slot.right";
               relative: 1 1;
            }
            rel2.to: "elm.swallow.slot.right";
         }
      }
      part { name: "base";
         type: RECT;
         scale: 1;
         mouse_events: 1;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 1.0;
            color: HOVER_DEFAULT_DIM_COLOR;
         }
      }
      part { name: "button_image";
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "elm.padding.bg-left.left-top";
            rel2.to: "elm.padding.bg-left.right-bottom";
            image {
               normal: "whitetheme/hoversel_bg.png";
               border: HOVER_MENU_IMG_BG_BORDER;
               border_scale: 1;
               middle: SOLID;
            }
         }
         description { state: "right" 0.0;
            rel1.to: "elm.padding.bg-right.left-top";
            rel2 {
               to: "elm.padding.bg-right.right-bottom";
               relative: 1 1;
            }
            image {
               normal: "whitetheme/hoversel_bg.png";
               border: HOVER_MENU_IMG_BG_BORDER;
               border_scale: 1;
               middle: SOLID;
            }
         }
      }
      part { name: "leftclip";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            rel2 {
               to_x: "edge_left";
               relative: 0.0 1.0;
            }
         }
      }
      part { name: "elm.swallow.slot.left";
         type: SWALLOW;
         scale: 1;
         clip_to: "leftclip";
         description { state: "default" 0.0;
            align: 1.0 0.5;
            rel1 {
               to: "elm.swallow.slot.middle";
               relative: 0.0 0.0;
               offset: -1 0;
            }
            rel2 {
               to: "elm.swallow.slot.middle";
               relative: 0.0 1.0;
               offset: -1 -1;
            }
         }
      }
      part { name: "rightclip";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            rel1 {
               to_x: "edge_right";
               relative: 1.0 0.0;
            }
         }
      }
      part { name: "elm.swallow.slot.right";
         type: SWALLOW;
         scale: 1;
         clip_to: "rightclip";
         description { state: "default" 0.0;
            align: 0.0 0.5;
            rel1 {
               to: "elm.swallow.slot.middle";
               relative: 1.0 0.0;
            }
            rel2 {
               to: "elm.swallow.slot.middle";
               relative: 1.0 1.0;
               offset: 0 -1;
            }
         }
      }
      part { name: "over1";
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "button_image";
            rel2.to: "button_image";
            image {
               normal: "whitetheme/hoversel_bg_shadow.png";
               border: HOVER_MENU_IMG_BG_BORDER;
               border_scale: 1;
            }
         }
      }
      part { name: "edge_left";
         mouse_events:  0;
         scale: 1;
         type: RECT;
         description { state: "default" 0.0;
            visible: 0;
            rel1.to: "elm.swallow.size";
            rel2.to: "elm.swallow.size";
            color: HOVER_COLOR_TRANSPARENT;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "edge_right";
         mouse_events:  0;
         scale: 1;
         type: RECT;
         description { state: "default" 0.0;
            visible: 0;
            rel1.to: "elm.swallow.size";
            rel2 {
               to: "elm.swallow.size";
               relative: 1 0;
            }
            color: HOVER_COLOR_TRANSPARENT;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "elm.swallow.slot.middle";
         type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "elm.swallow.size";
            rel2.to: "elm.swallow.size";
         }
      }
   }
   programs {
      program { name: "end";
         signal: "mouse,up,1";
         source: "base";
         action: SIGNAL_EMIT "elm,action,dismiss" "";
      }
      program { name: "show";
         signal: "elm,action,show";
         source: "elm";
         action: STATE_SET "visible" 0.0;
         transition: DECELERATE 0.5;
         target: "base";
      }
      program { name: "hide";
         signal: "elm,action,hide";
         source: "elm";
         action: STATE_SET "default" 0.0;
         transition: DECELERATE 0.5;
         target: "base";
      }

      program { name: "leftshow";
         signal: "elm,action,slot,left,show";
         source: "elm";
         action: STATE_SET "visible" 0.0;
         transition: DECELERATE 0.5;
         target: "edge_left";
         after: "leftshow2";
      }
      program { name: "leftshow2";
         action: STATE_SET "visible" 0.0;
         transition: DECELERATE 0.5;
         target: "elm.swallow.slot.left";
      }
      program { name: "leftshow3";
         signal: "elm,action,slot,left,show";
         source: "elm";
         action: STATE_SET "default" 0.0;
         transition: DECELERATE 0.5;
         target: "button_image";
      }

      program { name: "lefthide";
         signal: "elm,action,slot,left,hide";
         source: "elm";
         action: STATE_SET "default" 0.0;
         transition: DECELERATE 0.5;
         target: "elm.swallow.slot.left";
         after: "lefthide2";
      }
      program { name: "lefthide2";
         action: STATE_SET "default" 0.0;
         transition: DECELERATE 0.5;
         target: "edge_left";
      }
      program { name: "rightshow";
         signal: "elm,action,slot,right,show";
         source: "elm";
         action: STATE_SET "visible" 0.0;
         target: "edge_right";
         after: "rightshow2";
      }
      program { name: "rightshow2";
         action: STATE_SET "visible" 0.0;
         target: "elm.swallow.slot.right";
      }
      program { name: "rightshow3";
         signal: "elm,action,slot,right,show";
         source: "elm";
         action: STATE_SET "right" 0.0;
         target: "button_image";
      }   
      program { name: "righthide";
         signal: "elm,action,slot,right,hide";
         source: "elm";
         action: STATE_SET "default" 0.0;
         transition: DECELERATE 0.5;
         target: "elm.swallow.slot.right";
         after: "righthide2";
      }
      program { name: "righthide2";
         action: STATE_SET "default" 0.0;
         target: "edge_right";
      }
   }
}

