/*
 * Copyright (c) 2010 Samsung Electronics Co., Ltd All Rights Reserved 
 *
 * PROPRIETARY/CONFIDENTIAL
 *
 * This software is the confidential and proprietary information of SAMSUNG
 * ELECTRONICS ("Confidential Information"). You agree and acknowledge that this
 * software is owned by Samsung and you shall not disclose such Confidential
 * Information and shall use it only in accordance with the terms of the license
 * agreement you entered into with SAMSUNG ELECTRONICS. SAMSUNG make no
 * representations or warranties about the suitability of the software, either
 * express or implied, including but not limited to the implied warranties of
 * merchantability, fitness for a particular purpose, or non-infringement.
 * SAMSUNG shall not be liable for any damages suffered by licensee arising out
 * of or releated to this software.
 *
 */

///////////////////////////////////////////////////////////////////////////////////////
   group { name: "elm/progressbar/horizontal/default";
      images {
         image: "progress_slider_bg.9.png" COMP;
         image: "progress_slider_bar.9.png" COMP;
      }
      parts {
         part { name: "elm.background.progressbar";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 0 0;
               }
               rel2 {
                  relative: 1.0 1.0;
               }
            }
         }
         part { name: "elm.swallow.bar";
            mouse_events: 0;
            scale: 1;
            type: SWALLOW;
            description {
               min: 0 18;
               max: 99999 18;
               state: "default" 0.0;
               rel1 {
                  to_y: "elm.background.progressbar";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to: "elm.background.progressbar";
                  relative: 1.0 1.0;
               }
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               align: 0.0 0.5;
               rel1 {
                  offset: 0 0;
                  to_y: "elm.background.progressbar";
               }
               rel2 {
                  offset: 0 -1;
                  relative: 0.0 1.0;
                  to_y: "elm.background.progressbar";
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               rel2.offset: 0 -1;//4 -1;
            }
         }
         part { name: "background";
            mouse_events: 0;
            scale: 1;
            clip_to: "elm.background.progressbar";
            description {
               state: "default" 0.0;
               rel1 {
                  to: "elm.swallow.bar";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to: "elm.swallow.bar";
                  relative: 1.0 1.0;
                  offset: -1 -1;
               }
               image {
                  normal: "progress_slider_bg.9.png";
                  border: 3 3 2 2;
               }
            }
         }
         part { name: "elm.text.status";
            type: TEXT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               fixed: 1 1;
               visible: 0;
               rel1 {
                  to: "background";
                  relative: 0.5 0.5;
               }
               rel2 {
                  to: "background";
                  relative: 0.5 0.5;
               }
               text {
                  font: "SLP:style=Roman";
                  size: PROGRESSBAR_TITLE_FONT_SIZE_INC;
                  min: 0 0;
                  align: 0.5 0.0;
                  text_class: "slp";
               }
               color: PROGRESSBAR_DEFAULT_STYLE_STATUS_TEXT_COLOR_INC;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 0;
               text.min: 1 1;
            }
         }
         part { name: "elm.progress.progressbar";
            mouse_events: 0;
            scale: 1;
            clip_to: "elm.background.progressbar";
            description {
               state: "default" 0.0;
               min: 0 0;
               fixed: 1 0;
               rel1 {
                  to: "elm.swallow.bar";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to_y: "elm.swallow.bar";
                  to_x: "elm.cur.progressbar";
                  offset: -1 -1;
               }
               image {
                  normal: "progress_slider_bar.9.png";
                  border: 3 3 2 2;
               }
            }
            description {
               state: "invert" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to_y: "elm.swallow.bar";
                  to_x: "elm.cur.progressbar";
               }
               rel2 {
                  to: "elm.swallow.bar";
                  relative: 1.0 1.0;
               }
            }
            description {
               state: "state_begin" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to: "elm.swallow.bar";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to: "elm.swallow.bar";
                  relative: 0.1 1.0;
               }
            }
            description {
               state: "state_end" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to: "elm.swallow.bar";
                  relative: 0.9 0.0;
               }
               rel2 {
                  to: "elm.swallow.bar";
                  relative: 1.0 1.0;
               }
            }
         }
         part { name: "text-bar";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            clip_to: "progress-rect";
            //effect: SOFT_SHADOW;
            scale: 1;
            description { state: "default" 0.0;
               align: 0.0 0.0;
               fixed: 1 1;
               visible: 0;
               rel1.to: "elm.text.status";
               rel1.offset: -1 -1;
               rel2.to: "elm.text.status";
               text {
                  text_source: "elm.text.status";
                  font: "SLP:style=Roman";
                  size: 10;
                  min: 0 0;
                  align: 0.0 0.0;
                  text_class: "slp";
               }
               color: PROGRESSBAR_DEFAULT_STYLE_TEXT_COLOR_INC;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 0;
               text.min: 1 1;
            }
         }
         part { name: "elm.cur.progressbar";
            mouse_events: 0;
            scale: 1;
            dragable {
               confine: "background";
               x: 1 1 1;
               y: 0 0 0;
            }
            description { state: "default" 0.0;
               min: 0 28;
               fixed: 1 1;
               visible: 0;
               rel1 {
                  to: "background";
                  relative: 0 0;
               }
               rel2.to: "background";
           }
         }
         part { name: "progress-rect";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               rel1.to: "elm.progress.progressbar";
               rel2.to: "elm.progress.progressbar";
            }
         }
         part { name: "elm.padding.left";
            type: RECT;
            scale: 1;
            description {
            state: "default" 0.0;
            min: 20 0;
            fixed: 1 0;
            rel1 {
               relative: 0.0 0.0;
               offset: 0 0;
            }
            rel2 {
               relative: 0.0  1.0;
               offset: 0 0;
            }
            color: 0 0 0 0;
            align: 0.0 0.0;
            }
         }
         part { name: "elm.text";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               fixed: 1 1;
               align: 0.0 0.5;
               rel1 {
                  to_x: "elm.padding.left";
                  relative: 1.0 0.0;
                  offset: 0 0;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: 0 0;
               }
               color: PROGRESSBAR_DEFAULT_STYLE_STATUS_TEXT_COLOR_INC;
               text {
                  font: "SLP:style=Roman";
                  size: 34;
                  min: 0 0;
                  align: 0.0 0.5;
                  text_class: "slp";
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 0;
               text.min: 1 1;
            }
         }
      }
      programs {
         program { name: "label_show";
            signal: "elm,state,text,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.text";
         }
         program { name: "label_hide";
            signal: "elm,state,text,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.text";
         }
         program { name: "icon_show";
            signal: "elm,state,icon,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.swallow.content";
         }
         program { name: "icon_hide";
            signal: "elm,state,icon,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.swallow.content";
         }
         program { name: "units_show";
            signal: "elm,state,units,visible";
            source: "elm";
            action:  STATE_SET "show" 0.0;
            target: "text-bar";
            target: "elm.text.status";
         }
         program { name: "units_hide";
            signal: "elm,state,units,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "text-bar";
            target: "elm.text.status";
         }
         program { name: "slide_to_end";
            action:  STATE_SET "state_end" 0.0;
            transition: LINEAR 0.5;
            target: "elm.progress.progressbar";
            after: "slide_to_begin";
         }
         program { name: "slide_to_begin";
            signal: "elm,state,slide,begin";
            action: STATE_SET "state_begin" 0.0;
            target: "elm.progress.progressbar";
            transition: LINEAR 0.5;
            after: "slide_to_end";
         }
         program { name: "start_pulse";
            signal: "elm,state,pulse,start";
            source: "elm";
            after: "slide_to_end";
         }
         program { name: "stop_pulse";
            signal: "elm,state,pulse,stop";
            source: "elm";
            action: ACTION_STOP;
            target: "slide_to_begin";
            target: "slide_to_end";
            target: "start_pulse";
            after: "state_pulse";
         }
         program { name: "state_pulse";
            signal: "elm,state,pulse";
            source: "elm";
            action: STATE_SET "state_begin" 0.0;
            target: "elm.progress.progressbar";
            after: "units_hide";
         }
         program { name: "state_fraction";
            signal: "elm,state,fraction";
            source: "elm";
            action: ACTION_STOP;
            target: "slide_to_begin";
            target: "slide_to_end";
            target: "start_pulse";
            action: STATE_SET "default" 0.0;
            target: "elm.progress.progressbar";
         }
         program { name: "set_invert_on";
            signal: "elm,state,inverted,on";
            source: "elm";
            action:  STATE_SET "invert" 0.0;
            target: "elm.progress.progressbar";
         }
         program { name: "set_invert_off";
            signal: "elm,state,inverted,off";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.progress.progressbar";
         }
      }
   }

   group { name: "elm/progressbar/horizontal/list_progress";
      images {
         image: "00_progress_bg.png" COMP;
         image: "00_progress_bar.png" COMP;
      }
      parts {
         part { name: "elm.padding.left";
            type: RECT;
            scale: 1;
            description {
               state: "default" 0.0;
               min: 0 0;
               fixed: 1 0;
               rel1 {
                  relative: 0.0  0.0;
                  offset: 0 0;
               }
               rel2 {
                  relative: 0.0  1.0;
                  offset: 0 0;
               }
               visible: 0;
               align: 0.0 0.0;
            }
         }
         part { name: "elm.padding.right";
            type: RECT;
            scale: 1;
            description {
               state: "default" 0.0;
               min: 0 0;
               fixed: 1 0;
               rel1 {
                  relative: 1.0  0.0;
                  offset: 0 0;
               }
               rel2 {
                  relative: 1.0  1.0;
                  offset:   0   0;
               }
               visible: 0;
               align: 1.0 0.0;
            }
         }
         part { name: "elm.background.progressbar";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               rel1 {
                  to_x: "elm.padding.left";
                  relative: 1.0 0.0;
                  offset: 0 0;
               }
               rel2 {
                  to_x: "elm.padding.right";
                  relative: 0.0 1.0;
                  offset: 0 0;
               }
            }
         }
         part { name: "elm.swallow.bar";
            mouse_events: 0;
            scale: 1;
            type: SWALLOW;
            description {
               min: 1 PROGRESSBAR_LIST_PROGRESS_HEIGHT_INC;
               max: 99999 PROGRESSBAR_LIST_PROGRESS_HEIGHT_INC;
               state: "default" 0.0;
               rel1 {
                  to: "elm.background.progressbar";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to: "elm.background.progressbar";
                  relative: 1.0 1.0;
               }
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               align: 0.0 0.5;
               rel1 {
                  offset: 0 0;
                  to_y: "elm.background.progressbar";
               }
               rel2 {
                  offset: 0 -1;
                  relative: 0.0 1.0;
                  to_y: "elm.background.progressbar";
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               rel2.offset: 4 -1;
            }
         }
         part { name: "elm.text";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               fixed: 1 1;
               align: 0.0 0.5;
               rel1.to_x: "elm.swallow.content";
               rel1.relative: 1.0 0.0;
               rel2.to_x: "elm.swallow.content";
               rel2.relative: 1.0 1.0;
               color: PROGRESSBAR_LIST_PROGRESS_STYLE_TEXT_COLOR_INC;
               text {
                  font: "SLP:style=Medium";
                  size: PROGRESSBAR_STATUS_TEXT_FONT_SIZE_INC;
                  min: 0 0;
                  align: 0.0 0.5;
                  text_class: "slp";
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 0;
               text.min: 1 1;
            }
         }
         part { name: "background";
            mouse_events: 0;
            scale: 1;
            clip_to: "elm.background.progressbar";
            description {
               state: "default" 0.0;
               rel1 {
                  to: "elm.swallow.bar";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to: "elm.swallow.bar";
                  relative: 1.0 1.0;
               }
               image {
                  normal: "00_progress_bg.png";
                  border: 17 17 0 0;
               }
            }
         }
         part { name: "elm.text.status";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               visible: 0;
               rel1 {
                  to: "background";
                  relative: 0.5 0.5;
               }
               rel2 {
                  to: "background";
                  relative: 0.5 0.5;
               }
               text {
                  font: "SLP:style=Medium";
                  size: PROGRESSBAR_STATUS_TEXT_FONT_SIZE_INC;
                  min: 0 0;
                  align: 0.5 0.0;
                  text_class: "slp";
               }
               color: PROGRESSBAR_LIST_PROGRESS_STYLE_TEXT_COLOR_INC;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 0;
               text.min: 1 1;
            }
         }
         part { name: "elm.progress.progressbar";
            mouse_events: 0;
            scale: 1;
            clip_to: "elm.background.progressbar";
            description {
               state: "default" 0.0;
               min: 0 0;
               fixed: 1 1;
               rel1 {
                  to: "elm.swallow.bar";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to_y: "elm.swallow.bar";
                  to_x: "elm.cur.progressbar";
                  offset: -1 -1;
               }
               image {
                  normal: "00_progress_bar.png";
                  border: 17 17 0 0;
               }
            }
            description {
               state: "invert" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to_y: "elm.swallow.bar";
                  to_x: "elm.cur.progressbar";
               }
               rel2 {
                  to: "elm.swallow.bar";
                  relative: 1.0 1.0;
               }
            }
            description {
               state: "state_begin" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to: "elm.swallow.bar";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to: "elm.swallow.bar";
                  relative: 0.1 1.0;
               }
            }
            description {
               state: "state_end" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to: "elm.swallow.bar";
                  relative: 0.9 0.0;
               }
               rel2 {
                  to: "elm.swallow.bar";
                  relative: 1.0 1.0;
               }
            }
         }
         part { name: "text-bar";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            clip_to: "progress-rect";
            //effect: SOFT_SHADOW;
            scale: 0;
            description { state: "default" 0.0;
               align: 0.0 0.0;
               fixed: 1 1;
               visible: 0;
               rel1.to: "elm.text.status";
               rel1.offset: -1 -1;
               rel2.to: "elm.text.status";
               text {
                  text_source: "elm.text.status";
                  font: "SLP:style=Medium";
                  size: PROGRESSBAR_STATUS_TEXT_FONT_SIZE_INC;
                  min: 0 0;
                  align: 0.0 0.0;
                  text_class: "slp";
               }
               color: PROGRESSBAR_LIST_PROGRESS_STYLE_STATUS_TEXT_COLOR_INC;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 0;
               text.min: 1 1;
            }
         }
         part { name: "elm.cur.progressbar";
            mouse_events: 0;
            scale: 1;
            dragable {
               confine: "background";
               x: 1 1 1;
               y: 0 0 0;
            }
            description { state: "default" 0.0;
               min: 0 28;
               fixed: 1 1;
               visible: 0;
               rel1 {
                  to: "background";
                  relative: 0 0;
               }
               rel2.to: "background";
           }
         }
         part { name: "progress-rect";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               rel1.to: "elm.progress.progressbar";
               rel2.to: "elm.progress.progressbar";
            }
         }
      }
      programs {
         program { name: "label_show";
            signal: "elm,state,text,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.text";
         }
         program { name: "label_hide";
            signal: "elm,state,text,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.text";
         }
         program { name: "icon_show";
            signal: "elm,state,icon,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.swallow.content";
         }
         program { name: "icon_hide";
            signal: "elm,state,icon,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.swallow.content";
         }
         program { name: "units_show";
            signal: "elm,state,units,visible";
            source: "elm";
            action:  STATE_SET "show" 0.0;
            target: "text-bar";
            target: "elm.text.status";
         }
         program { name: "units_hide";
            signal: "elm,state,units,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "text-bar";
            target: "elm.text.status";
         }
         program { name: "slide_to_end";
            action:  STATE_SET "state_end" 0.0;
            transition: LINEAR 0.5;
            target: "elm.progress.progressbar";
            after: "slide_to_begin";
         }
         program { name: "slide_to_begin";
            signal: "elm,state,slide,begin";
            action: STATE_SET "state_begin" 0.0;
            target: "elm.progress.progressbar";
            transition: LINEAR 0.5;
            after: "slide_to_end";
         }
         program { name: "start_pulse";
            signal: "elm,state,pulse,start";
            source: "elm";
           // after: "slide_to_end";
         }
         program { name: "stop_pulse";
            signal: "elm,state,pulse,stop";
            source: "elm";
            action: ACTION_STOP;
            target: "slide_to_begin";
            target: "slide_to_end";
            target: "start_pulse";
            //after: "state_pulse";
         }
         program { name: "state_pulse";
            signal: "elm,state,pulse";
            source: "elm";
            action: STATE_SET "state_begin" 0.0;
            target: "elm.progress.progressbar";
            after: "units_hide";
         }
         program { name: "state_fraction";
            signal: "elm,state,fraction";
            source: "elm";
            action: ACTION_STOP;
            target: "slide_to_begin";
            target: "slide_to_end";
            target: "start_pulse";
            action: STATE_SET "default" 0.0;
            target: "elm.progress.progressbar";
         }
         program { name: "set_invert_on";
            signal: "elm,state,inverted,on";
            source: "elm";
            action:  STATE_SET "invert" 0.0;
            target: "elm.progress.progressbar";
         }
         program { name: "set_invert_off";
            signal: "elm,state,inverted,off";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.progress.progressbar";
         }
      }
   }

   group { name: "elm/progressbar/horizontal/list_title_progress";
      images {
         image: "00_progress_bg.png" COMP;
         image: "00_progress_bar.png" COMP;
      }
      parts {
         part { name: "base";
            type: RECT;
            scale: 1;
            description {
               state: "default" 0.0;
               visible: 0;
               rel1 { relative: 0.0  0.0; }
               rel2 { relative: 1.0  1.0; }
               color: 0 0 0 0;
            }
         }
         part { name: "elm.padding.left";
            type: RECT;
            scale: 1;
            description {
               state: "default" 0.0;
               min: 0 82;
               visible: 0;
               fixed: 1 0;
               rel1 { relative: 0.0  0.0; to: "base"; }
               rel2 { relative: 0.0  1.0; to: "base"; }
               color: 0 0 0 0;
               align: 0.0 0.0;
            }
         }
         part { name: "elm.padding.right";
            type: RECT;
            scale: 1;
            description {
               state: "default" 0.0;
               min: 0 82;
               visible: 0;
               fixed: 1 0;
               rel1 { relative: 1.0  0.0; to: "base"; }
               rel2 { relative: 1.0  1.0; to: "base"; }
               color: 0 0 0 0;
               align: 1.0 0.0;
            }
         }
         part {
            name: "elm.padding.top";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               align: 0.0 0.0;
               min: 100 1;
               visible: 0;
               fixed: 0 1;
               rel1 { relative: 0.0  0.0; to: "base"; }
               rel2 { relative: 1.0  0.0; to: "base"; }
               color: 0 0 0 0;
            }
         }
         part {
            name: "elm.padding.bottom";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               align: 1.0 1.0;
               min: 100 1;
               visible: 0;
               fixed: 0 1;
               rel1 { relative: 0.0  1.0; to: "base"; }
               rel2 { relative: 1.0  1.0; to: "base"; }
               color: 0 0 0 0;
            }
         }
         part {
            name: "label_rect";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               visible: 1;
               min: 460 56;
               fixed: 0 1;
               rel1 { relative: 1.0 1.0; to_x: "elm.padding.left"; to_y: "elm.padding.top"; }
               rel2 { relative: 0.0 0.0; to_x: "elm.padding.right"; }
               align: 0.0 0.0;
               color: 0 0 0 0;
            }
         }
         part { name: "elm.background.progressbar";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               rel1 {
                  to_x: "elm.padding.left";
                  to_y: "label_rect";
                  relative: 1.0 1.0;
                  offset: 0 0;
               }
               rel2 {
                  to_x: "elm.padding.right";
                  relative: 0.0 1.0;
                  offset: 0 0;
               }
            }
         }
         part { name: "elm.swallow.bar";
            mouse_events: 0;
            scale: 1;
            type: SWALLOW;
            description {
               min: 1 PROGRESSBAR_LIST_PROGRESS_HEIGHT_INC;
               max: 99999 PROGRESSBAR_LIST_PROGRESS_HEIGHT_INC;
               state: "default" 0.0;
               rel1 {
                  to: "elm.background.progressbar";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to: "elm.background.progressbar";
                  relative: 1.0 1.0;
               }
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               align: 0.0 0.5;
               rel1 {
                  offset: 0 0;
                  to_y: "elm.background.progressbar";
               }
               rel2 {
                  offset: 0 -1;
                  relative: 0.0 1.0;
                  to_y: "elm.background.progressbar";
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               rel2.offset: 4 -1;
            }
         }
         part { name: "elm.text";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               visible: 1;
               fixed: 1 1;
               align: 0.0 0.5;
               rel1.to_x: "label_rect";
               rel1.relative: 0.0 0.0;
               rel2.to_x: "label_rect";
               rel2.relative: 1.0 1.0;
               color: PROGRESSBAR_LIST_PROGRESS_STYLE_TEXT_COLOR_INC;
               text {
                  font: "SLP:style=Medium";
                  size: PROGRESSBAR_TITLE_FONT_SIZE_INC;
                  min: 0 0;
                  align: 0.0 0.5;
                  text_class: "slp";
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               text.min: 1 1;
            }
         }
         part { name: "background";
            mouse_events: 0;
            scale: 1;
            clip_to: "elm.background.progressbar";
            description {
               state: "default" 0.0;
               rel1 {
                  to: "elm.swallow.bar";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to: "elm.swallow.bar";
                  relative: 1.0 1.0;
               }
               image {
                  normal: "00_progress_bg.png";
                  border: 17 17 0 0;
               }
            }
         }
         part { name: "elm.text.status";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               visible: 0;
               rel1 {
                  to: "background";
                  relative: 0.5 0.5;
               }
               rel2 {
                  to: "background";
                  relative: 0.5 0.5;
               }
               text {
                  font: "SLP:style=Medium";
                  size: PROGRESSBAR_TITLE_FONT_SIZE_INC;
                  min: 0 0;
                  align: 0.5 0.0;
                  text_class: "slp";
               }
               color: PROGRESSBAR_LIST_PROGRESS_STYLE_TEXT_COLOR_INC;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 0;
               text.min: 1 1;
            }
         }
         part { name: "elm.progress.progressbar";
            mouse_events: 0;
            scale: 1;
            clip_to: "elm.background.progressbar";
            description {
               state: "default" 0.0;
               min: 0 0;
               fixed: 1 1;
               rel1 {
                  to: "elm.swallow.bar";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to_y: "elm.swallow.bar";
                  to_x: "elm.cur.progressbar";
                  offset: -1 -1;
               }
               image {
                  normal: "00_progress_bar.png";
                  border: 17 17 0 0;
               }
            }
            description {
               state: "invert" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to_y: "elm.swallow.bar";
                  to_x: "elm.cur.progressbar";
               }
               rel2 {
                  to: "elm.swallow.bar";
                  relative: 1.0 1.0;
               }
            }
            description {
               state: "state_begin" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to: "elm.swallow.bar";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to: "elm.swallow.bar";
                  relative: 0.1 1.0;
               }
            }
            description {
               state: "state_end" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to: "elm.swallow.bar";
                  relative: 0.9 0.0;
               }
               rel2 {
                  to: "elm.swallow.bar";
                  relative: 1.0 1.0;
               }
            }
         }
         part { name: "text-bar";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            clip_to: "progress-rect";
            //effect: SOFT_SHADOW;
            scale: 0;
            description { state: "default" 0.0;
               align: 0.0 0.0;
               fixed: 1 1;
               visible: 0;
               rel1.to: "elm.text.status";
               rel1.offset: -1 -1;
               rel2.to: "elm.text.status";
               text {
                  text_source: "elm.text.status";
                  font: "SLP:style=Medium";
                  size: PROGRESSBAR_STATUS_TEXT_FONT_SIZE_INC;
                  min: 0 0;
                  align: 0.0 0.0;
                  text_class: "slp";
               }
               color: PROGRESSBAR_LIST_PROGRESS_STYLE_STATUS_TEXT_COLOR_INC;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 0;
               text.min: 1 1;
            }
         }
         part { name: "elm.cur.progressbar";
            mouse_events: 0;
            scale: 1;
            dragable {
               confine: "background";
               x: 1 1 1;
               y: 0 0 0;
            }
            description { state: "default" 0.0;
               min: 0 28;
               fixed: 1 1;
               visible: 0;
               rel1 {
                  to: "background";
                  relative: 0 0;
               }
               rel2.to: "background";
            }
         }
         part { name: "progress-rect";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               rel1.to: "elm.progress.progressbar";
               rel2.to: "elm.progress.progressbar";
            }
         }
      }
      programs {
         program { name: "label_show";
            signal: "elm,state,text,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.text";
         }
         program { name: "label_hide";
            signal: "elm,state,text,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.text";
         }
         program { name: "icon_show";
            signal: "elm,state,icon,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.swallow.content";
         }
         program { name: "icon_hide";
            signal: "elm,state,icon,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.swallow.content";
         }
         program { name: "units_show";
            signal: "elm,state,units,visible";
            source: "elm";
            action:  STATE_SET "show" 0.0;
            target: "text-bar";
            target: "elm.text.status";
         }
         program { name: "units_hide";
            signal: "elm,state,units,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "text-bar";
            target: "elm.text.status";
         }
         program { name: "slide_to_end";
            action:  STATE_SET "state_end" 0.0;
            transition: LINEAR 0.5;
            target: "elm.progress.progressbar";
            after: "slide_to_begin";
         }
         program { name: "slide_to_begin";
            signal: "elm,state,slide,begin";
            action: STATE_SET "state_begin" 0.0;
            target: "elm.progress.progressbar";
            transition: LINEAR 0.5;
            after: "slide_to_end";
         }
         program { name: "start_pulse";
            signal: "elm,state,pulse,start";
            source: "elm";
           // after: "slide_to_end";
         }
         program { name: "stop_pulse";
            signal: "elm,state,pulse,stop";
            source: "elm";
            action: ACTION_STOP;
            target: "slide_to_begin";
            target: "slide_to_end";
            target: "start_pulse";
            //after: "state_pulse";
         }
         program { name: "state_pulse";
            signal: "elm,state,pulse";
            source: "elm";
            action: STATE_SET "state_begin" 0.0;
            target: "elm.progress.progressbar";
            after: "units_hide";
         }
         program { name: "state_fraction";
            signal: "elm,state,fraction";
            source: "elm";
            action: ACTION_STOP;
            target: "slide_to_begin";
            target: "slide_to_end";
            target: "start_pulse";
            action: STATE_SET "default" 0.0;
            target: "elm.progress.progressbar";
         }
         program { name: "set_invert_on";
            signal: "elm,state,inverted,on";
            source: "elm";
            action:  STATE_SET "invert" 0.0;
            target: "elm.progress.progressbar";
         }
         program { name: "set_invert_off";
            signal: "elm,state,inverted,off";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.progress.progressbar";
         }
      }
   }

   group { name: "elm/progressbar/horizontal/list_title_progress_text";
      images {
         image: "00_winset_list_progress_bg.png" COMP;
         image: "00_winset_list_progress_bar.png" COMP;
      }
      parts {
         part { name: "base";
            type: RECT;
            scale: 1;
            description {
               state: "default" 0.0;
               visible: 0;
               rel1 { relative: 0.0  0.0; }
               rel2 { relative: 1.0  1.0; }
               color: 0 0 0 0;
            }
         }
         part { name: "elm.padding.left";
            type: RECT;
            scale: 1;
            description {
               state: "default" 0.0;
               min: 0 82;
               visible: 0;
               fixed: 1 0;
               rel1 { relative: 0.0  0.0; to: "base"; }
               rel2 { relative: 0.0  1.0; to: "base"; }
               color: 0 0 0 0;
               align: 0.0 0.0;
            }
         }
         part { name: "elm.padding.right";
            type: RECT;
            scale: 1;
            description {
               state: "default" 0.0;
               min: 0 82;
               visible: 0;
               fixed: 1 0;
               rel1 { relative: 1.0  0.0; to: "base"; }
               rel2 { relative: 1.0  1.0; to: "base"; }
               color: 0 0 0 0;
               align: 1.0 0.0;
            }
         }
         part {
            name: "elm.padding.top";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               align: 0.0 0.0;
               min: 100 1;
               visible: 0;
               fixed: 0 1;
               rel1 { relative: 0.0  0.0; to: "base"; }
               rel2 { relative: 1.0  0.0; to: "base"; }
               color: 0 0 0 0;
            }
         }
         part {
            name: "elm.padding.bottom";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               align: 1.0 1.0;
               min: 100 1;
               visible: 0;
               fixed: 0 1;
               rel1 { relative: 0.0  1.0; to: "base"; }
               rel2 { relative: 1.0  1.0; to: "base"; }
               color: 0 0 0 0;
            }
         }
         part {
            name: "label_rect";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               visible: 1;
               min: 10 40;
               fixed: 0 1;
               rel1 { relative: 1.0 1.0; to_x: "elm.padding.left"; to_y: "elm.padding.top"; }
               rel2 { relative: 0.0 0.0; to_x: "elm.padding.right"; to_y: "base"; }
               align: 0.0 0.0;
               color: 0 0 0 0;
            }
         }
         part { name: "elm.background.progressbar";
            mouse_events: 0;
            scale: 1;
            type: RECT;
            description {
               state: "default" 0.0;
               align: 0.0 0.0;
               min: 10 10;
               fixed: 0 1;
               rel1 { relative: 1.0 1.0; to_x: "elm.padding.left"; to_y: "label_rect"; }
               rel2 { relative: 0.0 1.0; to_x: "elm.padding.right"; to_y: "label_rect"; }
            }
         }
         part { name: "elm.swallow.bar";
            mouse_events: 0;
            scale: 1;
            type: SWALLOW;
            description {
               min: 48 10;
               state: "default" 0.0;
               rel1 { relative: 0.0 0.0; to: "elm.background.progressbar"; }
               rel2 { relative: 1.0 1.0; to: "elm.background.progressbar"; }
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               min: 30 30;
               max: 30 30;
               fixed: 0 1;
               align: 0.0 0.5;
               rel1 { relative: 430/460 6/40; to: "label_rect"; }
               rel2 { relative: 1.0 36/40; to: "label_rect"; offset: 1 0;}
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
            }
         }
         part { name: "elm.text";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               visible: 1;
               fixed: 1 1;
               align: 0.0 0.5;
               rel1 { relative: 0.0 0.0; to: "label_rect"; }
               rel2 { relative: 1.0 1.0; to: "label_rect"; }
               color: PROGRESSBAR_LIST_PROGRESS_STYLE_TEXT_COLOR_INC;
               text {
                  font: "SLP:style=Medium";
                  size: PROGRESSBAR_TITLE_FONT_SIZE_INC;
                  min: 0 0;
                  align: 0.0 0.5;
                  text_class: "slp";
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               text.min: 1 1;
            }
         }
         part { name: "background";
            mouse_events: 0;
            scale: 1;
            clip_to: "elm.background.progressbar";
            description {
               state: "default" 0.0;
               rel1 { relative: 0.0 0.0; to: "elm.swallow.bar"; }
               rel2 { relative: 1.0 1.0; to: "elm.swallow.bar"; }
               image {
                  normal: "00_winset_list_progress_bg.png";
                  border: 0 0 1 1;
               }
            }
         }
         part { name: "elm.progress.progressbar";
            mouse_events: 0;
            scale: 1;
            clip_to: "elm.background.progressbar";
            description {
               state: "default" 0.0;
               min: 0 0;
               fixed: 1 1;
               rel1 { relative: 0.0 0.0; to: "elm.swallow.bar"; }
               rel2 { relative: 1.0 1.0; to_x: "elm.cur.progressbar"; to_y: "elm.swallow.bar"; offset: -1 -1; }
               image {
                  normal: "00_winset_list_progress_bar.png";
                  border: 0 0 1 1;
               }
            }
            description {
               state: "invert" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to_y: "elm.swallow.bar";
                  to_x: "elm.cur.progressbar";
               }
               rel2 {
                  to: "elm.swallow.bar";
                  relative: 1.0 1.0;
               }
            }
            description {
               state: "state_begin" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to: "elm.swallow.bar";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to: "elm.swallow.bar";
                  relative: 0.1 1.0;
               }
            }
            description {
               state: "state_end" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to: "elm.swallow.bar";
                  relative: 0.9 0.0;
               }
               rel2 {
                  to: "elm.swallow.bar";
                  relative: 1.0 1.0;
               }
            }
         }
         part { name: "text-bar";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            clip_to: "progress-rect";
            //effect: SOFT_SHADOW;
            scale: 0;
            description { state: "default" 0.0;
               align: 0.0 0.0;
               fixed: 1 1;
               visible: 0;
               rel1.to: "elm.text.status";
               rel1.offset: -1 -1;
               rel2.to: "elm.text.status";
               text {
                  text_source: "elm.text.status";
                  font: "SLP:style=Medium";
                  size: PROGRESSBAR_STATUS_TEXT_FONT_SIZE_INC;
                  min: 0 0;
                  align: 0.0 0.0;
                  text_class: "slp";
               }
               color: PROGRESSBAR_LIST_PROGRESS_STYLE_STATUS_TEXT_COLOR_INC;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 0;
               text.min: 1 1;
            }
         }
         part { name: "elm.cur.progressbar";
            mouse_events: 0;
            scale: 1;
            dragable {
               confine: "background";
               x: 1 1 1;
               y: 0 0 0;
            }
            description { state: "default" 0.0;
               min: 0 28;
               fixed: 1 1;
               visible: 0;
               rel1 {
                  to: "background";
                  relative: 0 0;
               }
               rel2.to: "background";
           }
         }
         part { name: "progress-rect";
            mouse_events: 0;
            scale: 1;
            type: RECT;
            description {
               state: "default" 0.0;
               rel1.to: "elm.progress.progressbar";
               rel2.to: "elm.progress.progressbar";
            }
         }
         part { name: "elm.text.status";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               visible: 1;
               min: 80 30;
               align: 0.0 1.0;
               rel1 {
                  to_y: "elm.padding.bottom";
                  relative: 1.0 1.0;
                  to_x:"elm.padding.left";
               }
               rel2 {
                  to_y: "elm.padding.bottom";
                  relative: 1.0 1.0;
                  to_x:"elm.padding.left";
               }
               text {
                  font: "SLP:style=Medium";
                  size: PROGRESSBAR_TITLE_FONT_SIZE_INC;
                  min: 1 1;
                  align: 0.0 0.0;
                  text_class: "slp";
               }
               color:PROGRESSBAR_LIST_TITLE_PROGRESS_STYLE_STATUS_TEXT_COLOR_INC;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               text.min: 1 1;
            }
         }
      }
      programs {
         program { name: "label_show";
            signal: "elm,state,text,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.text";
         }
         program { name: "label_hide";
            signal: "elm,state,text,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.text";
         }
         program { name: "icon_show";
            signal: "elm,state,icon,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.swallow.content";
         }
         program { name: "icon_hide";
            signal: "elm,state,icon,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.swallow.content";
         }
         program { name: "units_show";
            signal: "elm,state,units,visible";
            source: "elm";
            action:  STATE_SET "show" 0.0;
            target: "text-bar";
            target: "elm.text.status";
         }
         program { name: "units_hide";
            signal: "elm,state,units,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "text-bar";
            target: "elm.text.status";
         }
         program { name: "slide_to_end";
            action:  STATE_SET "state_end" 0.0;
            transition: LINEAR 0.5;
            target: "elm.progress.progressbar";
            after: "slide_to_begin";
         }
         program { name: "slide_to_begin";
            signal: "elm,state,slide,begin";
            action: STATE_SET "state_begin" 0.0;
            target: "elm.progress.progressbar";
            transition: LINEAR 0.5;
            after: "slide_to_end";
         }
         program { name: "start_pulse";
            signal: "elm,state,pulse,start";
            source: "elm";
           // after: "slide_to_end";
         }
         program { name: "stop_pulse";
            signal: "elm,state,pulse,stop";
            source: "elm";
            action: ACTION_STOP;
            target: "slide_to_begin";
            target: "slide_to_end";
            target: "start_pulse";
            //after: "state_pulse";
         }
         program { name: "state_pulse";
            signal: "elm,state,pulse";
            source: "elm";
            action: STATE_SET "state_begin" 0.0;
            target: "elm.progress.progressbar";
            after: "units_hide";
         }
         program { name: "state_fraction";
            signal: "elm,state,fraction";
            source: "elm";
            action: ACTION_STOP;
            target: "slide_to_begin";
            target: "slide_to_end";
            target: "start_pulse";
            action: STATE_SET "default" 0.0;
            target: "elm.progress.progressbar";
         }
         program { name: "set_invert_on";
            signal: "elm,state,inverted,on";
            source: "elm";
            action:  STATE_SET "invert" 0.0;
            target: "elm.progress.progressbar";
         }
         program { name: "set_invert_off";
            signal: "elm,state,inverted,off";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.progress.progressbar";
         }
      }
   }
   group { name: "elm/progressbar/horizontal/toolbar_progress";
      images {
         image: "00_toolbar_progress_bg.png" COMP;
         image: "00_toolbar_progress_bar.png" COMP;
      }
      parts {
         part { name: "elm.padding.left";
            type: RECT;
            scale: 1;
            description {
               state: "default" 0.0;
               min: 0 0;
               fixed: 1 0;
               rel1 {
                  relative: 0.0  0.0;
                  offset: 0 0;
                  }
               rel2 {
                  relative: 0.0  1.0;
                  offset: 0 0;
                  }
               color: 0 0 0 0;
               align: 0.0 0.0;
            }
         }
         part { name: "elm.padding.right";
            type: RECT;
            scale: 1;
            description {
               state: "default" 0.0;
               min: 0 0;
               fixed: 1 0;
               rel1 {
                  relative: 1.0  0.0;
                  offset: 0 0;
               }
               rel2 {
                  relative: 1.0  1.0;
                  offset: 0 0;
               }
               color: 0 0 0 0;
               align: 1.0 0.0;
            }
         }
        part { name: "elm.background.progressbar";
            mouse_events: 0;
            scale: 1;
            type: RECT;
            description {
               state: "default" 0.0;
               rel1 {
                  to_x: "elm.padding.left";
                  relative: 1.0 0.0;
                  offset: 0 0;
               }
               rel2 {
                  to_x: "elm.padding.right";
                  relative: 0.0 1.0;
                  offset: 0 0;
               }
            }
         }
         part { name: "elm.swallow.bar";
            mouse_events: 0;
            scale: 1;
            type: SWALLOW;
            description {
               min: 48 14;
               max: 99999 14;
               state: "default" 0.0;
               rel1 {
                  to: "elm.background.progressbar";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to: "elm.background.progressbar";
                  relative: 1.0 1.0;
               }
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               align: 0.0 0.5;
               rel1 {
                  offset: 0 0;
                  to_y: "elm.background.progressbar";
               }
               rel2 {
                  offset: 0 -1;
                  relative: 0.0 1.0;
                  to_y: "elm.background.progressbar";
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               rel2.offset: 4 -1;
            }
         }
         part { name: "elm.text";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               fixed: 1 1;
               align: 0.0 0.5;
               rel1.to_x: "elm.swallow.content";
               rel1.relative: 1.0 0.0;
               rel1.offset: -1 4;
               rel2.to_x: "elm.swallow.content";
               rel2.relative: 1.0 1.0;
               rel2.offset: -1 -5;
               color: PROGRESSBAR_LIST_TITLE_PROGRESS_STYLE_STATUS_TEXT_COLOR_INC;
               text {
                  font: "SLP:style=Roman";
                  size: 10;
                  min: 0 0;
                  align: 0.0 0.5;
                  text_class: "slp";
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 0;
               text.min: 1 1;
               rel1.offset: 0 4;
               rel2.offset: 0 -5;
            }
         }
         part { name: "background";
            mouse_events: 0;
            scale: 1;
            clip_to: "elm.background.progressbar";
            description {
               state: "default" 0.0;
               rel1 {
                  to: "elm.swallow.bar";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to: "elm.swallow.bar";
                  relative: 1.0 1.0;
                  offset: -1 -1;
               }
               image {
                  normal: "00_toolbar_progress_bg.png";
                  border: 6 6 0 0;
               }
            }
         }
         part { name: "elm.text.status";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               visible: 0;
               rel1 {
                  to: "background";
                  relative: 0.5 0.5;
               }
               rel2 {
                  to: "background";
                  relative: 0.5 0.5;
               }
               text {
                  font: "SLP:style=Roman";
                  size: 10;
                  min: 0 0;
                  align: 0.5 0.0;
                  text_class: "slp";
               }
               color: PROGRESSBAR_LIST_PROGRESS_STYLE_TEXT_COLOR_INC;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 0;
               text.min: 1 1;
            }
         }
         part { name: "elm.progress.progressbar";
            mouse_events: 0;
            scale: 1;
            clip_to: "elm.background.progressbar";
            description {
               state: "default" 0.0;
               min: 0 0;
               fixed: 1 1;
               rel1 {
                  to: "elm.swallow.bar";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to_y: "elm.swallow.bar";
                  to_x: "elm.cur.progressbar";
                  offset: -1 -1;
               }
               image {
                  normal: "00_toolbar_progress_bar.png";
                  border: 6 6 0 0;
               }
            }
            description {
               state: "invert" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to_y: "elm.swallow.bar";
                  to_x: "elm.cur.progressbar";
               }
               rel2 {
                  to: "elm.swallow.bar";
                  relative: 1.0 1.0;
               }
            }
            description {
               state: "state_begin" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to: "elm.swallow.bar";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to: "elm.swallow.bar";
                  relative: 0.1 1.0;
               }
            }
            description {
               state: "state_end" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to: "elm.swallow.bar";
                  relative: 0.9 0.0;
               }
               rel2 {
                  to: "elm.swallow.bar";
                  relative: 1.0 1.0;
               }
            }
         }
         part { name: "text-bar";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            clip_to: "progress-rect";
            //effect: SOFT_SHADOW;
            scale: 0;
            description { state: "default" 0.0;
               align: 0.0 0.0;
               fixed: 1 1;
               visible: 0;
               rel1.to: "elm.text.status";
               rel1.offset: -1 -1;
               rel2.to: "elm.text.status";
               text {
                  text_source: "elm.text.status";
                  font: "SLP:style=Roman";
                  size: 10;
                  min: 0 0;
                  align: 0.0 0.0;
                  text_class: "slp";
               }
               color: PROGRESSBAR_LIST_PROGRESS_STYLE_STATUS_TEXT_COLOR_INC;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 0;
               text.min: 1 1;
            }
         }
         part { name: "elm.cur.progressbar";
            mouse_events: 0;
            scale: 1;
            dragable {
               confine: "background";
               x: 1 1 1;
               y: 0 0 0;
            }
            description { state: "default" 0.0;
               min: 0 28;
               fixed: 1 1;
               visible: 0;
               rel1 {
                  to: "background";
                  relative: 0 0;
               }
               rel2.to: "background";
            }
         }
         part { name: "progress-rect";
            mouse_events: 0;
            scale: 1;
            type: RECT;
            description {
               state: "default" 0.0;
               rel1.to: "elm.progress.progressbar";
               rel2.to: "elm.progress.progressbar";
            }
         }
      }
      programs {
         program { name: "label_show";
            signal: "elm,state,text,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.text";
         }
         program { name: "label_hide";
            signal: "elm,state,text,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.text";
         }
         program { name: "icon_show";
            signal: "elm,state,icon,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.swallow.content";
         }
         program { name: "icon_hide";
            signal: "elm,state,icon,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.swallow.content";
         }
         program { name: "units_show";
            signal: "elm,state,units,visible";
            source: "elm";
            action:  STATE_SET "show" 0.0;
            target: "text-bar";
            target: "elm.text.status";
         }
         program { name: "units_hide";
            signal: "elm,state,units,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "text-bar";
            target: "elm.text.status";
         }
         program { name: "slide_to_end";
            action:  STATE_SET "state_end" 0.0;
            transition: LINEAR 0.5;
            target: "elm.progress.progressbar";
            after: "slide_to_begin";
         }
         program { name: "slide_to_begin";
            signal: "elm,state,slide,begin";
            action: STATE_SET "state_begin" 0.0;
            target: "elm.progress.progressbar";
            transition: LINEAR 0.5;
            after: "slide_to_end";
         }
         program { name: "start_pulse";
            signal: "elm,state,pulse,start";
            source: "elm";
            after: "slide_to_end";
         }
         program { name: "stop_pulse";
            signal: "elm,state,pulse,stop";
            source: "elm";
            action: ACTION_STOP;
            target: "slide_to_begin";
            target: "slide_to_end";
            target: "start_pulse";
            after: "state_pulse";
         }
         program { name: "state_pulse";
            signal: "elm,state,pulse";
            source: "elm";
            action: STATE_SET "state_begin" 0.0;
            target: "elm.progress.progressbar";
            after: "units_hide";
         }
         program { name: "state_fraction";
            signal: "elm,state,fraction";
            source: "elm";
            action: ACTION_STOP;
            target: "slide_to_begin";
            target: "slide_to_end";
            target: "start_pulse";
            action: STATE_SET "default" 0.0;
            target: "elm.progress.progressbar";
         }
         program { name: "set_invert_on";
            signal: "elm,state,inverted,on";
            source: "elm";
            action:  STATE_SET "invert" 0.0;
            target: "elm.progress.progressbar";
         }
         program { name: "set_invert_off";
            signal: "elm,state,inverted,off";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.progress.progressbar";
         }
      }
   }

   group { name: "elm/progressbar/horizontal/pending_list";
      images {
         image: "00_progress_pending_01.png" COMP;
         image: "00_progress_pending_02.png" COMP;
      }
      parts {
         part { name: "elm.background.progressbar";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 0 0;
               }
               rel2 {
                  relative: 1.0 1.0;
               }
            }
         }
         part { name: "elm.swallow.bar";
            mouse_events: 0;
            scale: 1;
            type: SWALLOW;
            description {
               min: 1 PROGRESSBAR_LIST_PENDING_HEIGHT_INC;
               max: 99999 PROGRESSBAR_LIST_PENDING_HEIGHT_INC;
               state: "default" 0.0;
               rel1 {
                  to: "elm.background.progressbar";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to: "elm.background.progressbar";
                  relative: 1.0 1.0;
               }
            }
         }
         part { name: "elm.progress.progressbar";
            mouse_events: 0;
            scale: 1;
            clip_to: "elm.background.progressbar";
            description {
               state: "default" 0.0;
               min: 0 0;
               fixed: 1 1;
               rel1 {
                  to: "elm.swallow.bar";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to: "elm.swallow.bar";
                  relative: 1.0 1.0;
                  offset: -1 -1;
               }
               image {
                  normal: "00_progress_pending_01.png";
                  border: 0 0 0 0;
               }
            }
            description {
               state: "state_begin" 0.0;
               inherit: "default" 0.0;
            }
            description {
               state: "state_end" 0.0;
               inherit: "default" 0.0;
               image {
                  normal: "00_progress_pending_02.png";
                  border: 0 0 0 0;
               }
            }
         }
      }
      programs {
         program { name: "slide_to_end";
            action:  STATE_SET "state_end" 0.0;
            in: 0.3 0.0;
            target: "elm.progress.progressbar";
            after: "slide_to_begin";
         }
         program { name: "slide_to_begin";
            signal: "elm,state,slide,begin";
            action: STATE_SET "state_begin" 0.0;
            target: "elm.progress.progressbar";
            in: 0.3 0.0;
            after: "slide_to_end";
         }
         program { name: "start_pulse";
            signal: "elm,state,pulse,start";
            source: "elm";
            after: "slide_to_end";
         }
         program { name: "stop_pulse";
            signal: "elm,state,pulse,stop";
            source: "elm";
            action: ACTION_STOP;
            target: "slide_to_begin";
            target: "slide_to_end";
            target: "start_pulse";
            after: "init_pulse";
         }
         program { name: "init_pulse";
            action: STATE_SET "default" 0.0;
            target: "elm.progress.progressbar";
         }
      }
   }

   group { name: "elm/progressbar/horizontal/UIProgressViewStyleDefault";
      images {
         image: "progress_slider_bg01.9.png" COMP;
         image: "progress_slider_bar01.9.png" COMP;
      }
      parts {
         part { name: "elm.padding.left";
            type: RECT;
            scale: 1;
            description {
               state: "default" 0.0;
               //min: 25 0;
               min: 0 0;
               fixed: 1 0;
               rel1 {
                  relative: 0.0  0.0;
                  offset: 0 0;
               }
               rel2 {
                  relative: 0.0  1.0;
                  offset: 0 0;
               }
               color: 0 0 0 0;
               align: 0.0 0.0;
            }
         }
         part { name: "elm.padding.right";
            type: RECT;
            scale: 1;
            description {
               state: "default" 0.0;
               //min: 25 0;
               min: 0 0;
               fixed: 1 0;
               rel1 {
                  relative: 1.0  0.0;
                   offset: 0 0;
               }
               rel2 {
                  relative: 1.0  1.0;
                  offset: 0 0;
               }
               color: 0 0 0 0;
               align: 1.0 0.0;
            }
         }
         part { name: "elm.background.progressbar";
            mouse_events: 0;
            scale: 1;
            type: RECT;
            description {
               state: "default" 0.0;
               rel1 {
                  to_x: "elm.padding.left";
                  relative: 1.0 0.0;
                  offset: 0 0;
               }
               rel2 {
                  to_x: "elm.padding.right";
                  relative: 0.0 1.0;
                  offset: 0 0;
               }
            }
         }
         part { name: "elm.swallow.bar";
            mouse_events: 0;
            scale: 1;
            type: SWALLOW;
            description {
               min: 48 14;
               max: 99999 14;
               state: "default" 0.0;
               rel1 {
                  to: "elm.background.progressbar";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to: "elm.background.progressbar";
                  relative: 1.0 1.0;
               }
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               align: 0.0 0.5;
               rel1 {
                  offset: 0 0;
                  to_y: "elm.background.progressbar";
               }
               rel2 {
                  offset: 0 -1;
                  relative: 0.0 1.0;
                  to_y: "elm.background.progressbar";
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               rel2.offset: 4 -1;
            }
         }
         part { name: "elm.text";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               fixed: 1 1;
               align: 0.0 0.5;
               rel1.to_x: "elm.swallow.content";
               rel1.relative: 1.0 0.0;
               rel1.offset: -1 4;
               rel2.to_x: "elm.swallow.content";
               rel2.relative: 1.0 1.0;
               rel2.offset: -1 -5;
               color: PROGRESSBAR_LIST_PROGRESS_STYLE_TEXT_COLOR_INC;
               text {
                  font: "SLP:style=Roman";
                  size: 10;
                  min: 0 0;
                  align: 0.0 0.5;
                  text_class: "slp";
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 0;
               text.min: 1 1;
               rel1.offset: 0 4;
               rel2.offset: 0 -5;
            }
         }
         part { name: "background";
            mouse_events: 0;
            scale: 1;
            clip_to: "elm.background.progressbar";
            description {
               state: "default" 0.0;
               rel1 {
                  to: "elm.swallow.bar";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to: "elm.swallow.bar";
                  relative: 1.0 1.0;
                  offset: -1 -1;
               }
               image {
                  normal: "progress_slider_bg01.9.png";
                  border: 6 6 0 0;
               }
            }
         }
         part { name: "elm.text.status";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               visible: 0;
               rel1 {
                  to: "background";
                  relative: 0.5 0.5;
               }
               rel2 {
                  to: "background";
                  relative: 0.5 0.5;
               }
               text {
                  font: "SLP:style=Roman";
                  size: 10;
                  min: 0 0;
                  align: 0.5 0.0;
                  text_class: "slp";
               }
               color: PROGRESSBAR_LIST_PROGRESS_STYLE_TEXT_COLOR_INC;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 0;
               text.min: 1 1;
            }
         }
         part { name: "elm.progress.progressbar";
            mouse_events: 0;
            scale: 1;
            clip_to: "elm.background.progressbar";
            description {
               state: "default" 0.0;
               min: 0 0;
               fixed: 1 1;
               rel1 {
                  to: "elm.swallow.bar";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to_y: "elm.swallow.bar";
                  to_x: "elm.cur.progressbar";
                  offset: -1 -1;
               }
               image {
                  normal: "progress_slider_bar01.9.png";
                  border: 6 6 0 0;
               }
            }
            description {
               state: "invert" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to_y: "elm.swallow.bar";
                  to_x: "elm.cur.progressbar";
               }
               rel2 {
                  to: "elm.swallow.bar";
                  relative: 1.0 1.0;
               }
            }
            description {
               state: "state_begin" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to: "elm.swallow.bar";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to: "elm.swallow.bar";
                  relative: 0.1 1.0;
               }
            }
            description {
               state: "state_end" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to: "elm.swallow.bar";
                  relative: 0.9 0.0;
               }
               rel2 {
                  to: "elm.swallow.bar";
                  relative: 1.0 1.0;
               }
            }
         }
         part { name: "text-bar";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            clip_to: "progress-rect";
            //effect: SOFT_SHADOW;
            scale: 0;
            description { state: "default" 0.0;
               align: 0.0 0.0;
               fixed: 1 1;
               visible: 0;
               rel1.to: "elm.text.status";
               rel1.offset: -1 -1;
               rel2.to: "elm.text.status";
               text {
                  text_source: "elm.text.status";
                  font: "SLP:style=Roman";
                  size: 10;
                  min: 0 0;
                  align: 0.0 0.0;
                  text_class: "slp";
               }
               color: PROGRESSBAR_LIST_PROGRESS_STYLE_STATUS_TEXT_COLOR_INC;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 0;
               text.min: 1 1;
            }
         }
         part { name: "elm.cur.progressbar";
            mouse_events: 0;
            scale: 1;
            dragable {
               confine: "background";
               x: 1 1 1;
               y: 0 0 0;
            }
            description { state: "default" 0.0;
               min: 0 28;
               fixed: 1 1;
               visible: 0;
               rel1 {
                  to: "background";
                  relative: 0 0;
               }
               rel2.to: "background";
           }
         }
         part { name: "progress-rect";
            mouse_events: 0;
            scale: 1;
            type: RECT;
            description {
               state: "default" 0.0;
               rel1.to: "elm.progress.progressbar";
               rel2.to: "elm.progress.progressbar";
            }
         }
      }
      programs {
         program { name: "label_show";
            signal: "elm,state,text,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.text";
         }
         program { name: "label_hide";
            signal: "elm,state,text,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.text";
         }
         program { name: "icon_show";
            signal: "elm,state,icon,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.swallow.content";
         }
         program { name: "icon_hide";
            signal: "elm,state,icon,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.swallow.content";
         }
         program { name: "units_show";
            signal: "elm,state,units,visible";
            source: "elm";
            action:  STATE_SET "show" 0.0;
            target: "text-bar";
            target: "elm.text.status";
         }
         program { name: "units_hide";
            signal: "elm,state,units,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "text-bar";
            target: "elm.text.status";
         }
         program { name: "slide_to_end";
            action:  STATE_SET "state_end" 0.0;
            transition: LINEAR 0.5;
            target: "elm.progress.progressbar";
            after: "slide_to_begin";
         }
         program { name: "slide_to_begin";
            signal: "elm,state,slide,begin";
            action: STATE_SET "state_begin" 0.0;
            target: "elm.progress.progressbar";
            transition: LINEAR 0.5;
            after: "slide_to_end";
         }
         program { name: "start_pulse";
            signal: "elm,state,pulse,start";
            source: "elm";
            after: "slide_to_end";
         }
         program { name: "stop_pulse";
            signal: "elm,state,pulse,stop";
            source: "elm";
            action: ACTION_STOP;
            target: "slide_to_begin";
            target: "slide_to_end";
            target: "start_pulse";
            after: "state_pulse";
         }
         program { name: "state_pulse";
            signal: "elm,state,pulse";
            source: "elm";
            action: STATE_SET "state_begin" 0.0;
            target: "elm.progress.progressbar";
            after: "units_hide";
         }
         program { name: "state_fraction";
            signal: "elm,state,fraction";
            source: "elm";
            action: ACTION_STOP;
            target: "slide_to_begin";
            target: "slide_to_end";
            target: "start_pulse";
            action: STATE_SET "default" 0.0;
            target: "elm.progress.progressbar";
         }
         program { name: "set_invert_on";
            signal: "elm,state,inverted,on";
            source: "elm";
            action:  STATE_SET "invert" 0.0;
            target: "elm.progress.progressbar";
         }
         program { name: "set_invert_off";
            signal: "elm,state,inverted,off";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.progress.progressbar";
         }
      }
   }

   group { name: "elm/progressbar/horizontal/UIProgressViewStyleBar";
      images {
         image: "progress_slider_bg02.9.png" COMP;
         image: "progress_slider_bar02.9.png" COMP;
      }
      parts {
         part { name: "elm.padding.left";
            type: RECT;
            scale: 1;
            description {
               state: "default" 0.0;
               //min: 25 0;
               min: 0 0;
               fixed: 1 0;
               rel1 {
                  relative: 0.0  0.0;
                  offset: 0 0;
               }
               rel2 {
                  relative: 0.0  1.0;
                  offset: 0 0;
               }
               color: 0 0 0 0;
               align: 0.0 0.0;
            }
         }
         part { name: "elm.padding.right";
            type: RECT;
            scale: 1;
            description {
               state: "default" 0.0;
               //min: 25 0;
               min: 0 0;
               fixed: 1 0;
               rel1 {
                  relative: 1.0  0.0;
                  offset: 0 0;
               }
               rel2 {
                  relative: 1.0  1.0;
                  offset: 0 0;
               }
               color: 0 0 0 0;
               align: 1.0 0.0;
            }
         }
         part { name: "elm.background.progressbar";
            mouse_events: 0;
            scale: 1;
            type: RECT;
            description {
               state: "default" 0.0;
               rel1 {
                  to_x: "elm.padding.left";
                  relative: 1.0 0.0;
                  offset: 0 0;
               }
               rel2 {
                  to_x: "elm.padding.right";
                  relative: 0.0 1.0;
                  offset: 0 0;
               }
            }
         }
         part { name: "elm.swallow.bar";
            mouse_events: 0;
            scale: 1;
            type: SWALLOW;
            description {
               min: 48 14;
               max: 99999 14;
               state: "default" 0.0;
               rel1 {
                  to: "elm.background.progressbar";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to: "elm.background.progressbar";
                  relative: 1.0 1.0;
               }
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               align: 0.0 0.5;
               rel1 {
                  offset: 0 0;
                  to_y: "elm.background.progressbar";
               }
               rel2 {
                  offset: 0 -1;
                  relative: 0.0 1.0;
                  to_y: "elm.background.progressbar";
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               rel2.offset: 4 -1;
            }
         }
         part { name: "elm.text";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               fixed: 1 1;
               align: 0.0 0.5;
               rel1.to_x: "elm.swallow.content";
               rel1.relative: 1.0 0.0;
               rel1.offset: -1 4;
               rel2.to_x: "elm.swallow.content";
               rel2.relative: 1.0 1.0;
               rel2.offset: -1 -5;
               color: PROGRESSBAR_LIST_PROGRESS_STYLE_TEXT_COLOR_INC;
               text {
                  font: "SLP:style=Roman";
                  size: 10;
                  min: 0 0;
                  align: 0.0 0.5;
                  text_class: "slp";
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 0;
               text.min: 1 1;
               rel1.offset: 0 4;
               rel2.offset: 0 -5;
            }
         }
         part { name: "background";
            mouse_events: 0;
            scale: 1;
            clip_to: "elm.background.progressbar";
            description {
               state: "default" 0.0;
               rel1 {
                  to: "elm.swallow.bar";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to: "elm.swallow.bar";
                  relative: 1.0 1.0;
                  offset: -1 -1;
               }
               image {
                  normal: "progress_slider_bg02.9.png";
                  border: 6 6 0 0;
               }
            }
         }
         part { name: "elm.text.status";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               visible: 0;
               rel1 {
                  to: "background";
                  relative: 0.5 0.5;
               }
               rel2 {
                  to: "background";
                  relative: 0.5 0.5;
               }
               text {
                  font: "SLP:style=Roman";
                  size: 10;
                  min: 0 0;
                  align: 0.5 0.0;
                  text_class: "slp";
               }
               color: PROGRESSBAR_LIST_PROGRESS_STYLE_TEXT_COLOR_INC;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 0;
               text.min: 1 1;
            }
         }
         part { name: "elm.progress.progressbar";
            mouse_events: 0;
            scale: 1;
            clip_to: "elm.background.progressbar";
            description {
               state: "default" 0.0;
               min: 0 0;
               fixed: 1 1;
               rel1 {
                  to: "elm.swallow.bar";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to_y: "elm.swallow.bar";
                  to_x: "elm.cur.progressbar";
                  offset: -1 -1;
               }
               image {
                  normal: "progress_slider_bar02.9.png";
                  border: 6 6 0 0;
               }
            }
            description {
               state: "invert" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to_y: "elm.swallow.bar";
                  to_x: "elm.cur.progressbar";
               }
               rel2 {
                  to: "elm.swallow.bar";
                  relative: 1.0 1.0;
               }
            }
            description {
               state: "state_begin" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to: "elm.swallow.bar";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to: "elm.swallow.bar";
                  relative: 0.1 1.0;
               }
            }
            description {
               state: "state_end" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to: "elm.swallow.bar";
                  relative: 0.9 0.0;
               }
               rel2 {
                  to: "elm.swallow.bar";
                  relative: 1.0 1.0;
               }
            }
         }
         part { name: "text-bar";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            clip_to: "progress-rect";
            //effect: SOFT_SHADOW;
            scale: 0;
            description { state: "default" 0.0;
               align: 0.0 0.0;
               fixed: 1 1;
               visible: 0;
               rel1.to: "elm.text.status";
               rel1.offset: -1 -1;
               rel2.to: "elm.text.status";
               text {
                  text_source: "elm.text.status";
                  font: "SLP:style=Roman";
                  size: 10;
                  min: 0 0;
                  align: 0.0 0.0;
                  text_class: "slp";
               }
               color: PROGRESSBAR_LIST_PROGRESS_STYLE_STATUS_TEXT_COLOR_INC;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 0;
               text.min: 1 1;
            }
         }
         part { name: "elm.cur.progressbar";
            mouse_events: 0;
            scale: 1;
            dragable {
               confine: "background";
               x: 1 1 1;
               y: 0 0 0;
            }
            description { state: "default" 0.0;
               min: 0 28;
               fixed: 1 1;
               visible: 0;
               rel1 {
                  to: "background";
                  relative: 0 0;
               }
               rel2.to: "background";
           }
         }
         part { name: "progress-rect";
            mouse_events: 0;
            scale: 1;
            type: RECT;
            description {
               state: "default" 0.0;
               rel1.to: "elm.progress.progressbar";
               rel2.to: "elm.progress.progressbar";
            }
         }
      }
      programs {
         program { name: "label_show";
            signal: "elm,state,text,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.text";
         }
         program { name: "label_hide";
            signal: "elm,state,text,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.text";
         }
         program { name: "icon_show";
            signal: "elm,state,icon,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.swallow.content";
         }
         program { name: "icon_hide";
            signal: "elm,state,icon,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.swallow.content";
         }
         program { name: "units_show";
            signal: "elm,state,units,visible";
            source: "elm";
            action:  STATE_SET "show" 0.0;
            target: "text-bar";
            target: "elm.text.status";
         }
         program { name: "units_hide";
            signal: "elm,state,units,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "text-bar";
            target: "elm.text.status";
         }
         program { name: "slide_to_end";
            action:  STATE_SET "state_end" 0.0;
            transition: LINEAR 0.5;
            target: "elm.progress.progressbar";
            after: "slide_to_begin";
         }
         program { name: "slide_to_begin";
            signal: "elm,state,slide,begin";
            action: STATE_SET "state_begin" 0.0;
            target: "elm.progress.progressbar";
            transition: LINEAR 0.5;
            after: "slide_to_end";
         }
         program { name: "start_pulse";
            signal: "elm,state,pulse,start";
            source: "elm";
            after: "slide_to_end";
         }
         program { name: "stop_pulse";
            signal: "elm,state,pulse,stop";
            source: "elm";
            action: ACTION_STOP;
            target: "slide_to_begin";
            target: "slide_to_end";
            target: "start_pulse";
            after: "state_pulse";
         }
         program { name: "state_pulse";
            signal: "elm,state,pulse";
            source: "elm";
            action: STATE_SET "state_begin" 0.0;
            target: "elm.progress.progressbar";
            after: "units_hide";
         }
         program { name: "state_fraction";
            signal: "elm,state,fraction";
            source: "elm";
            action: ACTION_STOP;
            target: "slide_to_begin";
            target: "slide_to_end";
            target: "start_pulse";
            action: STATE_SET "default" 0.0;
            target: "elm.progress.progressbar";
         }
         program { name: "set_invert_on";
            signal: "elm,state,inverted,on";
            source: "elm";
            action:  STATE_SET "invert" 0.0;
            target: "elm.progress.progressbar";
         }
         program { name: "set_invert_off";
            signal: "elm,state,inverted,off";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.progress.progressbar";
         }
      }
   }

#define PROGRESS_LOAD_IMAGEG( param_num ) \
   image: "00_winset_list_progress_"#param_num".png" COMP;

#define PROGRESS_BG_DESC( param_name, param_num ) \
   description { state: "pulse" 0.#param_num; \
      inherit: "default" 0.0; \
      image { \
         normal: "00_winset_"#param_name"_process_"#param_num".png"; \
      } \
   }

#define   PROGRESSING_DELAY    0.03

   group { name: "elm/progressbar/horizontal/list_process";
      images {
         image: "00_winset_list_process_01.png" COMP;
         image: "00_winset_list_process_02.png" COMP;
         image: "00_winset_list_process_03.png" COMP;
         image: "00_winset_list_process_04.png" COMP;
         image: "00_winset_list_process_05.png" COMP;
         image: "00_winset_list_process_06.png" COMP;
         image: "00_winset_list_process_07.png" COMP;
         image: "00_winset_list_process_08.png" COMP;
         image: "00_winset_list_process_09.png" COMP;
         image: "00_winset_list_process_10.png" COMP;
         image: "00_winset_list_process_11.png" COMP;
         image: "00_winset_list_process_12.png" COMP;
         image: "00_winset_list_process_13.png" COMP;
         image: "00_winset_list_process_14.png" COMP;
         image: "00_winset_list_process_15.png" COMP;
         image: "00_winset_list_process_16.png" COMP;
         image: "00_winset_list_process_17.png" COMP;
         image: "00_winset_list_process_18.png" COMP;
         image: "00_winset_list_process_19.png" COMP;
         image: "00_winset_list_process_20.png" COMP;
         image: "00_winset_list_process_21.png" COMP;
         image: "00_winset_list_process_22.png" COMP;
         image: "00_winset_list_process_23.png" COMP;
         image: "00_winset_list_process_24.png" COMP;
         image: "00_winset_list_process_25.png" COMP;
         image: "00_winset_list_process_26.png" COMP;
         image: "00_winset_list_process_27.png" COMP;
         image: "00_winset_list_process_28.png" COMP;
         image: "00_winset_list_process_29.png" COMP;
         image: "00_winset_list_process_30.png" COMP;
      }
      parts {
         part { name: "elm.background.progressbar";
            mouse_events: 0;
            scale: 1;
            type: RECT;
            description {
               state: "default" 0.0;
            }
         }
         part { name: "elm.swallow.bar";
            mouse_events: 0;
            scale: 1;
            type: SWALLOW;
            description { state: "default" 0.0;
               min: 0 0;
               max: 0 0;
               visible: 0;
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               min: 0 0;
               max: 0 0;
               visible: 0;
            }
         }
         part { name: "background";
            mouse_events: 0;
            scale: 1;
            clip_to: "elm.background.progressbar";
            description {
               state: "default" 0.0;
               min: PROGRESSBAR_LIST_PROCESS_WIDTH_INC PROGRESSBAR_LIST_PROCESS_HEIGHT_INC;
               max: PROGRESSBAR_LIST_PROCESS_WIDTH_INC PROGRESSBAR_LIST_PROCESS_HEIGHT_INC;
               visible: 1;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               image {
                  normal: "00_winset_list_process_01.png";
               }
            }
            description { state: "pulse" 0.0;
               inherit: "default" 0.0;
               image {
                  normal: "00_winset_list_process_01.png";
               }
            }
            PROGRESS_BG_DESC( list, 01 )
            PROGRESS_BG_DESC( list, 02 )
            PROGRESS_BG_DESC( list, 03 )
            PROGRESS_BG_DESC( list, 04 )
            PROGRESS_BG_DESC( list, 05 )
            PROGRESS_BG_DESC( list, 06 )
            PROGRESS_BG_DESC( list, 07 )
            PROGRESS_BG_DESC( list, 08 )
            PROGRESS_BG_DESC( list, 09 )
            PROGRESS_BG_DESC( list, 10 )
            PROGRESS_BG_DESC( list, 11 )
            PROGRESS_BG_DESC( list, 12 )
            PROGRESS_BG_DESC( list, 13 )
            PROGRESS_BG_DESC( list, 14 )
            PROGRESS_BG_DESC( list, 15 )
            PROGRESS_BG_DESC( list, 16 )
            PROGRESS_BG_DESC( list, 17 )
            PROGRESS_BG_DESC( list, 18 )
            PROGRESS_BG_DESC( list, 19 )
            PROGRESS_BG_DESC( list, 20 )
            PROGRESS_BG_DESC( list, 21 )
            PROGRESS_BG_DESC( list, 22 )
            PROGRESS_BG_DESC( list, 23 )
            PROGRESS_BG_DESC( list, 24 )
            PROGRESS_BG_DESC( list, 25 )
            PROGRESS_BG_DESC( list, 26 )
            PROGRESS_BG_DESC( list, 27 )
            PROGRESS_BG_DESC( list, 28 )
            PROGRESS_BG_DESC( list, 29 )
            PROGRESS_BG_DESC( list, 30 )
         }
      }
      script {
         public pulse_state;
      }
      programs {
         program { name: "continue_pulse";
            script {
               new Float:state;
               state = get_float(pulse_state);
               set_state(PART:"background", "pulse", state);
               state += 0.01;
               if( state > 0.30 )
                  state = 0.01;
               set_float(pulse_state, state);
            }
               after: "delay";
         }
         program { name: "delay";
            action: STATE_SET "pulse" 0.10;
            target: "background";
            in: PROGRESSING_DELAY 0.0;
            after: "continue_pulse";
         }
         program { name: "start_pulse";
            signal: "elm,state,pulse,start";
            source: "elm";
            script {
               set_float(pulse_state, 0.0);
            }
            after: "continue_pulse";
         }
         program { name: "stop_pulse";
            signal: "elm,state,pulse,stop";
            source: "elm";
            action: ACTION_STOP;
            target: "continue_pulse";
            target: "delay";
            target: "start_pulse";
            after: "init_pulse";
         }
         program { name: "init_pulse";
            action: STATE_SET "default" 0.0;
            target: "background";
         }
      }
   }

   group { name: "elm/progressbar/horizontal/list_process_small";
      images {
         image: "00_winset_list_process_01_"PROGRESSBAR_LIST_PROCESS_SMALL_IMAGE".png" COMP;
         image: "00_winset_list_process_02_"PROGRESSBAR_LIST_PROCESS_SMALL_IMAGE".png" COMP;
         image: "00_winset_list_process_03_"PROGRESSBAR_LIST_PROCESS_SMALL_IMAGE".png" COMP;
         image: "00_winset_list_process_04_"PROGRESSBAR_LIST_PROCESS_SMALL_IMAGE".png" COMP;
         image: "00_winset_list_process_05_"PROGRESSBAR_LIST_PROCESS_SMALL_IMAGE".png" COMP;
         image: "00_winset_list_process_06_"PROGRESSBAR_LIST_PROCESS_SMALL_IMAGE".png" COMP;
         image: "00_winset_list_process_07_"PROGRESSBAR_LIST_PROCESS_SMALL_IMAGE".png" COMP;
         image: "00_winset_list_process_08_"PROGRESSBAR_LIST_PROCESS_SMALL_IMAGE".png" COMP;
         image: "00_winset_list_process_09_"PROGRESSBAR_LIST_PROCESS_SMALL_IMAGE".png" COMP;
         image: "00_winset_list_process_10_"PROGRESSBAR_LIST_PROCESS_SMALL_IMAGE".png" COMP;
         image: "00_winset_list_process_11_"PROGRESSBAR_LIST_PROCESS_SMALL_IMAGE".png" COMP;
         image: "00_winset_list_process_12_"PROGRESSBAR_LIST_PROCESS_SMALL_IMAGE".png" COMP;
         image: "00_winset_list_process_13_"PROGRESSBAR_LIST_PROCESS_SMALL_IMAGE".png" COMP;
         image: "00_winset_list_process_14_"PROGRESSBAR_LIST_PROCESS_SMALL_IMAGE".png" COMP;
         image: "00_winset_list_process_15_"PROGRESSBAR_LIST_PROCESS_SMALL_IMAGE".png" COMP;
         image: "00_winset_list_process_16_"PROGRESSBAR_LIST_PROCESS_SMALL_IMAGE".png" COMP;
         image: "00_winset_list_process_17_"PROGRESSBAR_LIST_PROCESS_SMALL_IMAGE".png" COMP;
         image: "00_winset_list_process_18_"PROGRESSBAR_LIST_PROCESS_SMALL_IMAGE".png" COMP;
         image: "00_winset_list_process_19_"PROGRESSBAR_LIST_PROCESS_SMALL_IMAGE".png" COMP;
         image: "00_winset_list_process_20_"PROGRESSBAR_LIST_PROCESS_SMALL_IMAGE".png" COMP;
         image: "00_winset_list_process_21_"PROGRESSBAR_LIST_PROCESS_SMALL_IMAGE".png" COMP;
         image: "00_winset_list_process_22_"PROGRESSBAR_LIST_PROCESS_SMALL_IMAGE".png" COMP;
         image: "00_winset_list_process_23_"PROGRESSBAR_LIST_PROCESS_SMALL_IMAGE".png" COMP;
         image: "00_winset_list_process_24_"PROGRESSBAR_LIST_PROCESS_SMALL_IMAGE".png" COMP;
         image: "00_winset_list_process_25_"PROGRESSBAR_LIST_PROCESS_SMALL_IMAGE".png" COMP;
         image: "00_winset_list_process_26_"PROGRESSBAR_LIST_PROCESS_SMALL_IMAGE".png" COMP;
         image: "00_winset_list_process_27_"PROGRESSBAR_LIST_PROCESS_SMALL_IMAGE".png" COMP;
         image: "00_winset_list_process_28_"PROGRESSBAR_LIST_PROCESS_SMALL_IMAGE".png" COMP;
         image: "00_winset_list_process_29_"PROGRESSBAR_LIST_PROCESS_SMALL_IMAGE".png" COMP;
         image: "00_winset_list_process_30_"PROGRESSBAR_LIST_PROCESS_SMALL_IMAGE".png" COMP;
      }
      parts {
         part { name: "elm.background.progressbar";
            mouse_events: 0;
            scale: 1;
            type: RECT;
            description {
               state: "default" 0.0;
            }
         }
         part { name: "elm.swallow.bar";
            mouse_events: 0;
            scale: 1;
            type: SWALLOW;
            description { state: "default" 0.0;
               min: 0 0;
               max: 0 0;
               visible: 0;
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               min: 0 0;
               max: 0 0;
               visible: 0;
            }
         }
         part { name: "background";
            mouse_events: 0;
            scale: 1;
            clip_to: "elm.background.progressbar";
            description {
               state: "default" 0.0;
               min: PROGRESSBAR_LIST_PROCESS_SMALL_INC PROGRESSBAR_LIST_PROCESS_SMALL_INC;
               max: PROGRESSBAR_LIST_PROCESS_SMALL_INC PROGRESSBAR_LIST_PROCESS_SMALL_INC;
               visible: 1;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               image {
                  normal: "00_winset_list_process_01.png";
               }
            }
            description { state: "pulse" 0.0;
               inherit: "default" 0.0;
               image {
                  normal: "00_winset_list_process_01.png";
               }
            }
            PROGRESS_BG_DESC( list, 01 )
            PROGRESS_BG_DESC( list, 02 )
            PROGRESS_BG_DESC( list, 03 )
            PROGRESS_BG_DESC( list, 04 )
            PROGRESS_BG_DESC( list, 05 )
            PROGRESS_BG_DESC( list, 06 )
            PROGRESS_BG_DESC( list, 07 )
            PROGRESS_BG_DESC( list, 08 )
            PROGRESS_BG_DESC( list, 09 )
            PROGRESS_BG_DESC( list, 10 )
            PROGRESS_BG_DESC( list, 11 )
            PROGRESS_BG_DESC( list, 12 )
            PROGRESS_BG_DESC( list, 13 )
            PROGRESS_BG_DESC( list, 14 )
            PROGRESS_BG_DESC( list, 15 )
            PROGRESS_BG_DESC( list, 16 )
            PROGRESS_BG_DESC( list, 17 )
            PROGRESS_BG_DESC( list, 18 )
            PROGRESS_BG_DESC( list, 19 )
            PROGRESS_BG_DESC( list, 20 )
            PROGRESS_BG_DESC( list, 21 )
            PROGRESS_BG_DESC( list, 22 )
            PROGRESS_BG_DESC( list, 23 )
            PROGRESS_BG_DESC( list, 24 )
            PROGRESS_BG_DESC( list, 25 )
            PROGRESS_BG_DESC( list, 26 )
            PROGRESS_BG_DESC( list, 27 )
            PROGRESS_BG_DESC( list, 28 )
            PROGRESS_BG_DESC( list, 29 )
            PROGRESS_BG_DESC( list, 30 )
         }
      }
      script {
         public pulse_state;
      }
      programs {
         program { name: "continue_pulse";
            script {
               new Float:state;
               state = get_float(pulse_state);
               set_state(PART:"background", "pulse", state);
               state += 0.01;
               if( state > 0.30 )
                  state = 0.01;
               set_float(pulse_state, state);
            }
               after: "delay";
         }
         program { name: "delay";
            action: STATE_SET "pulse" 0.10;
            target: "background";
            in: PROGRESSING_DELAY 0.0;
            after: "continue_pulse";
         }
         program { name: "start_pulse";
            signal: "elm,state,pulse,start";
            source: "elm";
            script {
               set_float(pulse_state, 0.0);
            }
            after: "continue_pulse";
         }
         program { name: "stop_pulse";
            signal: "elm,state,pulse,stop";
            source: "elm";
            action: ACTION_STOP;
            target: "continue_pulse";
            target: "delay";
            target: "start_pulse";
            after: "init_pulse";
         }
         program { name: "init_pulse";
            action: STATE_SET "default" 0.0;
            target: "background";
         }
      }
   }

   group { name: "elm/progressbar/horizontal/toolbar_process";
      images {
         image: "00_winset_toolbar_process_01.png" COMP;
         image: "00_winset_toolbar_process_02.png" COMP;
         image: "00_winset_toolbar_process_03.png" COMP;
         image: "00_winset_toolbar_process_04.png" COMP;
         image: "00_winset_toolbar_process_05.png" COMP;
         image: "00_winset_toolbar_process_06.png" COMP;
         image: "00_winset_toolbar_process_07.png" COMP;
         image: "00_winset_toolbar_process_08.png" COMP;
         image: "00_winset_toolbar_process_09.png" COMP;
         image: "00_winset_toolbar_process_10.png" COMP;
         image: "00_winset_toolbar_process_11.png" COMP;
         image: "00_winset_toolbar_process_12.png" COMP;
         image: "00_winset_toolbar_process_13.png" COMP;
         image: "00_winset_toolbar_process_14.png" COMP;
         image: "00_winset_toolbar_process_15.png" COMP;
         image: "00_winset_toolbar_process_16.png" COMP;
         image: "00_winset_toolbar_process_17.png" COMP;
         image: "00_winset_toolbar_process_18.png" COMP;
         image: "00_winset_toolbar_process_19.png" COMP;
         image: "00_winset_toolbar_process_20.png" COMP;
         image: "00_winset_toolbar_process_21.png" COMP;
         image: "00_winset_toolbar_process_22.png" COMP;
         image: "00_winset_toolbar_process_23.png" COMP;
         image: "00_winset_toolbar_process_24.png" COMP;
         image: "00_winset_toolbar_process_25.png" COMP;
         image: "00_winset_toolbar_process_26.png" COMP;
         image: "00_winset_toolbar_process_27.png" COMP;
         image: "00_winset_toolbar_process_28.png" COMP;
         image: "00_winset_toolbar_process_29.png" COMP;
         image: "00_winset_toolbar_process_30.png" COMP;
      }
      parts {
         part { name: "elm.background.progressbar";
            mouse_events: 0;
            scale: 1;
            type: RECT;
            description {
               state: "default" 0.0;
            }
         }
         part { name: "elm.swallow.bar";
            mouse_events: 0;
            scale: 1;
            type: SWALLOW;
            description { state: "default" 0.0;
               min: 0 0;
               max: 0 0;
               visible: 0;
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               min: 0 0;
               max: 0 0;
               visible: 0;
            }
         }
         part { name: "background";
            mouse_events: 0;
            scale: 1;
            clip_to: "elm.background.progressbar";
            description {
               state: "default" 0.0;
               min: 32 32;
               max: 32 32;
               visible: 1;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               image {
                  normal: "00_winset_toolbar_process_01.png";
               }
            }
            description { state: "pulse" 0.0;
               inherit: "default" 0.0;
               image {
                   normal: "00_winset_toolbar_process_01.png";
               }
            }
            PROGRESS_BG_DESC( toolbar, 01 )
            PROGRESS_BG_DESC( toolbar, 02 )
            PROGRESS_BG_DESC( toolbar, 03 )
            PROGRESS_BG_DESC( toolbar, 04 )
            PROGRESS_BG_DESC( toolbar, 05 )
            PROGRESS_BG_DESC( toolbar, 06 )
            PROGRESS_BG_DESC( toolbar, 07 )
            PROGRESS_BG_DESC( toolbar, 08 )
            PROGRESS_BG_DESC( toolbar, 09 )
            PROGRESS_BG_DESC( toolbar, 10 )
            PROGRESS_BG_DESC( toolbar, 11 )
            PROGRESS_BG_DESC( toolbar, 12 )
            PROGRESS_BG_DESC( toolbar, 13 )
            PROGRESS_BG_DESC( toolbar, 14 )
            PROGRESS_BG_DESC( toolbar, 15 )
            PROGRESS_BG_DESC( toolbar, 16 )
            PROGRESS_BG_DESC( toolbar, 17 )
            PROGRESS_BG_DESC( toolbar, 18 )
            PROGRESS_BG_DESC( toolbar, 19 )
            PROGRESS_BG_DESC( toolbar, 20 )
            PROGRESS_BG_DESC( toolbar, 21 )
            PROGRESS_BG_DESC( toolbar, 22 )
            PROGRESS_BG_DESC( toolbar, 23 )
            PROGRESS_BG_DESC( toolbar, 24 )
            PROGRESS_BG_DESC( toolbar, 25 )
            PROGRESS_BG_DESC( toolbar, 26 )
            PROGRESS_BG_DESC( toolbar, 27 )
            PROGRESS_BG_DESC( toolbar, 28 )
            PROGRESS_BG_DESC( toolbar, 29 )
            PROGRESS_BG_DESC( toolbar, 30 )
         }
      }
      script {
         public pulse_state;
      }
      programs {
         program { name: "continue_pulse";
            script {
               new Float:state;
               state = get_float(pulse_state);
               set_state(PART:"background", "pulse", state);
               state += 0.01;
               if( state > 0.30 )
                  state = 0.01;
               set_float(pulse_state, state);
            }
            after: "delay";
         }
         program { name: "delay";
            action: STATE_SET "pulse" 0.10;
            target: "background";
            in: PROGRESSING_DELAY 0.0;
            after: "continue_pulse";
         }
         program { name: "start_pulse";
            signal: "elm,state,pulse,start";
            source: "elm";
            script {
               set_float(pulse_state, 0.0);
            }
            after: "continue_pulse";
         }
         program { name: "stop_pulse";
            signal: "elm,state,pulse,stop";
            source: "elm";
            action: ACTION_STOP;
            target: "continue_pulse";
            target: "delay";
            target: "start_pulse";
            after: "init_pulse";
         }
         program { name: "init_pulse";
            action: STATE_SET "default" 0.0;
            target: "background";
         }
      }
   }

   group { name: "elm/progressbar/horizontal/UIActivityIndicatorStyleWhiteLarge";
      images {
         image: "progress_01.png" COMP;
         image: "progress_02.png" COMP;
         image: "progress_03.png" COMP;
         image: "progress_04.png" COMP;
         image: "progress_05.png" COMP;
         image: "progress_06.png" COMP;
         image: "progress_07.png" COMP;
         image: "progress_08.png" COMP;
         image: "progress_09.png" COMP;
         image: "progress_10.png" COMP;
         image: "progress_11.png" COMP;
         image: "progress_12.png" COMP;
      }
      parts {
         part { name: "elm.background.progressbar";
            mouse_events: 0;
            scale: 1;
            type: RECT;
            description {
               state: "default" 0.0;
            }
         }
         part { name: "elm.swallow.bar";
            mouse_events: 0;
            scale: 1;
            type: SWALLOW;
            description { state: "default" 0.0;
               min: 0 0;
               max: 0 0;
               visible: 0;
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               min: 0 0;
               max: 0 0;
               visible: 0;
            }
         }
         part { name: "background";
            mouse_events: 0;
            scale: 1;
            clip_to: "elm.background.progressbar";
            description {
               state: "default" 0.0;
               min: 60 60;
               max: 60 60;
               visible: 1;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               image {
                  normal: "progress_01.png";
               }
            }
            description {
               state: "pulse" 0.0;
               inherit: "default" 0.0;
               image {
                  normal: "progress_01.png";
               }
            }
            description {
               state: "pulse" 0.01;
               inherit: "default" 0.0;
               image {
                  normal: "progress_01.png";
               }
            }
            description {
               state: "pulse" 0.02;
               inherit: "default" 0.0;
               image {
                  normal: "progress_02.png";
               }
            }
            description {
               state: "pulse" 0.03;
               inherit: "default" 0.0;
               image {
                  normal: "progress_03.png";
               }
            }
            description {
               state: "pulse" 0.04;
               inherit: "default" 0.0;
               image {
                  normal: "progress_04.png";
               }
            }
            description {
               state: "pulse" 0.05;
               inherit: "default" 0.0;
               image {
                  normal: "progress_05.png";
               }
            }
            description {
               state: "pulse" 0.06;
               inherit: "default" 0.0;
               image {
                  normal: "progress_06.png";
               }
            }
            description {
               state: "pulse" 0.07;
               inherit: "default" 0.0;
               image {
                  normal: "progress_07.png";
               }
            }
            description {
               state: "pulse" 0.08;
               inherit: "default" 0.0;
               image {
                  normal: "progress_08.png";
               }
            }
            description {
               state: "pulse" 0.09;
               inherit: "default" 0.0;
               image {
                  normal: "progress_09.png";
               }
            }
            description {
               state: "pulse" 0.10;
               inherit: "default" 0.0;
               image {
                  normal: "progress_10.png";
               }
            }
            description {
               state: "pulse" 0.11;
               inherit: "default" 0.0;
               image {
                  normal: "progress_11.png";
               }
            }
            description {
               state: "pulse" 0.12;
               inherit: "default" 0.0;
               image {
                  normal: "progress_12.png";
               }
            }
         }
      }
      script {
         public pulse_state;
      }
      programs {
         program { name: "continue_pulse";
            script {
               new Float:state;
               state = get_float(pulse_state);
               set_state(PART:"background", "pulse", state);
               state += 0.01;
               if( state > 0.12 )
                  state = 0.01;
               set_float(pulse_state, state);
            }
            after: "delay";
         }
         program { name: "delay";
             action: STATE_SET "pulse" 0.10;
             target: "background";
             in: PROGRESSING_DELAY 0.0;
             after: "continue_pulse";
         }
         program { name: "start_pulse";
            signal: "elm,state,pulse,start";
            source: "elm";
            script {
               set_float(pulse_state, 0.0);
            }
            after: "continue_pulse";
         }
         program { name: "stop_pulse";
            signal: "elm,state,pulse,stop";
            source: "elm";
            action: ACTION_STOP;
            target: "continue_pulse";
            target: "delay";
            target: "start_pulse";
            after: "init_pulse";
         }
         program { name: "init_pulse";
            action: STATE_SET "default" 0.0;
            target: "background";
         }
      }
   }

   group { name: "elm/progressbar/horizontal/UIActivityIndicatorStyleWhite";
      images {
         image: "progress_01_s.png" COMP;
         image: "progress_02_s.png" COMP;
         image: "progress_03_s.png" COMP;
         image: "progress_04_s.png" COMP;
         image: "progress_05_s.png" COMP;
         image: "progress_06_s.png" COMP;
         image: "progress_07_s.png" COMP;
         image: "progress_08_s.png" COMP;
         image: "progress_09_s.png" COMP;
         image: "progress_10_s.png" COMP;
         image: "progress_11_s.png" COMP;
         image: "progress_12_s.png" COMP;
      }
      parts {
         part { name: "elm.background.progressbar";
            mouse_events: 0;
            scale: 1;
            type: RECT;
            description {
               state: "default" 0.0;
            }
         }
         part { name: "elm.swallow.bar";
            mouse_events: 0;
            scale: 1;
            type: SWALLOW;
            description { state: "default" 0.0;
               min: 0 0;
               max: 0 0;
               visible: 0;
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               min: 0 0;
               max: 0 0;
               visible: 0;
            }
         }
         part { name: "background";
            mouse_events: 0;
            scale: 1;
            clip_to: "elm.background.progressbar";
            description {
               state: "default" 0.0;
               min: 30 30;
               max: 30 30;
               visible: 1;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               image {
                  normal: "progress_01_s.png";
               }
            }
            description {
               state: "pulse" 0.0;
               inherit: "default" 0.0;
               image {
                  normal: "progress_01_s.png";
               }
            }
            description {
               state: "pulse" 0.01;
               inherit: "default" 0.0;
               image {
                  normal: "progress_01_s.png";
               }
            }
            description {
               state: "pulse" 0.02;
               inherit: "default" 0.0;
               image {
                  normal: "progress_02_s.png";
               }
            }
            description {
               state: "pulse" 0.03;
               inherit: "default" 0.0;
               image {
                  normal: "progress_03_s.png";
               }
            }
            description {
               state: "pulse" 0.04;
               inherit: "default" 0.0;
               image {
                  normal: "progress_04_s.png";
               }
            }
            description {
               state: "pulse" 0.05;
               inherit: "default" 0.0;
               image {
                  normal: "progress_05_s.png";
               }
            }
            description {
               state: "pulse" 0.06;
               inherit: "default" 0.0;
               image {
                  normal: "progress_06_s.png";
               }
            }
            description {
               state: "pulse" 0.07;
               inherit: "default" 0.0;
               image {
                  normal: "progress_07_s.png";
               }
            }
            description {
               state: "pulse" 0.08;
               inherit: "default" 0.0;
               image {
                  normal: "progress_08_s.png";
               }
            }
            description {
               state: "pulse" 0.09;
               inherit: "default" 0.0;
               image {
                  normal: "progress_09_s.png";
               }
            }
            description {
               state: "pulse" 0.10;
               inherit: "default" 0.0;
               image {
                  normal: "progress_10_s.png";
               }
            }
            description {
               state: "pulse" 0.11;
               inherit: "default" 0.0;
               image {
                  normal: "progress_11_s.png";
               }
            }
            description {
               state: "pulse" 0.12;
               inherit: "default" 0.0;
               image {
                  normal: "progress_12_s.png";
               }
            }
         }
      }
      script {
         public pulse_state;
      }
      programs {
         program { name: "continue_pulse";
            script {
               new Float:state;
               state = get_float(pulse_state);
               set_state(PART:"background", "pulse", state);
               state += 0.01;
               if( state > 0.12 )
                  state = 0.01;
               set_float(pulse_state, state);
            }
            after: "delay";
         }
         program { name: "delay";
            action: STATE_SET "pulse" 0.10;
            target: "background";
            in: PROGRESSING_DELAY 0.0;
            after: "continue_pulse";
         }
         program { name: "start_pulse";
            signal: "elm,state,pulse,start";
            source: "elm";
            script {
               set_float(pulse_state, 0.0);
            }
            after: "continue_pulse";
           }
         program { name: "stop_pulse";
            signal: "elm,state,pulse,stop";
            source: "elm";
            action: ACTION_STOP;
            target: "continue_pulse";
            target: "delay";
            target: "start_pulse";
            after: "init_pulse";
         }
         program { name: "init_pulse";
            action: STATE_SET "default" 0.0;
            target: "background";
         }
      }
   }

   group { name: "elm/progressbar/horizontal/UIActivityIndicatorStyleGray";
      images {
         image: "progress_01_g.png" COMP;
         image: "progress_02_g.png" COMP;
         image: "progress_03_g.png" COMP;
         image: "progress_04_g.png" COMP;
         image: "progress_05_g.png" COMP;
         image: "progress_06_g.png" COMP;
         image: "progress_07_g.png" COMP;
         image: "progress_08_g.png" COMP;
         image: "progress_09_g.png" COMP;
         image: "progress_10_g.png" COMP;
         image: "progress_11_g.png" COMP;
         image: "progress_12_g.png" COMP;
      }
      parts {
         part { name: "elm.background.progressbar";
            mouse_events: 0;
            scale: 1;
            type: RECT;
            description {
               state: "default" 0.0;
            }
         }
         part { name: "elm.swallow.bar";
            mouse_events: 0;
            scale: 1;
            type: SWALLOW;
            description { state: "default" 0.0;
               min: 0 0;
               max: 0 0;
               visible: 0;
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               min: 0 0;
               max: 0 0;
               visible: 0;
            }
         }
         part { name: "background";
            mouse_events: 0;
            scale: 1;
            clip_to: "elm.background.progressbar";
            description {
               state: "default" 0.0;
               min: 30 30;
               max: 30 30;
               visible: 1;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               image {
                  normal: "progress_01_g.png";
               }
            }
            description {
               state: "pulse" 0.0;
               inherit: "default" 0.0;
               image {
                  normal: "progress_01_g.png";
               }
            }
            description {
               state: "pulse" 0.01;
               inherit: "default" 0.0;
               image {
                  normal: "progress_01_g.png";
               }
            }
            description {
               state: "pulse" 0.02;
               inherit: "default" 0.0;
               image {
                  normal: "progress_02_g.png";
               }
            }
            description {
               state: "pulse" 0.03;
               inherit: "default" 0.0;
               image {
                  normal: "progress_03_g.png";
               }
            }
            description {
               state: "pulse" 0.04;
               inherit: "default" 0.0;
               image {
                  normal: "progress_04_g.png";
               }
            }
            description {
               state: "pulse" 0.05;
               inherit: "default" 0.0;
               image {
                  normal: "progress_05_g.png";
               }
            }
            description {
               state: "pulse" 0.06;
               inherit: "default" 0.0;
               image {
                  normal: "progress_06_g.png";
               }
            }
            description {
               state: "pulse" 0.07;
               inherit: "default" 0.0;
               image {
                  normal: "progress_07_g.png";
               }
            }
            description {
               state: "pulse" 0.08;
               inherit: "default" 0.0;
               image {
                  normal: "progress_08_g.png";
               }
            }
            description {
               state: "pulse" 0.09;
               inherit: "default" 0.0;
               image {
                  normal: "progress_09_g.png";
               }
            }
            description {
               state: "pulse" 0.10;
               inherit: "default" 0.0;
               image {
                   normal: "progress_10_g.png";
               }
            }
            description {
               state: "pulse" 0.11;
               inherit: "default" 0.0;
               image {
                  normal: "progress_11_g.png";
               }
            }
            description {
               state: "pulse" 0.12;
               inherit: "default" 0.0;
               image {
                  normal: "progress_12_g.png";
               }
            }
         }
      }
      script {
         public pulse_state;
      }
      programs {
         program { name: "continue_pulse";
            script {
               new Float:state;
               state = get_float(pulse_state);
               set_state(PART:"background", "pulse", state);
               state += 0.01;
               if( state > 0.12 )
                  state = 0.01;
               set_float(pulse_state, state);
            }
            after: "delay";
         }
         program { name: "delay";
            action: STATE_SET "pulse" 0.10;
            target: "background";
            in: PROGRESSING_DELAY 0.0;
            after: "continue_pulse";
         }
         program { name: "start_pulse";
            signal: "elm,state,pulse,start";
            source: "elm";
            script {
               set_float(pulse_state, 0.0);
            }
            after: "continue_pulse";
         }
         program { name: "stop_pulse";
            signal: "elm,state,pulse,stop";
            source: "elm";
            action: ACTION_STOP;
            target: "continue_pulse";
            target: "delay";
            target: "start_pulse";
            after: "init_pulse";
         }
         program { name: "init_pulse";
            action: STATE_SET "default" 0.0;
            target: "background";
         }
      }
   }

#define CIRCLE_PROGRESSING_DELAY       0.03
#define PROGRESS_CIRCLE_TOTAL_STATES   50

#define PROGRESS_CIRCLE_BG_DESC( param_num ) \
   description { state: "progress" 0.#param_num; \
      inherit: "default" 0.0; \
      image { \
         normal: "00_progress_circle_bg_"#param_num".png"; \
      } \
   }

   group { name: "elm/progressbar/horizontal/progress_circle";
      images {
         image: "00_progress_circle_bg.png" COMP;
         image: "00_progress_circle_bg_01.png" COMP;
         image: "00_progress_circle_bg_02.png" COMP;
         image: "00_progress_circle_bg_03.png" COMP;
         image: "00_progress_circle_bg_04.png" COMP;
         image: "00_progress_circle_bg_05.png" COMP;
         image: "00_progress_circle_bg_06.png" COMP;
         image: "00_progress_circle_bg_07.png" COMP;
         image: "00_progress_circle_bg_08.png" COMP;
         image: "00_progress_circle_bg_09.png" COMP;
         image: "00_progress_circle_bg_10.png" COMP;
         image: "00_progress_circle_bg_11.png" COMP;
         image: "00_progress_circle_bg_12.png" COMP;
         image: "00_progress_circle_bg_13.png" COMP;
         image: "00_progress_circle_bg_14.png" COMP;
         image: "00_progress_circle_bg_15.png" COMP;
         image: "00_progress_circle_bg_16.png" COMP;
         image: "00_progress_circle_bg_17.png" COMP;
         image: "00_progress_circle_bg_18.png" COMP;
         image: "00_progress_circle_bg_19.png" COMP;
         image: "00_progress_circle_bg_20.png" COMP;
         image: "00_progress_circle_bg_21.png" COMP;
         image: "00_progress_circle_bg_22.png" COMP;
         image: "00_progress_circle_bg_23.png" COMP;
         image: "00_progress_circle_bg_24.png" COMP;
         image: "00_progress_circle_bg_25.png" COMP;
         image: "00_progress_circle_bg_26.png" COMP;
         image: "00_progress_circle_bg_27.png" COMP;
         image: "00_progress_circle_bg_28.png" COMP;
         image: "00_progress_circle_bg_29.png" COMP;
         image: "00_progress_circle_bg_30.png" COMP;
         image: "00_progress_circle_bg_31.png" COMP;
         image: "00_progress_circle_bg_32.png" COMP;
         image: "00_progress_circle_bg_33.png" COMP;
         image: "00_progress_circle_bg_34.png" COMP;
         image: "00_progress_circle_bg_35.png" COMP;
         image: "00_progress_circle_bg_36.png" COMP;
         image: "00_progress_circle_bg_37.png" COMP;
         image: "00_progress_circle_bg_38.png" COMP;
         image: "00_progress_circle_bg_39.png" COMP;
         image: "00_progress_circle_bg_40.png" COMP;
         image: "00_progress_circle_bg_41.png" COMP;
         image: "00_progress_circle_bg_42.png" COMP;
         image: "00_progress_circle_bg_43.png" COMP;
         image: "00_progress_circle_bg_44.png" COMP;
         image: "00_progress_circle_bg_45.png" COMP;
         image: "00_progress_circle_bg_46.png" COMP;
         image: "00_progress_circle_bg_47.png" COMP;
         image: "00_progress_circle_bg_48.png" COMP;
         image: "00_progress_circle_bg_49.png" COMP;
         image: "00_progress_circle_bg_50.png" COMP;
      }
      parts {
         part { name: "elm.background.progressbar";
            mouse_events: 0;
            scale: 1;
            type: RECT;
            description {
               state: "default" 0.0;
            }
         }
         part { name: "elm.swallow.bar";
            mouse_events: 0;
            scale: 1;
            type: SWALLOW;
            description { state: "default" 0.0;
               min: 0 0;
               max: 0 0;
               visible: 0;
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               min: 0 0;
               max: 0 0;
               visible: 0;
            }
         }
         part { name: "elm.cur.progressbar";
            mouse_events: 0;
            scale: 1;
            dragable {
               confine: "background";
               x: 1 1 1;
               y: 0 0 0;
            }
            description { state: "default" 0.0;
               min: 1 1;
               fixed: 1 1;
               visible: 0;
               rel1.to: "background";
               rel2.to: "background";
           }
         }
         part { name: "background";
            mouse_events: 0;
            scale: 1;
            clip_to: "elm.background.progressbar";
            description {
               state: "default" 0.0;
               min: PROGRESSBAR_PROGRESS_CIRCLE_BG_SIZE_INC;
               max: PROGRESSBAR_PROGRESS_CIRCLE_BG_SIZE_INC;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               image {
                  normal: "00_progress_circle_bg.png";
               }
            }
         }
         part { name: "progress_circle_img";
            mouse_events: 0;
            scale: 1;
            clip_to: "elm.background.progressbar";
            description {
               state: "default" 0.0;
               rel1 {
                  to: "background";
               }
               rel2 {
                  to: "background";
               }
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               image {
                  normal: "00_progress_circle_bg.png";
               }
            }
            description { state: "progress" 0.0;
               inherit: "default" 0.0;
               image {
                  normal: "00_progress_circle_bg.png";
               }
            }
            PROGRESS_CIRCLE_BG_DESC( 01 )
            PROGRESS_CIRCLE_BG_DESC( 02 )
            PROGRESS_CIRCLE_BG_DESC( 03 )
            PROGRESS_CIRCLE_BG_DESC( 04 )
            PROGRESS_CIRCLE_BG_DESC( 05 )
            PROGRESS_CIRCLE_BG_DESC( 06 )
            PROGRESS_CIRCLE_BG_DESC( 07 )
            PROGRESS_CIRCLE_BG_DESC( 08 )
            PROGRESS_CIRCLE_BG_DESC( 09 )
            PROGRESS_CIRCLE_BG_DESC( 10 )
            PROGRESS_CIRCLE_BG_DESC( 11 )
            PROGRESS_CIRCLE_BG_DESC( 12 )
            PROGRESS_CIRCLE_BG_DESC( 13 )
            PROGRESS_CIRCLE_BG_DESC( 14 )
            PROGRESS_CIRCLE_BG_DESC( 15 )
            PROGRESS_CIRCLE_BG_DESC( 16 )
            PROGRESS_CIRCLE_BG_DESC( 17 )
            PROGRESS_CIRCLE_BG_DESC( 18 )
            PROGRESS_CIRCLE_BG_DESC( 19 )
            PROGRESS_CIRCLE_BG_DESC( 20 )
            PROGRESS_CIRCLE_BG_DESC( 21 )
            PROGRESS_CIRCLE_BG_DESC( 22 )
            PROGRESS_CIRCLE_BG_DESC( 23 )
            PROGRESS_CIRCLE_BG_DESC( 24 )
            PROGRESS_CIRCLE_BG_DESC( 25 )
            PROGRESS_CIRCLE_BG_DESC( 26 )
            PROGRESS_CIRCLE_BG_DESC( 27 )
            PROGRESS_CIRCLE_BG_DESC( 28 )
            PROGRESS_CIRCLE_BG_DESC( 29 )
            PROGRESS_CIRCLE_BG_DESC( 30 )
            PROGRESS_CIRCLE_BG_DESC( 31 )
            PROGRESS_CIRCLE_BG_DESC( 32 )
            PROGRESS_CIRCLE_BG_DESC( 33 )
            PROGRESS_CIRCLE_BG_DESC( 34 )
            PROGRESS_CIRCLE_BG_DESC( 35 )
            PROGRESS_CIRCLE_BG_DESC( 36 )
            PROGRESS_CIRCLE_BG_DESC( 37 )
            PROGRESS_CIRCLE_BG_DESC( 38 )
            PROGRESS_CIRCLE_BG_DESC( 39 )
            PROGRESS_CIRCLE_BG_DESC( 40 )
            PROGRESS_CIRCLE_BG_DESC( 41 )
            PROGRESS_CIRCLE_BG_DESC( 42 )
            PROGRESS_CIRCLE_BG_DESC( 43 )
            PROGRESS_CIRCLE_BG_DESC( 44 )
            PROGRESS_CIRCLE_BG_DESC( 45 )
            PROGRESS_CIRCLE_BG_DESC( 46 )
            PROGRESS_CIRCLE_BG_DESC( 47 )
            PROGRESS_CIRCLE_BG_DESC( 48 )
            PROGRESS_CIRCLE_BG_DESC( 49 )
            PROGRESS_CIRCLE_BG_DESC( 50 )
         }
      }
      programs {
         script {
            public curr_state = 0;
            public final_state = 0;
            public prev_state = 0;
            public max_state = 0;    // maximum possible state, a normalized value
            public circle_zero_cross = 0;   // whether circle crosses its Zero state or not.

            public progress_circle_state_change(){
            new Float:x, Float:y, Float:final, Float:max;
            max = PROGRESS_CIRCLE_TOTAL_STATES / 100.0;
            set_float(max_state, max);
            get_drag(PART:"elm.cur.progressbar", x, y);
            final = x * max;   // calculate final state as per the set drag value
            set_float(final_state, final);
            if( final < get_float(prev_state) )
               set_int(circle_zero_cross, 1);  // high value to low value, crosses zero state.
            else
               set_int(circle_zero_cross, 0);  // low value to high value, no need for zero state crossing.
            }
         }
         program { name: "circle_progress";
            script {
               new Float:curr, Float:final, Float:max;
               new zero_cross;
               zero_cross = get_int(circle_zero_cross);
               max = get_float(max_state);
               curr = get_float(curr_state);
               set_state(PART:"progress_circle_img", "progress", curr);
               curr += 0.01;   // for next immediate state.
               if( (curr > max) && (zero_cross == 1) )
               {
                  curr = 0.00;   // once it crosses Zero state, reset its state.
                  set_int(circle_zero_cross, 0);
               }
               else if( curr > max ) return;

               final = get_float(final_state);
               zero_cross = get_int(circle_zero_cross);
               if( (curr > final) && (zero_cross == 0) )
               {
                  set_float(prev_state, get_float(curr_state));
                  return;
               }
               set_float(curr_state, curr);
            }
            after: "delay";
         }
         program { name: "delay";
            action: STATE_SET "progress" 0.10;
            target: "progress_circle_img";
            in: CIRCLE_PROGRESSING_DELAY 0.0;
            after: "circle_progress";
         }
         program { name: "circle_start";
            signal: "elm,state,pulse,start";
            source: "elm";
            script {
               set_float(curr_state, 0.0);
            }
            after: "circle_progress";
         }
         program { name: "circle_stop";
            signal: "elm,state,pulse,stop";
            source: "elm";
            action: ACTION_STOP;
            target: "circle_progress";
            target: "delay";
            target: "circle_start";
         }
         program { name: "circle_state_change";
            signal: "elm,state,change";
            source: "elm";
            script {
               progress_circle_state_change()
            }
            after: "circle_progress";
         }
      }
   }
