/*
 * Copyright (c) 2010 Samsung Electronics Co., Ltd All Rights Reserved 
 *
 * PROPRIETARY/CONFIDENTIAL
 *
 * This software is the confidential and proprietary information of SAMSUNG
 * ELECTRONICS ("Confidential Information"). You agree and acknowledge that this
 * software is owned by Samsung and you shall not disclose such Confidential
 * Information and shall use it only in accordance with the terms of the license
 * agreement you entered into with SAMSUNG ELECTRONICS. SAMSUNG make no
 * representations or warranties about the suitability of the software, either
 * express or implied, including but not limited to the implied warranties of
 * merchantability, fitness for a particular purpose, or non-infringement.
 * SAMSUNG shall not be liable for any damages suffered by licensee arising out
 * of or releated to this software.
 *
 */

   group { name: "elm/slider/horizontal/tap_to_drag";
      images {
         image: "00_winset_list_progress_bg.png" COMP;
         image: "00_winset_list_progress_bar.png" COMP;
         image: "00_slider_bar_press.png" COMP;
      }
      script {
         public invert_on = 0;
         public set_invert_on() {
            set_state(PART:"level", "inverted", 0.0);
            set_state(PART:"level2", "inverted", 0.0);
            set_int(invert_on, 1);
         }
         public set_invert_off() {
            set_state(PART:"level", "default", 0.0);
            set_state(PART:"level2", "default", 0.0);
            set_int(invert_on, 0);
         }
         public thumb_down() {
            if(get_int(invert_on) == 0)
               set_state(PART:"level", "pressed", 0.0);
            else if(get_int(invert_on) == 1)
               set_state(PART:"level2", "pressed", 0.0);
            }
         public thumb_up() {
            if(get_int(invert_on) == 0)
               set_state(PART:"level", "default", 0.0);
            else if(get_int(invert_on) == 1)
               set_state(PART:"level2", "inverted", 0.0);
            }
         }
         parts {
            part { name: "base";
               mouse_events: 0;
               scale: 1;
               description { state: "default" 0.0;
                  min: SLIDER_BASE_MIN_WIDTH_INC SLIDER_BASE_HEIGHT_INC;
                  max: 99999 SLIDER_BASE_HEIGHT_INC;
                  rel1 { to: "bg";
                     offset: 1 0;
                  }
                  rel2 { to: "bg";
                     offset: -5 -1;
                  }
                  image.normal: "00_winset_list_progress_bg.png";
                  image.border: 0 0 4 4;
                  image.border_scale: 1;
               }
            }
            part { name: "level";
               mouse_events: 0;
               scale: 1;
               clip_to: "clipper";
               description { state: "default" 0.0;
                  fixed: 1 1;
                  rel1.to: "base";
                  rel2 {
                     to_y: "base";
                     to_x: "elm.dragable.slider";
                     offset: -5 -1;
                     relative: 0.5 1.0;
                  }
                  image.normal: "00_winset_list_progress_bar.png";
                  image.border: 0 0 4 4;
                  image.border_scale: 1;
               }
               description { state: "inverted" 0.0;
                  inherit: "default" 0.0;
                  visible: 0;
               }
               description { state: "pressed" 0.0;
                  inherit: "default" 0.0;
                  image.normal: "00_winset_list_progress_bar.png";
               }
            }
            part { name: "level2";
               mouse_events: 0;
               scale: 1;
               clip_to: "clipper";
               description { state: "default" 0.0;
                  fixed: 1 1;
                  visible: 0;
                  rel1 {
                     to_y: "base";
                     to_x: "elm.dragable.slider";
                     relative: 0.5 0.0;
                  }
                  rel2.to: "base";
                  rel2.offset: -2 -1;
                     image.normal: "00_winset_list_progress_bg.png";
                     image.border: 0 0 4 4;
                      image.border_scale: 1;
                  }
               description { state: "inverted" 0.0;
                  inherit: "default" 0.0;
                  visible: 1;
               }
               description { state: "pressed" 0.0;
                  inherit: "default" 0.0;
                  visible: 1;
                  image.normal: "00_winset_list_progress_bg.png";
               }
            }
            part { name: "bg";
               type: RECT;
               mouse_events: 0;
               scale: 1;
               description { state: "default" 0.0;
                  visible: 0;
                  rel1.to: "elm.swallow.bar";
                  rel2.to: "elm.swallow.bar";
                  rel2.offset: 3 0;
                  color: 0 0 0 0;
               }
            }
            part { name: "elm.swallow.bar";
               type: SWALLOW;
               scale: 1;
               description { state: "default" 0.0;
                  min: SLIDER_SWALLOW_BAR_MIN_WIDTH_INC SLIDER_SWALLOW_BAR_HEIGHT_INC;
                  max: 99999 SLIDER_SWALLOW_BAR_HEIGHT_INC;
                  align: 1.0 0.5;
                  rel1 {
                     to_x: "bar_left_padding";
                     relative: 1.0 0.0;
                  }
                  rel2 {
                     to_x: "bar_right_padding";
                     relative: 0.0 1.0;
                  }
               }
            }
            part {
               name: "bar_left_padding";
               type: SWALLOW;
               scale: 1;
               description {
                  state: "default" 0.0;
                  visible: 0;
                  min: 10 0;
                  fixed: 1 1;
                  rel1 {
                     relative: 1.0  0.5;
                     to_x: "elm.text";
                  }
                  rel2 {
                     relative: 1.0  0.5;
                     to_x: "elm.text";
                  }
                  align: 0.0 0.5;
               }
            }
            part {
               name: "bar_right_padding";
               type: SWALLOW;
               scale: 1;
               description {
                  state: "default" 0.0;
                  visible: 0;
                  min: 10 0;
                  fixed: 1 1;
                  rel1 {
                     relative: 0.0  0.5;
                     to_x: "elm.units";
                  }
                  rel2 {
                     relative: 0.0  0.5;
                     to_x: "elm.units";
                  }
                  align: 1.0 0.5;
               }
            }
            part { name: "elm.swallow.icon";
               type: SWALLOW;
               scale: 1;
               description { state: "default" 0.0;
                  visible: 0;
                  align: 0.0 0.5;
                  rel1 {
                     to_y: "elm.swallow.bar";
                  }
                  rel2 {
                     relative: 0.0 1.0;
                     to_y: "elm.swallow.bar";
                  }
               }
               description { state: "visible" 0.0;
                  inherit: "default" 0.0;
                  visible: 1;
                  aspect: 1.0 1.0;
                  aspect_preference: VERTICAL;
               }
            }
            part { name: "elm.text";
               type: TEXT;
               mouse_events: 0;
               scale: 1;
               description { state: "default" 0.0;
                  visible: 0;
                  fixed: 1 1;
                  align: 0.0 0.5;
                  rel1.to_x: "elm.swallow.icon";
                  rel1.relative: 1.0 0.0;
                  rel1.offset: -1 4;
                  rel2.to_x: "elm.swallow.icon";
                  rel2.relative: 1.0 1.0;
                  rel2.offset: -1 -5;
                  color: SLIDER_UNITS_TEXT_COLOR_INC;
                  text {
                     font: "SLP:style=Medium";
                     size: SLIDER_UNITS_TEXT_SIZE_INC;
                     min: 0 0;
                     align: 0.0 0.5;
                     text_class: "slp_medium";
                  }
               }
               description { state: "visible" 0.0;
                  inherit: "default" 0.0;
                  visible: 1;
                  text.min: 1 1;
                  rel1.offset: 0 4;
                  rel2.offset: 0 -5;
               }
            }
            part { name: "elm.swallow.end";
               type: SWALLOW;
               scale: 1;
               description { state: "default" 0.0;
                  visible: 0;
                  align: 1.0 0.5;
                  rel1 {
                     relative: 1.0 0.0;
                     to_y: "elm.swallow.bar";
                  }
                  rel2 {
                     relative: 1.0 1.0;
                     to_y: "elm.swallow.bar";
                  }
               }
               description { state: "visible" 0.0;
                  inherit: "default" 0.0;
                  visible: 1;
                  aspect: 1.0 1.0;
                  aspect_preference: VERTICAL;
               }
            }
            part { name: "units";
               mouse_events: 0;
               scale: 1;
               description { state: "default" 0.0;
                  visible: 0;
                  rel1 {
                     to_x: "elm.units";
                     offset: 0 5;
                  }
                  image {
   //                  normal: "sl_units.png";
                     border: 0 5 3 8;
                     border_scale: 1;
                  }
               }
               description { state: "visible" 0.0;
                  inherit: "default" 0.0;
                  visible: 1;
               }
            }
            part { name: "elm.units";
               type: TEXT;
               mouse_events: 0;
               scale: 1;
               description { state: "default" 0.0;
                  visible: 0;
                  fixed: 1 1;
                  align: 1.0 0.5;
                  rel1.relative: 0.0 0.0;
                  rel1.offset: 0 8;
                  rel1.to_x: "elm.swallow.end";
                  rel2.relative: 0.0 1.0;
                  rel2.offset: 0 -9;
                  rel2.to_x: "elm.swallow.end";
                  color: SLIDER_UNITS_TEXT_COLOR_INC;
                  text {
                     font: "SLP:style=Bold";
                     size: SLIDER_UNITS_TEXT_SIZE_INC;
                     min: 0 0;
                     align: 0.0 0.5;
                     text_class: "slp_bold";
                  }
               }
               description { state: "visible" 0.0;
                  inherit: "default" 0.0;
                  fixed: 1 1;
                  visible: 1;
                  text.min: 1 1;
                  rel1.offset: -5 0;
                  rel2.offset: -5 -1;
               }
            }
            part { name: "elm.dragable.slider";
               type: GROUP;
               source: "elm/slider/horizontal/indicator/tap_to_drag";
               mouse_events: 1;
               scale: 1;
               dragable {
                  x: 1 1 0;
                  y: 0 0 0;
                  confine: "bg";
               }
               description { state: "default" 0.0;
                  min: SLIDER_INDICATOR_WIDTH_INC SLIDER_INDICATOR_HEIGHT_INC;
                  fixed: 1 1;
                  rel1 {
                     relative: 0.5 0.0;
                     to_x: "bg";
                  }
                  rel2 {
                     relative: 0.5 1.0;
                     to_x: "bg";
                  }
                  color: 0 0 0 0;
               }
            }
            part { name: "disabler";
               type: RECT;
               mouse_events: 1;
               repeat_events: 0;
               scale: 1;
               description { state: "default" 0.0;
                  visible: 0;
                  min: 1 1;
                  color: 0 0 0 0;
               }
               description { state: "disabled" 0.0;
                  inherit: "default" 0.0;
                  visible: 1;
               }
            }
            part { name: "clipper";
               type: RECT;
               description { state: "default" 0.0;
                  color: 255 255 255 255;
               }
               description { state: "disabled" 0.0;
                  color: 255 255 255 102;
               }
            }
         }
         programs {
            program { name: "text_show";
            signal: "elm,state,text,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.text";
         }
         program { name: "text_hide";
            signal: "elm,state,text,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.text";
         }
         program { name: "icon_show";
            signal: "elm,state,icon,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.swallow.icon";
         }
         program { name: "icon_hide";
            signal: "elm,state,icon,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.swallow.icon";
         }
         program { name: "end_show";
            signal: "elm,state,end,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.swallow.end";
         }
         program { name: "end_hide";
            signal: "elm,state,end,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.swallow.end";
         }
         program { name: "units_show";
            signal: "elm,state,units,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.units";
            target: "units";
         }
         program { name: "units_hide";
            signal: "elm,state,units,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.units";
            target: "units";
         }
         program { name: "invert_on";
            signal: "elm,state,inverted,on";
            source: "elm";
            script {
               set_invert_on();
            }
         }
         program { name: "invert_off";
            signal: "elm,state,inverted,off";
            source: "elm";
            script {
               set_invert_off();
            }
         }
         program { name: "val_show";
            signal: "mouse,down,*";
            source: "elm.dragable.slider";
            script {
               thumb_down();
            }
         }
         program { name: "val_hide";
            signal: "mouse,up,*";
            source: "elm.dragable.slider";
            script {
               thumb_up();
            }
         }
         program { name: "slider_disable";
            signal: "elm,state,disabled";
            source: "elm";
            action:  STATE_SET "disabled" 0.0;
            target: "disabler";
            target: "clipper";
         }
         program { name: "slider_enable";
            signal: "elm,state,enabled";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "disabler";
            target: "clipper";
         }
      }
   }

   group { name: "elm/slider/horizontal/indicator/default";
           alias: "elm/slider/horizontal/indicator/disabled";
           alias: "elm/slider/vertical/indicator/default";
           alias: "elm/slider/vertical/indicator/disabled";
           alias: "elm/slider/horizontal/indicator/tap_to_drag";
      images {
         image: "00_slider_handle.png" COMP;
         image: "00_slider_handle_dim.png" COMP;
      }
      parts {
         part { name: "button_events";
            type: RECT;
            mouse_events: 1;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               min: 2*SLIDER_INDICATOR_WIDTH_INC 1.5*SLIDER_INDICATOR_HEIGHT_INC;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               color: 0 0 0 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
         }
         part { name: "button0";
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               min: SLIDER_INDICATOR_WIDTH_INC SLIDER_INDICATOR_HEIGHT_INC;
               max: SLIDER_INDICATOR_MAX_WIDTH_INC SLIDER_INDICATOR_HEIGHT_INC;
               rel1 {
                  to: "elm.indicator";
                  offset: -2 -2;
               }
               rel2 {
                  to: "elm.indicator";
                  offset: 2 2;
               }
               image {
                  normal: "00_slider_handle.png";
                  border: 3 3 3 3;
                  border_scale: 1;
               }
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               image {
                  normal: "00_slider_handle_dim.png";
               }
            }
         }
         part { name: "elm.indicator";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               visible: 1;
               color: SLIDER_INDICATOR_TEXT_COLOR_INC;
               text {
                  font: "SLP:style=Medium";
                  size: SLIDER_INDICATOR_TEXT_SIZE_INC;
                  min: 1 1;
                  align: 0.5 0.5;
                  text_class: "slp_medium";
               }
            }
            description { state: "hide" 0.0;
               inherit: "default" 0.0;
               visible: 0;
             }
         }
      }
      programs {
         program { name: "set_val_show";
            signal: "elm,state,val,show";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.indicator";
         }
         program { name: "set_val_hide";
            signal: "elm,state,val,hide";
            source: "elm";
            action:  STATE_SET "hide" 0.0;
            target: "elm.indicator";
         }
         program { name: "slider_disable";
            signal: "elm,state,disabled";
            source: "elm";
            action:  STATE_SET "disabled" 0.0;
            target: "button0";
            target: "button_events";
         }
         program { name: "slider_enable";
            signal: "elm,state,enabled";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "button0";
            target: "button_events";
         }
      }
   }


   group { name: "elm/slider/horizontal/volume";
      images {
         image: "00_volume_bg.png" COMP;
         image: "00_volume_01.png" COMP;
         image: "00_volume_02.png" COMP;
         image: "00_volume_03.png" COMP;
         image: "00_volume_04.png" COMP;
         image: "00_volume_05.png" COMP;
         image: "00_volume_06.png" COMP;
         image: "00_volume_07.png" COMP;
         image: "00_volume_08.png" COMP;
         image: "00_volume_09.png" COMP;
         image: "00_volume_10.png" COMP;
         image: "00_volume_11.png" COMP;
         image: "00_volume_12.png" COMP;
         image: "00_volume_13.png" COMP;
         image: "00_volume_14.png" COMP;
      }
      script {
         public volume_state_change(){
         new Float:x, Float:y;
         get_drag(PART:"elm.dragable.slider", x, y);
         if(x < 0.0333333)
            set_state(PART:"base", "default", 0.0);
         else if(x < 0.1)
            set_state(PART:"base", "volume_01", 0.0);
         else if(x < 0.1666666)
            set_state(PART:"base", "volume_02", 0.0);
         else if(x < 0.2333333)
            set_state(PART:"base", "volume_03", 0.0);
         else if(x < 0.3)
            set_state(PART:"base", "volume_04", 0.0);
         else if(x < 0.3666666)
            set_state(PART:"base", "volume_05", 0.0);
         else if(x < 0.4333333)
            set_state(PART:"base", "volume_06", 0.0);
         else if(x < 0.5)
            set_state(PART:"base", "volume_07", 0.0);
         else if(x < 0.5666666)
            set_state(PART:"base", "volume_08", 0.0);
         else if(x < 0.6333333)
            set_state(PART:"base", "volume_09", 0.0);
         else if(x < 0.7)
            set_state(PART:"base", "volume_10", 0.0);
         else if(x < 0.7666666)
            set_state(PART:"base", "volume_11", 0.0);
         else if(x < 0.8333333)
            set_state(PART:"base", "volume_12", 0.0);
         else if(x < 0.9)
            set_state(PART:"base", "volume_13", 0.0);
         else
            set_state(PART:"base", "volume_14", 0.0);
         }
      }
      parts {
         part { name: "base";
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               max: 99999 62;
               min: 0 62;
               rel1 { to: "bg";
                  offset: 0 0;
               }
               rel2 { to: "bg";
                  offset: -1 -1;
               }
               image.normal: "00_volume_bg.png";
            }
#define SLIDER_BG_PART(part_number)\
            description {\
               state: "volume_"part_number 0.0; \
               inherit: "default" 0.0; \
               image.normal: "00_volume_"part_number".png"; \
            }
            SLIDER_BG_PART(01)
            SLIDER_BG_PART(02)
            SLIDER_BG_PART(03)
            SLIDER_BG_PART(04)
            SLIDER_BG_PART(05)
            SLIDER_BG_PART(06)
            SLIDER_BG_PART(07)
            SLIDER_BG_PART(08)
            SLIDER_BG_PART(09)
            SLIDER_BG_PART(10)
            SLIDER_BG_PART(11)
            SLIDER_BG_PART(12)
            SLIDER_BG_PART(13)
            SLIDER_BG_PART(14)
         }
         part { name: "bg";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               rel1.to: "elm.swallow.bar";
               rel2.to: "elm.swallow.bar";
               rel2.offset: 0 0;
            }
         }
         part { name: "elm.swallow.bar";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               min: 48 62;
               max: 99999 62;
               align: 1.0 0.5;
               rel1 {
                  to_x: "bar_left_padding";
                  relative: 1.0 0.0;
               }
               rel2 {
                  to_x: "bar_right_padding";
                  relative: 0.0 1.0;
               }
            }
         }
         part {
            name: "bar_left_padding";
            type: SWALLOW;
            scale: 1;
            description {
               state: "default" 0.0;
               visible: 0;
               min: 10 0;
               fixed: 1 1;
               rel1 {
                  relative: 1.0  0.5;
                  to_x: "elm.text";
               }
               rel2 {
                  relative: 1.0  0.5;
                  to_x: "elm.text";
               }
               align: 0.0 0.5;
            }
         }
         part {
            name: "bar_right_padding";
            type: SWALLOW;
            scale: 1;
            description {
               state: "default" 0.0;
               visible: 0;
               min: 10 0;
               fixed: 1 1;
               rel1 {
                  relative: 0.0  0.5;
                  to_x: "elm.units";
               }
               rel2 {
                  relative: 0.0  0.5;
                  to_x: "elm.units";
               }
               align: 1.0 0.5;
            }
         }
         part { name: "elm.swallow.icon";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               align: 0.0 0.5;
               rel1 {
                  to_y: "elm.swallow.bar";
               }
               rel2 {
                  relative: 0.0 1.0;
                  to_y: "elm.swallow.bar";
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
            }
         }
         part { name: "elm.text";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               fixed: 1 1;
               align: 0.0 0.5;
               rel1.to_x: "elm.swallow.icon";
               rel1.relative: 1.0 0.0;
               rel1.offset: -1 4;
               rel2.to_x: "elm.swallow.icon";
               rel2.relative: 1.0 1.0;
               rel2.offset: -1 -5;
               color: 164 160 149 255;
               text {
                  font: "SLP:style=Bold";
                  size: 18;
                  min: 0 0;
                  align: 0.0 0.5;
                  text_class: "slp_bold";
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               text.min: 1 1;
               rel1.offset: 0 4;
               rel2.offset: 0 -5;
            }
         }
         part { name: "elm.swallow.end";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               align: 1.0 0.5;
               rel1 {
                  relative: 1.0 0.0;
                  to_y: "elm.swallow.bar";
               }
               rel2 {
                  relative: 1.0 1.0;
                  to_y: "elm.swallow.bar";
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
            }
         }
         part { name: "units";
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               rel1 {
                  to_x: "elm.units";
                  offset: 0 5;
               }
               image {
   //              normal: "sl_units.png";
                  border: 0 5 3 8;
                  border_scale: 1;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "elm.units";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               fixed: 1 1;
               align: 1.0 0.5;
               rel1.relative: 0.0 0.0;
               rel1.offset: 0 8;
               rel1.to_x: "elm.swallow.end";
               rel2.relative: 0.0 1.0;
               rel2.offset: 0 -9;
               rel2.to_x: "elm.swallow.end";
               color: 164 160 149 255;
               text {
                  font: "SLP:style=Bold";
                  size: 18;
                  min: 0 0;
                  align: 0.0 0.5;
                  text_class: "slp_bold";
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               fixed: 1 1;
               visible: 1;
               text.min: 1 1;
               rel1.offset: -5 0;
               rel2.offset: -5 -1;
            }
         }
         part { name: "elm.dragable.slider";
            type: RECT;
            mouse_events: 1;
            scale: 1;
            dragable {
               x: 1 1 0;
               y: 0 0 0;
               confine: "bg";
            }
            description { state: "default" 0.0;
               min: 4 62;
               fixed: 1 1;
               rel1 {
                  relative: 0.5 0.0;
                  to_x: "bg";
               }
               rel2 {
                  relative: 0.5 1.0;
                  to_x: "bg";
               }
               color: 0 0 0 0;
            }
         }
      }
      programs {
         program { name: "text_show";
            signal: "elm,state,text,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.text";
         }
         program { name: "text_hide";
            signal: "elm,state,text,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.text";
         }
         program { name: "icon_show";
            signal: "elm,state,icon,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.swallow.icon";
         }
         program { name: "icon_hide";
            signal: "elm,state,icon,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.swallow.icon";
         }
         program { name: "end_show";
            signal: "elm,state,end,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.swallow.end";
         }
         program { name: "end_hide";
            signal: "elm,state,end,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.swallow.end";
         }
         program { name: "units_show";
            signal: "elm,state,units,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.units";
            target: "units";
         }
         program { name: "units_hide";
            signal: "elm,state,units,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.units";
            target: "units";
         }
         program { name: "volume_state_change";
            signal: "elm,state,drag";
            source: "elm";
            script {
               volume_state_change()
            }
         }
      }
   }

   group { name: "elm/slider/vertical/volume";
      images {
         image: "00_volume_00_ver.png" COMP;
         image: "00_volume_01_ver.png" COMP;
         image: "00_volume_02_ver.png" COMP;
         image: "00_volume_03_ver.png" COMP;
         image: "00_volume_04_ver.png" COMP;
         image: "00_volume_05_ver.png" COMP;
         image: "00_volume_06_ver.png" COMP;
         image: "00_volume_07_ver.png" COMP;
         image: "00_volume_08_ver.png" COMP;
         image: "00_volume_09_ver.png" COMP;
         image: "00_volume_10_ver.png" COMP;
         image: "00_volume_11_ver.png" COMP;
         image: "00_volume_12_ver.png" COMP;
         image: "00_volume_13_ver.png" COMP;
         image: "00_volume_14_ver.png" COMP;
      }
      script {
         public volume_state_change(){
            new Float:x, Float:y;
            get_drag(PART:"elm.dragable.slider", x, y);
            if(y <= 0.1)
               set_state(PART:"base", "volume_14", 0.0);
            else if(y <= 0.1666666)
               set_state(PART:"base", "volume_13", 0.0);
            else if(y <= 0.2333333)
               set_state(PART:"base", "volume_12", 0.0);
            else if(y <= 0.3)
               set_state(PART:"base", "volume_11", 0.0);
            else if(y <= 0.3666666)
               set_state(PART:"base", "volume_10", 0.0);
            else if(y <= 0.4333333)
               set_state(PART:"base", "volume_09", 0.0);
            else if(y <= 0.5)
               set_state(PART:"base", "volume_08", 0.0);
            else if(y <= 0.5666666)
               set_state(PART:"base", "volume_07", 0.0);
            else if(y <= 0.6333333)
               set_state(PART:"base", "volume_06", 0.0);
            else if(y <= 0.7)
               set_state(PART:"base", "volume_05", 0.0);
            else if(y <= 0.7666666)
               set_state(PART:"base", "volume_04", 0.0);
            else if(y <= 0.8333333)
               set_state(PART:"base", "volume_03", 0.0);
            else if(y <= 0.9)
               set_state(PART:"base", "volume_02", 0.0);
            else if(y <= 0.9666666)
               set_state(PART:"base", "volume_01", 0.0);
            else
               set_state(PART:"base", "default", 0.0);
         }
      }
      parts {
         part { name: "base";
            scale: 1;
            description { state: "default" 0.0;
               max: 126 999999;
               min: 126 0;
               fixed: 1 1;
               rel1 { to: "bg";
                  offset: 0 0;
               }
               rel2 { to: "bg";
                  offset: -1 -1;
               }
               image.normal: "00_volume_00_ver.png";
            }
#define SLIDER_VER_BG_PART(part_number)\
            description {\
               state: "volume_"part_number 0.0; \
               inherit: "default" 0.0; \
               image.normal: "00_volume_"part_number"_ver.png"; \
            }
            SLIDER_VER_BG_PART(01)
            SLIDER_VER_BG_PART(02)
            SLIDER_VER_BG_PART(03)
            SLIDER_VER_BG_PART(04)
            SLIDER_VER_BG_PART(05)
            SLIDER_VER_BG_PART(06)
            SLIDER_VER_BG_PART(07)
            SLIDER_VER_BG_PART(08)
            SLIDER_VER_BG_PART(09)
            SLIDER_VER_BG_PART(10)
            SLIDER_VER_BG_PART(11)
            SLIDER_VER_BG_PART(12)
            SLIDER_VER_BG_PART(13)
            SLIDER_VER_BG_PART(14)
            }
         part { name: "bg";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               rel1.to: "elm.swallow.bar";
               rel2.to: "elm.swallow.bar";
               rel2.offset: 0 0;
            }
         }
         part { name: "elm.swallow.bar";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               min: 126 48;
               max: 126 99999;
               align: 0.5 1.0;
               rel1 {
                  to_y: "bar_top_padding";
                  relative: 0.0 1.0;
               }
               rel2 {
                  to_y: "bar_bottom_padding";
                  relative: 1.0 0.0;
               }
            }
         }
         part {
            name: "bar_top_padding";
            type: SWALLOW;
            scale: 1;
            description {
               state: "default" 0.0;
               visible: 0;
            //   min: 0 10;
               fixed: 1 1;
               rel1 {
                  relative: 0.5 1.0;
                  to_y: "elm.text";
               }
               rel2 {
                  relative: 0.5 1.0;
                  to_y: "elm.text";
               }
               align: 0.5 0.0;
            }
         }
         part {
            name: "bar_bottom_padding";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               visible: 0;
            //   min: 0 10;
               fixed: 1 1;
               rel1 {
                  relative: 0.5 0.0;
                  to_y: "elm.units";
               }
               rel2 {
                  relative: 0.5 0.0;
                  to_y: "elm.units";
               }
               align: 0.5 1.0;
            }
         }
         part { name: "elm.swallow.icon";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               align: 0.5 0.0;
               rel1 {
                  to_x: "elm.swallow.bar";
               }
               rel2 {
                  relative: 1.0 0.0;
                  to_x: "elm.swallow.bar";
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               aspect: 1.0 1.0;
               aspect_preference: HORIZONTAL;
            }
         }
         part { name: "elm.text";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               fixed: 1 1;
               align: 0.5 0.0;
               rel1.to_y: "elm.swallow.icon";
               rel1.relative: 0.0 1.0;
               rel2.to_y: "elm.swallow.icon";
               rel2.relative: 1.0 1.0;
               color: 164 160 149 255;
               text {
                  font: "SLP:style=Bold";
                  size: 18;
                  min: 0 0;
                  align: 0.5 0;
                  text_class: "slp_bold";
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               text.min: 1 1;
            }
         }
         part { name: "elm.swallow.end";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               align: 0.5 1.0;
               rel1 {
                  relative: 0.0 1.0;
                  to_x: "elm.swallow.bar";
               }
               rel2 {
                  relative: 1.0 1.0;
                  to_x: "elm.swallow.bar";
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               aspect: 1.0 1.0;
                aspect_preference: HORIZONTAL;
            }
         }
         part { name: "units";
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               rel1 {
                  to_y: "elm.units";
               }
            }
             description { state: "visible" 0.0;
                inherit: "default" 0.0;
                visible: 1;
            }
         }
         part { name: "elm.units";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               fixed: 1 1;
               align: 0.5 1.0;
               rel1.relative: 0.0 0.0;
               rel1.to_y: "elm.swallow.end";
               rel2.relative: 1.0 0.0;
               rel2.to_y: "elm.swallow.end";
               color: 164 160 149 255;
               text {
                  font: "SLP:style=Bold";
                  size: 18;
                  min: 0 0;
                  align: 0.5 0.0;
                  text_class: "slp_bold";
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               fixed: 1 1;
               visible: 1;
               text.min: 1 1;
               rel1.offset: -5 0;
               rel2.offset: -5 -1;
            }
         }
         part { name: "elm.dragable.slider";
            type: RECT;
            mouse_events: 1;
            scale: 1;
            dragable {
               x: 0 0 0;
               y: 1 1 0;
               confine: "bg";
            }
            description { state: "default" 0.0;
               min: 126 5;
               fixed: 1 1;
               rel1 {
                  relative: 0.0 0.5;
                  to_x: "bg";
               }
               rel2 {
                  relative: 1.0 0.5;
                  to_x: "bg";
               }
               color: 0 0 0 0;
            }
         }
      }
      programs {
         program { name: "text_show";
            signal: "elm,state,text,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.text";
         }
         program { name: "text_hide";
            signal: "elm,state,text,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.text";
         }
         program { name: "icon_show";
            signal: "elm,state,icon,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.swallow.icon";
         }
         program { name: "icon_hide";
            signal: "elm,state,icon,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.swallow.icon";
         }
          program { name: "end_show";
            signal: "elm,state,end,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.swallow.end";
         }
         program { name: "end_hide";
            signal: "elm,state,end,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.swallow.end";
         }
         program { name: "units_show";
            signal: "elm,state,units,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.units";
            target: "units";
         }
         program { name: "units_hide";
            signal: "elm,state,units,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.units";
            target: "units";
         }
         program { name: "volume_state_change";
            signal: "elm,state,drag";
            source: "elm";
            script {
               volume_state_change()
            }
         }
      }
   }

   group { name: "elm/slider/horizontal/ebook";
      images {
         image: "00_winset_list_progress_bg.png" COMP;
         image: "00_winset_list_progress_bar.png" COMP;
         image: "00_winset_list_progress_bar_pressed.png" COMP;
         image: "00_ebook_slider_handle.png" COMP;
         image: "00_ebook_slider_handle_press.png" COMP;
      }
      script    {
         public value_hide = 0;
         public invert_on = 0;
         public set_value_show() {
            set_int(value_hide, 0);
            set_state(PART:"elm.indicator", "default", 0.0);
         }
         public set_value_hide() {
            set_int(value_hide, 1);
            set_state(PART:"elm.indicator", "hide", 0.0);
         }
         public set_invert_on() {
            set_state(PART:"level", "inverted", 0.0);
            set_state(PART:"level2", "inverted", 0.0);
            set_int(invert_on, 1);
         }
         public set_invert_off() {
            set_state(PART:"level", "default", 0.0);
            set_state(PART:"level2", "default", 0.0);
            set_int(invert_on, 0);
         }
         public thumb_down() {
            if(get_int(value_hide) == 1) {
               set_state(PART:"elm.indicator", "hide", 0.0);
               set_state(PART:"button0", "visible", 0.0);
            } else {
               set_state(PART:"elm.indicator", "visible", 0.0);
               set_state(PART:"button0", "visible", 0.0);
            }
            if(get_int(invert_on) == 0)
               set_state(PART:"level", "pressed", 0.0);
            else if(get_int(invert_on) == 1)
               set_state(PART:"level2", "pressed", 0.0);
            }
         public thumb_up() {
            if(get_int(value_hide) == 1)
               set_state(PART:"elm.indicator", "hide", 0.0);
            else
               set_state(PART:"elm.indicator", "default", 0.0);
            if(get_int(invert_on) == 0)
               set_state(PART:"level", "default", 0.0);
            else if(get_int(invert_on) == 1)
               set_state(PART:"level2", "inverted", 0.0);
            set_state(PART:"button0", "default", 0.0);
         }
      }
      parts {
         part { name: "base";
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               max: 99999 SLIDER_EBOOK_HEIGHT_INC;
               min: 0 SLIDER_EBOOK_HEIGHT_INC;
               rel1 { to: "bg";
                  offset: 11 0;
               }
               rel2 { to: "bg";
                  offset: -15 -1;
               }
               image.normal: "00_winset_list_progress_bg.png";
               image.border: 0 0 4 4;
               image.border_scale: 1;
            }
         }
         part { name: "level";
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               rel1.to: "base";
               rel2 {
                  to_y: "base";
                  to_x: "elm.dragable.slider";
                  offset: -5 -1;
                  relative: 0.5 1.0;
               }
               image.normal: "00_winset_list_progress_bar.png";
               image.border: 0 0 4 4;
               image.border_scale: 1;
            }
            description { state: "inverted" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
             description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               image.normal: "00_winset_list_progress_bar_pressed.png";
               image.border: 0 0 4 4;
               image.border_scale: 1;
            }
         }
         part { name: "level2";
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               visible: 0;
               rel1 {
                  to_y: "base";
                  to_x: "elm.dragable.slider";
                  relative: 0.5 0.0;
               }
               rel2.to: "base";
               rel2.offset: -2 -1;
               image.normal: "00_winset_list_progress_bar.png";
               image.border: 0 0 4 4;
               image.border_scale: 1;
            }
            description { state: "inverted" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               image.normal: "00_winset_list_progress_bar_pressed.png";
               image.border: 0 0 4 4;
               image.border_scale: 1;
            }
         }
         part { name: "bg";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               rel1.to: "elm.swallow.bar";
               rel2.to: "elm.swallow.bar";
               rel2.offset: 3 0;
               color: 0 0 0 0;
            }
         }
         part { name: "elm.swallow.bar";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               min: 48 48;
               max: 99999 48;
               align: 1.0 0.5;
               rel1 {
                  to_x: "bar_left_padding";
                  relative: 1.0 0.0;
               //   offset: 2 0;
               }
               rel2 {
                  to_x: "bar_right_padding";
                  relative: 0.0 1.0;
               //   offset: -3 -1;
               }
            }
         }
         part {
            name: "bar_left_padding";
            type: SWALLOW;
            scale: 1;
            description {
               state: "default" 0.0;
               visible: 0;
               min: 10 0;
               fixed: 1 1;
               rel1 {
                  relative: 1.0  0.5;
                  to_x: "elm.text";
               }
               rel2 {
                  relative: 1.0  0.5;
                  to_x: "elm.text";
               }
               align: 0.0 0.5;
            }
         }
         part {
            name: "bar_right_padding";
            type: SWALLOW;
            scale: 1;
            description {
               state: "default" 0.0;
               visible: 0;
               min: 10 0;
               fixed: 1 1;
               rel1 {
                  relative: 0.0  0.5;
                  to_x: "elm.units";
               }
               rel2 {
                  relative: 0.0  0.5;
                  to_x: "elm.units";
               }
               align: 1.0 0.5;
            }
         }
         part { name: "elm.swallow.icon";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               align: 0.0 0.5;
               rel1 {
                  to_y: "elm.swallow.bar";
               }
               rel2 {
                  relative: 0.0 1.0;
                  to_y: "elm.swallow.bar";
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
            }
         }
         part { name: "elm.text";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               fixed: 1 1;
               align: 0.0 0.5;
               rel1.to_x: "elm.swallow.icon";
               rel1.relative: 1.0 0.0;
               rel1.offset: -1 4;
               rel2.to_x: "elm.swallow.icon";
               rel2.relative: 1.0 1.0;
               rel2.offset: -1 -5;
               color: SLIDER_EBOOK_UNITS_TEXT_COLOR_INC;
               text {
                  font: "SLP:style=Bold";
                  size: SLIDER_EBOOK_UNITS_TEXT_SIZE_INC;
                  min: 0 0;
                  align: 0.0 0.5;
                  text_class: "slp_bold";
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               text.min: 1 1;
               rel1.offset: 0 4;
               rel2.offset: 0 -5;
            }
         }
         part { name: "elm.swallow.end";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               align: 1.0 0.5;
               rel1 {
                  relative: 1.0 0.0;
                  to_y: "elm.swallow.bar";
               }
               rel2 {
                  relative: 1.0 1.0;
                  to_y: "elm.swallow.bar";
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
            }
         }
         part { name: "units";
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               rel1 {
                  to_x: "elm.units";
                  offset: 0 5;
               }
               image {
//                  normal: "sl_units.png";
                  border: 0 5 3 8;
                  border_scale: 1;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "elm.units";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               fixed: 1 1;
               align: 1.0 0.5;
               rel1.relative: 0.0 0.0;
               rel1.offset: 0 8;
               rel1.to_x: "elm.swallow.end";
               rel2.relative: 0.0 1.0;
               rel2.offset: 0 -9;
               rel2.to_x: "elm.swallow.end";
               color: SLIDER_EBOOK_UNITS_TEXT_COLOR_INC;
               text {
                  font: "SLP:style=Bold";
                  size: SLIDER_EBOOK_UNITS_TEXT_SIZE_INC;
                  min: 0 0;
                  align: 0.0 0.5;
                  text_class: "slp_bold";
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               fixed: 1 1;
               visible: 1;
               text.min: 1 1;
               rel1.offset: -5 0;
               rel2.offset: -5 -1;
            }
         }
         part { name: "elm.dragable.slider";
            type: RECT;
            mouse_events: 1;
            scale: 1;
            dragable {
               x: 1 1 0;
               y: 0 0 0;
               confine: "bg";
            }
            description { state: "default" 0.0;
               min: SLIDER_EBOOK_INDICATOR_WIDTH_INC SLIDER_EBOOK_INDICATOR_HEIGHT_INC;
               fixed: 1 1;
               rel1 {
                  relative: 0.5 0.0;
                  to_x: "bg";
               }
               rel2 {
                  relative: 0.5 1.0;
                  to_x: "bg";
               }
               color: 0 0 0 0;
            }
         }
         part { name: "button0";
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               min: SLIDER_EBOOK_INDICATOR_WIDTH_INC SLIDER_EBOOK_INDICATOR_HEIGHT_INC;
               max: SLIDER_EBOOK_INDICATOR_WIDTH_INC SLIDER_EBOOK_INDICATOR_HEIGHT_INC;
               rel1.to: "elm.dragable.slider";
               rel2.to: "elm.dragable.slider";
               image {
                  normal: "00_ebook_slider_handle.png";
                  border: 12 12 12 12;
                  border_scale: 1;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               image {
                  normal: "00_ebook_slider_handle_press.png";
               }
            }
         }
         part { name: "popup";
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               rel1 {
                  to: "button0";
                  relative: 0.0 0.0;
                  offset: -20 -92;
               }
               rel2 {
                  to: "button0";
                  relative: 1.0 0.0;
                  offset: 22 0;
               }
               image {
            //      normal: "00_slider_popup_bg.png";
                  border: 13 21 10 22;
                    border_scale: 1;
               }
               visible: 0;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "elm.indicator";
            type: TEXT;
            mouse_events: 0;
//            effect: SOFT_SHADOW;
            scale: 1;
            description { state: "default" 0.0;
               visible: 1;
               fixed: 1 1;
               align: 0.5 0.5;
               rel1 {
                  to: "button0";
                  relative: 0.0 0;
                  offset: 0 0;
               }
               rel2 {
                  to: "button0";
                  relative: 1.0 1.0;
                  offset: -2 -2;
               }
               color: SLIDER_EBOOK_INDICATOR_TEXT_COLOR_INC;
               color3: 0 0 0 64;
               text {
                  font:     "SLP:style=Bold";
                  size:     SLIDER_EBOOK_INDICATOR_DEFAULT_TEXT_SIZE_INC;
                  min:      1 1;
                  align:    0.5 0.5;
                  text_class: "slp_bold";
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: SLIDER_EBOOK_INDICATOR_TEXT_COLOR_INC;
               text.size: SLIDER_EBOOK_INDICATOR_DRAG_TEXT_SIZE_INC;
               rel1.to: "popup";
               rel2 {
                  to: "popup";
                  offset: -2 -10;
               }
            }
            description { state: "hide" 0.0;
               inherit: "default" 0.0;
               visible: 0;
             }
         }
      }
      programs {
         program { name: "text_show";
            signal: "elm,state,text,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.text";
         }
         program { name: "text_hide";
            signal: "elm,state,text,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.text";
         }
         program { name: "icon_show";
            signal: "elm,state,icon,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.swallow.icon";
         }
         program { name: "icon_hide";
            signal: "elm,state,icon,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.swallow.icon";
         }
         program { name: "end_show";
            signal: "elm,state,end,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.swallow.end";
         }
         program { name: "end_hide";
            signal: "elm,state,end,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.swallow.end";
         }
         program { name: "units_show";
            signal: "elm,state,units,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.units";
            target: "units";
         }
         program { name: "units_hide";
            signal: "elm,state,units,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.units";
            target: "units";
         }
         program { name: "invert_on";
            signal: "elm,state,inverted,on";
            source: "elm";
            script {
               set_invert_on();
            }
         }
         program { name: "invert_off";
            signal: "elm,state,inverted,off";
            source: "elm";
            script {
               set_invert_off();
            }
         }
         program { name: "set_val_show";
            signal: "elm,state,val,show";
            source: "elm";
            script {
               set_value_show();
            }
         }
         program { name: "set_val_hide";
            signal: "elm,state,val,hide";
            source: "elm";
            script {
               set_value_hide();
            }
         }
         program { name: "val_show";
            signal: "mouse,down,*";
            source: "elm.dragable.slider";
            script {
               thumb_down();
            }
         }
         program { name: "val_hide";
            signal: "mouse,up,*";
            source: "elm.dragable.slider";
            script {
               thumb_up();
            }
         }
      }
   }
   
   group { name: "elm/slider/vertical/volume7";
      images {
         image: "00_volume7_00_ver.png" COMP;
         image: "00_volume7_01_ver.png" COMP;
         image: "00_volume7_02_ver.png" COMP;
         image: "00_volume7_03_ver.png" COMP;
         image: "00_volume7_04_ver.png" COMP;
         image: "00_volume7_05_ver.png" COMP;
         image: "00_volume7_06_ver.png" COMP;
         image: "00_volume7_07_ver.png" COMP;
               }
      script {
         public volume_state_change(){
            new Float:x, Float:y;
            get_drag(PART:"elm.dragable.slider", x, y);
            if(y <= 0.1875)
               set_state(PART:"base", "volume_07", 0.0);
            else if(y <= 0.3125)
               set_state(PART:"base", "volume_06", 0.0);
            else if(y <= 0.4375)
               set_state(PART:"base", "volume_05", 0.0);
            else if(y <= 0.5625)
               set_state(PART:"base", "volume_04", 0.0);
            else if(y <= 0.6875)
               set_state(PART:"base", "volume_03", 0.0);
            else if(y <= 0.8125)
               set_state(PART:"base", "volume_02", 0.0);
            else if(y <= 0.9375)
               set_state(PART:"base", "volume_01", 0.0);
            else
               set_state(PART:"base", "default", 0.0);
         }
      }
      parts {
         part { name: "base";
         scale: 1;
         description { state: "default" 0.0;
            min: 175 0;
            max: 175 999999;
            fixed: 1 1;
            rel1 { to: "bg";
               offset: 0 0;
            }
            rel2 { to: "bg";
               offset: -1 -1;
            }
            image.normal: "00_volume7_00_ver.png";
         }
#define SLIDER7_VER_BG_PART(part_number)\
            description {\
               state: "volume_"part_number 0.0; \
               inherit: "default" 0.0; \
               image.normal: "00_volume7_"part_number"_ver.png"; \
            }
            SLIDER7_VER_BG_PART(01)
            SLIDER7_VER_BG_PART(02)
            SLIDER7_VER_BG_PART(03)
            SLIDER7_VER_BG_PART(04)
            SLIDER7_VER_BG_PART(05)
            SLIDER7_VER_BG_PART(06)
            SLIDER7_VER_BG_PART(07)
         }
         part { name: "bg";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               rel1.to: "elm.swallow.bar";
               rel2.to: "elm.swallow.bar";
               rel2.offset: 0 0;
            }
         }
         part { name: "elm.swallow.bar";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               min: 175 0;
               max: 175 99999;
               align: 0.5 1.0;
            }
         }
         part {
            name: "bar_top_padding";
            type: SWALLOW;
            scale: 1;
            description {
               state: "default" 0.0;
               visible: 0;
            //   min: 0 10;
               fixed: 1 1;
               rel1 {
                  relative: 0.5 1.0;
                  to_y: "elm.text";
               }
               rel2 {
                  relative: 0.5 1.0;
                  to_y: "elm.text";
               }
               align: 0.5 0.0;
            }
         }
         part {
            name: "bar_bottom_padding";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               visible: 0;
            //   min: 0 10;
               fixed: 1 1;
               rel1 {
                  relative: 0.5 0.0;
                  to_y: "elm.units";
               }
               rel2 {
                  relative: 0.5 0.0;
                  to_y: "elm.units";
               }
               align: 0.5 1.0;
            }
         }
         part { name: "elm.swallow.icon";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               align: 0.5 0.0;
               rel1 {
                  to_x: "elm.swallow.bar";
               }
               rel2 {
                  relative: 1.0 0.0;
                  to_x: "elm.swallow.bar";
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               aspect: 1.0 1.0;
               aspect_preference: HORIZONTAL;
            }
         }
         part { name: "elm.text";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               fixed: 1 1;
               align: 0.5 0.0;
               rel1.to_y: "elm.swallow.icon";
               rel1.relative: 0.0 1.0;
               rel2.to_y: "elm.swallow.icon";
               rel2.relative: 1.0 1.0;
               color: 164 160 149 255;
               text {
                  font: "SLP:style=Bold";
                  size: 18;
                  min: 0 0;
                  align: 0.5 0;
                  text_class: "slp_bold";
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               text.min: 1 1;
            }
         }
         part { name: "elm.swallow.end";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               align: 0.5 1.0;
               rel1 {
                  relative: 0.0 1.0;
                  to_x: "elm.swallow.bar";
               }
               rel2 {
                  relative: 1.0 1.0;
                  to_x: "elm.swallow.bar";
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               aspect: 1.0 1.0;
               aspect_preference: HORIZONTAL;
            }
         }
         part { name: "units";
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               rel1 {
                  to_y: "elm.units";
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "elm.units";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               fixed: 1 1;
               align: 0.5 1.0;
               rel1.relative: 0.0 0.0;
               rel1.to_y: "elm.swallow.end";
               rel2.relative: 1.0 0.0;
               rel2.to_y: "elm.swallow.end";
               color: 164 160 149 255;
               text {
                  font: "SLP:style=Bold";
                  size: 18;
                  min: 0 0;
                  align: 0.5 0.0;
                  text_class: "slp_bold";
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               fixed: 1 1;
               visible: 1;
               text.min: 1 1;
               rel1.offset: -5 0;
               rel2.offset: -5 -1;
            }
         }
         part { name: "elm.dragable.slider";
            type: RECT;
            mouse_events: 1;
            scale: 1;
            dragable {
               x: 0 0 0;
               y: 1 1 0;
               confine: "bg";
            }
            description { state: "default" 0.0;
               min: 175 5;
               fixed: 1 1;
               rel1 {
                  relative: 0.0 0.5;
                  to_x: "bg";
               }
               rel2 {
                  relative: 1.0 0.5;
                  to_x: "bg";
               }
               color: 0 0 0 0;
            }
         }
      }
      programs {
         program { name: "text_show";
            signal: "elm,state,text,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.text";
         }
         program { name: "text_hide";
            signal: "elm,state,text,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.text";
         }
         program { name: "icon_show";
            signal: "elm,state,icon,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.swallow.icon";
         }
         program { name: "icon_hide";
            signal: "elm,state,icon,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.swallow.icon";
         }
         program { name: "end_show";
            signal: "elm,state,end,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.swallow.end";
         }
         program { name: "end_hide";
            signal: "elm,state,end,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.swallow.end";
         }
         program { name: "units_show";
            signal: "elm,state,units,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.units";
            target: "units";
         }
         program { name: "units_hide";
            signal: "elm,state,units,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.units";
            target: "units";
         }
         program { name: "volume_state_change";
            signal: "elm,state,drag";
            source: "elm";
            script {
               volume_state_change()
            }
         }
      }
   }

   group { name: "elm/slider/vertical/volume15";
      images {
         image: "00_volume15_00_ver.png" COMP;
         image: "00_volume15_01_ver.png" COMP;
         image: "00_volume15_02_ver.png" COMP;
         image: "00_volume15_03_ver.png" COMP;
         image: "00_volume15_04_ver.png" COMP;
         image: "00_volume15_05_ver.png" COMP;
         image: "00_volume15_06_ver.png" COMP;
         image: "00_volume15_07_ver.png" COMP;
         image: "00_volume15_08_ver.png" COMP;
         image: "00_volume15_09_ver.png" COMP;
         image: "00_volume15_10_ver.png" COMP;
         image: "00_volume15_11_ver.png" COMP;
         image: "00_volume15_12_ver.png" COMP;
         image: "00_volume15_13_ver.png" COMP;
         image: "00_volume15_14_ver.png" COMP;
         image: "00_volume15_15_ver.png" COMP;
      }
      script {
         public volume_state_change(){
            new Float:x, Float:y;
            get_drag(PART:"elm.dragable.slider", x, y);
            if(y <= 0.09375)
               set_state(PART:"base", "volume_15", 0.0);
            else if(y <= 0.15625)
               set_state(PART:"base", "volume_14", 0.0);
                 else if(y <= 0.21875)
               set_state(PART:"base", "volume_13", 0.0);
            else if(y <= 0.28125)
               set_state(PART:"base", "volume_12", 0.0);
            else if(y <= 0.34375)
               set_state(PART:"base", "volume_11", 0.0);
            else if(y <= 0.40625)
               set_state(PART:"base", "volume_10", 0.0);
            else if(y <= 0.46875)
               set_state(PART:"base", "volume_09", 0.0);
            else if(y <= 0.53125)
               set_state(PART:"base", "volume_08", 0.0);
            else if(y <= 0.59375)
               set_state(PART:"base", "volume_07", 0.0);
            else if(y <= 0.65625)
               set_state(PART:"base", "volume_06", 0.0);
            else if(y <= 0.71875)
               set_state(PART:"base", "volume_05", 0.0);
            else if(y <= 0.78125)
               set_state(PART:"base", "volume_04", 0.0);
            else if(y <= 0.84375)
               set_state(PART:"base", "volume_03", 0.0);
            else if(y <= 0.90625)
               set_state(PART:"base", "volume_02", 0.0);
            else if(y <= 0.96875)
               set_state(PART:"base", "volume_01", 0.0);
            else
               set_state(PART:"base", "default", 0.0);
         }
      }
      parts {
         part { name: "base";
            scale: 1;
            description { state: "default" 0.0;
               max: 175 999999;
               min: 175 0;
               fixed: 1 1;
               rel1 { to: "bg";
                  offset: 0 0;
               }
               rel2 { to: "bg";
                  offset: -1 -1;
               }
               image.normal: "00_volume15_00_ver.png";
            }
#define SLIDER15_VER_BG_PART(part_number)\
            description {\
               state: "volume_"part_number 0.0; \
               inherit: "default" 0.0; \
               image.normal: "00_volume15_"part_number"_ver.png"; \
            }
            SLIDER15_VER_BG_PART(01)
            SLIDER15_VER_BG_PART(02)
            SLIDER15_VER_BG_PART(03)
            SLIDER15_VER_BG_PART(04)
            SLIDER15_VER_BG_PART(05)
            SLIDER15_VER_BG_PART(06)
            SLIDER15_VER_BG_PART(07)
            SLIDER15_VER_BG_PART(08)
            SLIDER15_VER_BG_PART(09)
            SLIDER15_VER_BG_PART(10)
            SLIDER15_VER_BG_PART(11)
            SLIDER15_VER_BG_PART(12)
            SLIDER15_VER_BG_PART(13)
            SLIDER15_VER_BG_PART(14)
            SLIDER15_VER_BG_PART(15)
         }
         part { name: "bg";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               rel1.to: "elm.swallow.bar";
               rel2.to: "elm.swallow.bar";
               rel2.offset: 0 0;
            }
         }
         part { name: "elm.swallow.bar";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               min: 175 0;
               max: 175 99999;
               align: 0.5 1.0;
            }
         }
         part { name: "bar_top_padding";
            type: SWALLOW;
            scale: 1;
            description {
               state: "default" 0.0;
               visible: 0;
            //   min: 0 10;
               fixed: 1 1;
               rel1 {
                  relative: 0.5 1.0;
                  to_y: "elm.text";
               }
               rel2 {
                  relative: 0.5 1.0;
                  to_y: "elm.text";
               }
               align: 0.5 0.0;
            }
         }
         part { name: "bar_bottom_padding";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               visible: 0;
            //   min: 0 10;
               fixed: 1 1;
               rel1 {
                  relative: 0.5 0.0;
                  to_y: "elm.units";
               }
               rel2 {
                  relative: 0.5 0.0;
                  to_y: "elm.units";
               }
               align: 0.5 1.0;
            }
         }
         part { name: "elm.swallow.icon";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               align: 0.5 0.0;
               rel1 {
                  to_x: "elm.swallow.bar";
               }
               rel2 {
                  relative: 1.0 0.0;
                  to_x: "elm.swallow.bar";
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               aspect: 1.0 1.0;
               aspect_preference: HORIZONTAL;
            }
         }
         part { name: "elm.text";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               fixed: 1 1;
               align: 0.5 0.0;
               rel1.to_y: "elm.swallow.icon";
               rel1.relative: 0.0 1.0;
               rel2.to_y: "elm.swallow.icon";
               rel2.relative: 1.0 1.0;
               color: 164 160 149 255;
               text {
                  font: "SLP:style=Bold";
                  size: 18;
                  min: 0 0;
                  align: 0.5 0;
                  text_class: "slp_bold";
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               text.min: 1 1;
            }
         }
         part { name: "elm.swallow.end";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               align: 0.5 1.0;
               rel1 {
                  relative: 0.0 1.0;
                  to_x: "elm.swallow.bar";
               }
               rel2 {
                  relative: 1.0 1.0;
                  to_x: "elm.swallow.bar";
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               aspect: 1.0 1.0;
               aspect_preference: HORIZONTAL;
            }
         }
         part { name: "units";
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               rel1 {
                  to_y: "elm.units";
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "elm.units";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               fixed: 1 1;
               align: 0.5 1.0;
               rel1.relative: 0.0 0.0;
               rel1.to_y: "elm.swallow.end";
               rel2.relative: 1.0 0.0;
               rel2.to_y: "elm.swallow.end";
               color: 164 160 149 255;
               text {
                  font: "SLP:style=Bold";
                  size: 18;
                  min: 0 0;
                  align: 0.5 0.0;
                  text_class: "slp_bold";
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               fixed: 1 1;
               visible: 1;
               text.min: 1 1;
               rel1.offset: -5 0;
               rel2.offset: -5 -1;
            }
         }
         part { name: "elm.dragable.slider";
            type: RECT;
            mouse_events: 1;
            scale: 1;
            dragable {
               x: 0 0 0;
               y: 1 1 0;
               confine: "bg";
            }
            description { state: "default" 0.0;
               min: 175 5;
               fixed: 1 1;
               rel1 {
                  relative: 0.0 0.5;
                  to_x: "bg";
               }
               rel2 {
                  relative: 1.0 0.5;
                  to_x: "bg";
               }
               color: 0 0 0 0;
            }
         }
       }
      programs {
         program { name: "text_show";
            signal: "elm,state,text,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.text";
         }
         program { name: "text_hide";
            signal: "elm,state,text,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.text";
         }
         program { name: "icon_show";
            signal: "elm,state,icon,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.swallow.icon";
         }
         program { name: "icon_hide";
            signal: "elm,state,icon,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.swallow.icon";
         }
         program { name: "end_show";
            signal: "elm,state,end,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.swallow.end";
         }
         program { name: "end_hide";
            signal: "elm,state,end,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.swallow.end";
         }
         program { name: "units_show";
            signal: "elm,state,units,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.units";
            target: "units";
         }
         program { name: "units_hide";
            signal: "elm,state,units,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.units";
            target: "units";
         }
         program { name: "volume_state_change";
            signal: "elm,state,drag";
            source: "elm";
            script {
               volume_state_change()
            }
         }
      }
   }

   group { name: "elm/slider/horizontal/default";
           alias: "elm/slider/horizontal/disabled";
      images {
         image: "00_winset_list_progress_bg.png" COMP;
         image: "00_winset_list_progress_bar.png" COMP;
         image: "00_slider_bar_press.png" COMP;
      }
      script {
         public invert_on = 0;
         public set_invert_on() {
            set_state(PART:"level", "inverted", 0.0);
            set_state(PART:"level2", "inverted", 0.0);
            set_int(invert_on, 1);
         }
         public set_invert_off() {
            set_state(PART:"level", "default", 0.0);
            set_state(PART:"level2", "default", 0.0);
            set_int(invert_on, 0);
         }
         public thumb_down() {
            if(get_int(invert_on) == 0)
               set_state(PART:"level", "pressed", 0.0);
            else if(get_int(invert_on) == 1)
               set_state(PART:"level2", "pressed", 0.0);
            }
         public thumb_up() {
            if(get_int(invert_on) == 0)
               set_state(PART:"level", "default", 0.0);
            else if(get_int(invert_on) == 1)
               set_state(PART:"level2", "inverted", 0.0);
            }
         }
         parts {
            part { name: "base";
               mouse_events: 0;
               scale: 1;
               description { state: "default" 0.0;
                  min: SLIDER_BASE_MIN_WIDTH_INC SLIDER_BASE_HEIGHT_INC;
                  max: 99999 SLIDER_BASE_HEIGHT_INC;
                  rel1.to: "bg";
                  rel2.to: "bg";
                  image.normal: "00_winset_list_progress_bg.png";
                  image.border: 0 0 4 4;
                  image.border_scale: 1;
               }
            }
            part { name: "level";
               mouse_events: 0;
               scale: 1;
               clip_to: "clipper";
               description { state: "default" 0.0;
                  fixed: 1 1;
                  rel1.to: "base";
                  rel2 {
                     to_y: "base";
                     to_x: "elm.dragable.slider";
                     relative: 0.5 1.0;
                  }
                  image.normal: "00_winset_list_progress_bar.png";
                  image.border: 0 0 4 4;
                  image.border_scale: 1;
               }
               description { state: "inverted" 0.0;
                  inherit: "default" 0.0;
                  visible: 0;
               }
               description { state: "pressed" 0.0;
                  inherit: "default" 0.0;
                  image.normal: "00_winset_list_progress_bar.png";
               }
            }
            part { name: "level2";
               mouse_events: 0;
               scale: 1;
               clip_to: "clipper";
               description { state: "default" 0.0;
                  fixed: 1 1;
                  visible: 0;
                  rel1 {
                     to_y: "base";
                     to_x: "elm.dragable.slider";
                     relative: 0.5 0.0;
                  }
                  rel2.to: "base";
                  image.normal: "00_winset_list_progress_bg.png";
                  image.border: 0 0 4 4;
                  image.border_scale: 1;
               }
               description { state: "inverted" 0.0;
                  inherit: "default" 0.0;
                  visible: 1;
               }
               description { state: "pressed" 0.0;
                  inherit: "default" 0.0;
                  visible: 1;
                  image.normal: "00_winset_list_progress_bg.png";
               }
            }
            part { name: "bg";
               type: RECT;
               mouse_events: 0;
               scale: 1;
               description { state: "default" 0.0;
                  visible: 0;
                  rel1.to: "elm.swallow.bar";
                  rel2.to: "elm.swallow.bar";
               }
            }
            part { name: "elm.swallow.bar";
               type: SWALLOW;
               mouse_events: 0;
               scale: 1;
               description { state: "default" 0.0;
                  min: SLIDER_SWALLOW_BAR_MIN_WIDTH_INC SLIDER_SWALLOW_BAR_HEIGHT_INC;
                  max: 99999 SLIDER_SWALLOW_BAR_HEIGHT_INC;
                  align: 1.0 0.5;
                  rel1 {
                     to_x: "bar_left_padding";
                     relative: 1.0 0.0;
                  }
                  rel2 {
                     to_x: "bar_right_padding";
                     relative: 0.0 1.0;
                  }
               }
            }
            part {
               name: "bar_left_padding";
               type: SWALLOW;
               scale: 1;
               description {
                  state: "default" 0.0;
                  visible: 0;
                  min: 10 0;
                  fixed: 1 1;
                  rel1 {
                     relative: 1.0  0.5;
                     to_x: "elm.text";
                  }
                  rel2 {
                     relative: 1.0  0.5;
                     to_x: "elm.text";
                  }
                  align: 0.0 0.5;
               }
            }
            part {
               name: "bar_right_padding";
               type: SWALLOW;
               scale: 1;
               description {
                  state: "default" 0.0;
                  visible: 0;
                  min: 10 0;
                  fixed: 1 1;
                  rel1 {
                     relative: 0.0  0.5;
                     to_x: "elm.units";
                  }
                  rel2 {
                     relative: 0.0  0.5;
                     to_x: "elm.units";
                  }
                  align: 1.0 0.5;
               }
            }
            part { name: "elm.swallow.icon";
               type: SWALLOW;
               scale: 1;
               description { state: "default" 0.0;
                  visible: 0;
                  align: 0.0 0.5;
                  rel1 {
                     to_y: "elm.swallow.bar";
                  }
                  rel2 {
                     relative: 0.0 1.0;
                     to_y: "elm.swallow.bar";
                  }
               }
               description { state: "visible" 0.0;
                  inherit: "default" 0.0;
                  visible: 1;
                  aspect: 1.0 1.0;
                  aspect_preference: VERTICAL;
               }
            }
            part { name: "elm.text";
               type: TEXT;
               mouse_events: 0;
               scale: 1;
               description { state: "default" 0.0;
                  visible: 0;
                  fixed: 1 1;
                  align: 0.0 0.5;
                  rel1.to_x: "elm.swallow.icon";
                  rel1.relative: 1.0 0.0;
                  rel2.to_x: "elm.swallow.icon";
                  color: SLIDER_UNITS_TEXT_COLOR_INC;
                  text {
                     font: "SLP:style=Medium";
                     size: SLIDER_UNITS_TEXT_SIZE_INC;
                     min: 0 0;
                     align: 0.0 0.5;
                     text_class: "slp_medium";
                  }
               }
               description { state: "visible" 0.0;
                  inherit: "default" 0.0;
                  visible: 1;
                  text.min: 1 1;
               }
            }
            part { name: "elm.swallow.end";
               type: SWALLOW;
               scale: 1;
               description { state: "default" 0.0;
                  visible: 0;
                  align: 1.0 0.5;
                  rel1 {
                     relative: 1.0 0.0;
                     to_y: "elm.swallow.bar";
                  }
                  rel2 {
                     relative: 1.0 1.0;
                     to_y: "elm.swallow.bar";
                  }
               }
               description { state: "visible" 0.0;
                  inherit: "default" 0.0;
                  visible: 1;
                  aspect: 1.0 1.0;
                  aspect_preference: VERTICAL;
               }
            }
            part { name: "units";
               mouse_events: 0;
               scale: 1;
               description { state: "default" 0.0;
                  visible: 0;
                  rel1 {
                     to_x: "elm.units";
                  }
               }
               description { state: "visible" 0.0;
                  inherit: "default" 0.0;
                  visible: 1;
               }
            }
            part { name: "elm.units";
               type: TEXT;
               mouse_events: 0;
               scale: 1;
               description { state: "default" 0.0;
                  visible: 0;
                  fixed: 1 1;
                  align: 1.0 0.5;
                  rel1.to_x: "elm.swallow.end";
                  rel2.relative: 0.0 1.0;
                  rel2.to_x: "elm.swallow.end";
                  color: SLIDER_UNITS_TEXT_COLOR_INC;
                  text {
                     font: "SLP:style=Bold";
                     size: SLIDER_UNITS_TEXT_SIZE_INC;
                     min: 0 0;
                     align: 0.0 0.5;
                     text_class: "slp_bold";
                  }
               }
               description { state: "visible" 0.0;
                  inherit: "default" 0.0;
                  fixed: 1 1;
                  visible: 1;
                  text.min: 1 1;
               }
            }
            part { name: "elm.dragable.slider";
               type: GROUP;
               source: "elm/slider/horizontal/indicator/default";
               mouse_events: 1;
               scale: 1;
               dragable {
                  x: 1 1 0;
                  y: 0 0 0;
                  confine: "bg";
               }
               description { state: "default" 0.0;
                  min: SLIDER_INDICATOR_WIDTH_INC SLIDER_INDICATOR_HEIGHT_INC;
                  fixed: 1 1;
                  align: 0.5 0.5;
                  color: 0 0 0 0;
               }
            }
            part { name: "disabler";
               type: RECT;
               mouse_events: 1;
               repeat_events: 0;
               scale: 1;
               description { state: "default" 0.0;
                  visible: 0;
                  color: 0 0 0 0;
               }
               description { state: "disabled" 0.0;
                  inherit: "default" 0.0;
                  visible: 1;
               }
            }
            part { name: "clipper";
               type: RECT;
               description { state: "default" 0.0;
                  color: 255 255 255 255;
               }
               description { state: "disabled" 0.0;
                  color: 255 255 255 102;
               }
            }
         }
         programs {
            program { name: "text_show";
            signal: "elm,state,text,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.text";
         }
         program { name: "text_hide";
            signal: "elm,state,text,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.text";
         }
         program { name: "icon_show";
            signal: "elm,state,icon,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.swallow.icon";
         }
         program { name: "icon_hide";
            signal: "elm,state,icon,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.swallow.icon";
         }
         program { name: "end_show";
            signal: "elm,state,end,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.swallow.end";
         }
         program { name: "end_hide";
            signal: "elm,state,end,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.swallow.end";
         }
         program { name: "units_show";
            signal: "elm,state,units,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.units";
            target: "units";
         }
         program { name: "units_hide";
            signal: "elm,state,units,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.units";
            target: "units";
         }
         program { name: "invert_on";
            signal: "elm,state,inverted,on";
            source: "elm";
            script {
               set_invert_on();
            }
         }
         program { name: "invert_off";
            signal: "elm,state,inverted,off";
            source: "elm";
            script {
               set_invert_off();
            }
         }
         program { name: "val_show";
            signal: "mouse,down,*";
            source: "elm.dragable.slider";
            script {
               thumb_down();
            }
         }
         program { name: "val_hide";
            signal: "mouse,up,*";
            source: "elm.dragable.slider";
            script {
               thumb_up();
            }
         }
         program { name: "slider_disable";
            signal: "elm,state,disabled";
            source: "elm";
            action:  STATE_SET "disabled" 0.0;
            target: "disabler";
            target: "clipper";
         }
         program { name: "slider_enable";
            signal: "elm,state,enabled";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "disabler";
            target: "clipper";
         }
      }
   }

   group { name: "elm/slider/horizontal/expanded_indicator_button";
      inherit: "elm/slider/horizontal/default";
      script {
         public invert_on = 0;
         public set_invert_on() {
            set_state(PART:"level", "inverted", 0.0);
            set_state(PART:"level2", "inverted", 0.0);
            set_int(invert_on, 1);
         }
         public set_invert_off() {
            set_state(PART:"level", "default", 0.0);
            set_state(PART:"level2", "default", 0.0);
            set_int(invert_on, 0);
         }
         public thumb_down() {
            if(get_int(invert_on) == 0)
               set_state(PART:"level", "pressed", 0.0);
            else if(get_int(invert_on) == 1)
               set_state(PART:"level2", "pressed", 0.0);
            }
         public thumb_up() {
            if(get_int(invert_on) == 0)
               set_state(PART:"level", "default", 0.0);
            else if(get_int(invert_on) == 1)
               set_state(PART:"level2", "inverted", 0.0);
            }
         }
      parts {
         part { name: "elm.dragable.slider";
            type: GROUP;
            source: "elm/slider/horizontal/indicator/expanded_indicator_button";
            mouse_events: 1;
            scale: 1;
            dragable {
               x: 1 1 0;
               y: 0 0 0;
               confine: "bg";
            }
            description { state: "default" 0.0;
               min: SLIDER_INDICATOR_WIDTH_INC SLIDER_INDICATOR_HEIGHT_INC;
               fixed: 1 1;
               rel1 {
                  relative: 0.5 0.0;
                  to_x: "bg";
               }
               rel2 {
                  relative: 0.5 1.0;
                  to_x: "bg";
               }
               color: 0 0 0 0;
            }
         }
      }
   }

   group { name: "elm/slider/horizontal/indicator/expanded_indicator_button";
      inherit: "elm/slider/horizontal/indicator/default";
      parts {
         part { name: "button_events";
            type: RECT;
            mouse_events: 1;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               min: 2*SLIDER_INDICATOR_WIDTH_INC 1.5*SLIDER_INDICATOR_HEIGHT_INC;
               align: 0.5 0.0;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               color: 0 0 0 0;
            }
         }
      }
   }
