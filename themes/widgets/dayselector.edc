/*
 * Copyright (c) 2010 Samsung Electronics Co., Ltd All Rights Reserved 
 *
 * PROPRIETARY/CONFIDENTIAL
 *
 * This software is the confidential and proprietary information of SAMSUNG
 * ELECTRONICS ("Confidential Information"). You agree and acknowledge that this
 * software is owned by Samsung and you shall not disclose such Confidential
 * Information and shall use it only in accordance with the terms of the license
 * agreement you entered into with SAMSUNG ELECTRONICS. SAMSUNG make no
 * representations or warranties about the suitability of the software, either
 * express or implied, including but not limited to the implied warranties of
 * merchantability, fitness for a particular purpose, or non-infringement.
 * SAMSUNG shall not be liable for any damages suffered by licensee arising out
 * of or releated to this software.
 *
 */

#define DAYSELECOR_DAY_POS_LEFT 1
#define DAYSELECOR_DAY_POS_RIGHT 2
#define DAYSELECOR_DAY_POS_MIDDLE 3
#define DAYSELECOR_DAY_TYPE_WEEKDAY 1
#define DAYSELECOR_DAY_TYPE_WEEKEND_DEFAULT 2
#define DAYSELECOR_DAY_TYPE_WEEKEND_STYLE1 3
#define DAYSELECOR_DAY_STATE_DEFAULT 1
#define DAYSELECOR_DAY_STATE_PRESSED 2
#define DAYSELECOR_DAY_STATE_SELECTED 3

#define DAYSELECTOR_DAY(_pos, _after)\
   part {\
      name: "day"#_pos;\
      type: SWALLOW;\
      scale: 1;\
      clip_to: "clipper";\
      description { state: "default" 0.0;\
         visible: 0;\
         min: 0 0;\
         align: 0.0 0.5;\
         fixed: 1 0;\
         rel1 {\
            relative: 1.0 0.0;\
            to: "day"#_after;\
            offset: 1 0;\
         }\
         rel2 {\
            relative: 1.0 1.0;\
            to: "day"#_after;\
         }\
      }\
      description { state: "visible" 0.0;\
         inherit: "default" 0.0;\
         visible: 1;\
         min: DAYSELECTOR_CHECK_WIDTH_INC DAYSELECTOR_CHECK_HEIGHT_INC;\
      }\
   }\
   programs{\
      program {\
         name: "day"#_pos"visible";\
         signal: "day"#_pos",visible";\
         source: "elm";\
         action: STATE_SET "visible" 0.0;\
         target: "day"#_pos;\
      }\
      program {\
         name: "day"#_pos"notvisible";\
         signal: "day"#_pos",default";\
         source: "elm";\
         action: STATE_SET "default" 0.0;\
         target: "day"#_pos;\
      }\
   }

group {
   name: "elm/dayselector/base/default";
   parts {
      part {
         name: "bg";
         type: RECT;
         mouse_events: 0;
         clip_to: "clipper";
         description {
            state: "default" 0.0;
            rel1 {
               to: "day0";
            }
            rel2 {
               to: "day6";
            }
            color: DAYSELECTOR_BACKGROUND_COLOR_INC;
         }
      }
      part {
         name: "day0";
         type: SWALLOW;
         scale: 1;
         clip_to: "clipper";
         description {
            state: "default" 0.0;
            visible: 0;
            min: 0 0;
            align: 0.0 0.5;
            fixed: 1 0;
            rel2.relative: 0.0 1.0;
         }
         description {
            state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            min: DAYSELECTOR_CHECK_WIDTH_INC DAYSELECTOR_CHECK_HEIGHT_INC;
         }
      }
      DAYSELECTOR_DAY(1, 0)
      DAYSELECTOR_DAY(2, 1)
      DAYSELECTOR_DAY(3, 2)
      DAYSELECTOR_DAY(4, 3)
      DAYSELECTOR_DAY(5, 4)
      DAYSELECTOR_DAY(6, 5)
      part {
         name: "clipper";
         type: RECT;
         description {
            state: "default" 0.0;
            rel1.to: "day0";
            rel2.to: "day6";
            color: 255 255 255 255;
         }
         description {
            state: "visible" 0.0;
            inherit: "default" 0.0;
            color: 200 200 200 255;
         }
      }
      part {
         name: "disabler";
         type: RECT;
         description {
            state: "default" 0.0;
            color: 0 0 0 0;
            visible: 0;
         }
         description {
            state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
   }
   programs {
      program {
         name: "disble_dayselector";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "visible" 0.0;
         target: "disabler";
         target: "clipper";
      }
      program {
         name: "enable_dayselector";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "disabler";
         target: "clipper";
      }
      program {
         name: "day0_visible";
         signal: "day0,visible";
         source: "elm";
         action: STATE_SET "visible" 0.0;
         target: "day0";
      }
      program {
         name: "day0_default";
         signal: "day0,default";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "day0";
      }
   }
}

group {
   name: "elm/check/base/dayselector/default";
   images {
      image: "00_alarm_repeat_button_normal_01.png" COMP;
      image: "00_alarm_repeat_button_press_01.png" COMP;
      image: "00_alarm_repeat_button_normal_02.png" COMP;
      image: "00_alarm_repeat_button_press_02.png" COMP;
      image: "00_alarm_repeat_button_normal_03.png" COMP;
      image: "00_alarm_repeat_button_press_03.png" COMP;
   }
   script {
      public check_pos; // Left, Right, Middle.
      public check_type; // Weekday, Weekend.
      public check_state = DAYSELECOR_DAY_STATE_DEFAULT; // Default, Pressed, Selected.

      public check_bg_show() {
         if(get_int(check_pos) == DAYSELECOR_DAY_POS_LEFT) {
           if(get_int(check_state) == DAYSELECOR_DAY_STATE_DEFAULT)
             set_state(PART:"bg", "default_left", 0.0);
           else if(get_int(check_state) == DAYSELECOR_DAY_STATE_PRESSED)
             set_state(PART:"bg", "pressed_left", 0.0);
           else if(get_int(check_state) == DAYSELECOR_DAY_STATE_SELECTED)
             set_state(PART:"bg", "selected_left", 0.0);
         }
         else if(get_int(check_pos) == DAYSELECOR_DAY_POS_RIGHT) {
           if(get_int(check_state) == DAYSELECOR_DAY_STATE_DEFAULT)
             set_state(PART:"bg", "default_right", 0.0);
           else if(get_int(check_state) == DAYSELECOR_DAY_STATE_PRESSED)
             set_state(PART:"bg", "pressed_right", 0.0);
           else if(get_int(check_state) == DAYSELECOR_DAY_STATE_SELECTED)
             set_state(PART:"bg", "selected_right", 0.0);
         }
         else if(get_int(check_pos) == DAYSELECOR_DAY_POS_MIDDLE) {
           if(get_int(check_state) == DAYSELECOR_DAY_STATE_DEFAULT)
             set_state(PART:"bg", "default_middle", 0.0);
           else if(get_int(check_state) == DAYSELECOR_DAY_STATE_PRESSED)
             set_state(PART:"bg", "pressed_middle", 0.0);
           else if(get_int(check_state) == DAYSELECOR_DAY_STATE_SELECTED)
             set_state(PART:"bg", "selected_middle", 0.0);
         }
      }
      public check_text_show() {
        if(get_int(check_state) == DAYSELECOR_DAY_STATE_SELECTED)
          set_state(PART:"elm.text", "selected", 0.0);
        else if(get_int(check_state) == DAYSELECOR_DAY_STATE_PRESSED)
          set_state(PART:"elm.text", "selected", 0.0);
        else {
          if(get_int(check_type) == DAYSELECOR_DAY_TYPE_WEEKDAY)
            set_state(PART:"elm.text", "default", 0.0);
          else if (get_int(check_type) == DAYSELECOR_DAY_TYPE_WEEKEND_DEFAULT)
            set_state(PART:"elm.text", "weekend_default", 0.0);
          else if (get_int(check_type) == DAYSELECOR_DAY_TYPE_WEEKEND_STYLE1)
            set_state(PART:"elm.text", "weekend_style1", 0.0);
        }
      }
   }
   parts {
      part {
         name: "bg";
         mouse_events: 0;
         scale: 1;
         description {
            state: "default" 0.0;
            //color: DAYSELECTOR_BACKGROUND_COLOR_INC;
         }
         description { state: "default_left" 0.0;
            inherit: "default" 0.0;
            image {
               normal: "00_alarm_repeat_button_normal_01.png";
               border: 4 0 4 4;
               border_scale: 1;
            }
         }
         description { state: "default_right" 0.0;
            inherit: "default" 0.0;
            image {
               normal: "00_alarm_repeat_button_normal_03.png";
               border: 0 4 4 4;
               border_scale: 1;
            }
         }
         description { state: "default_middle" 0.0;
            inherit: "default" 0.0;
            image {
               normal: "00_alarm_repeat_button_normal_02.png";
               border: 0 0 4 4;
               border_scale: 1;
            }
         }
         description { state: "pressed_left" 0.0;
            inherit: "default" 0.0;
            image {
               normal: "00_alarm_repeat_button_press_01.png";
               border: 4 0 4 4;
               border_scale: 1;
            }
         }
         description { state: "pressed_right" 0.0;
            inherit: "default" 0.0;
            image {
               normal: "00_alarm_repeat_button_press_03.png";
               border: 0 4 4 4;
               border_scale: 1;
            }
         }
         description { state: "pressed_middle" 0.0;
            inherit: "default" 0.0;
            image {
               normal: "00_alarm_repeat_button_press_02.png";
               border: 0 0 4 4;
               border_scale: 1;
            }
         }
         description { state: "selected_left" 0.0;
            inherit: "default" 0.0;
            image {
               normal: "00_alarm_repeat_button_press_01.png";
               border: 4 0 4 4;
               border_scale: 1;
            }
         }
         description { state: "selected_right" 0.0;
            inherit: "default" 0.0;
            image {
               normal: "00_alarm_repeat_button_press_03.png";
               border: 0 4 4 4;
               border_scale: 1;
            }
         }
         description { state: "selected_middle" 0.0;
            inherit: "default" 0.0;
            image {
               normal: "00_alarm_repeat_button_press_02.png";
               border: 0 0 4 4;
               border_scale: 1;
            }
         }
      }
      part {
         name: "elm.text";
         type: TEXT;
         mouse_events: 0;
         scale: 1;
         description {
            state: "default" 0.0;
            rel1.to: "bg";
            rel2.to: "bg";
            color: DAYSELECTOR_WEEKDAY_COLOR_INC;
            text {
               font: "SLP:style=Medium";
               size: DAYSELECTOR_DAY_FONT_SIZE_INC;
               min: 1 1;
               align: 0.5 0.5;
               text_class: "slp";
            }
         }
         description {
            state: "weekend_default" 0.0;
            inherit: "default" 0.0;
            color: DAYSELECTOR_SATURDAY_COLOR_INC;
         }
         description {
            state: "weekend_style1" 0.0;
            inherit: "default" 0.0;
            color: DAYSELECTOR_SUNDAY_COLOR_INC;
         }
         description {
            state: "selected" 0.0;
            inherit: "default" 0.0;
            color: DAYSELECTOR_DAY_PRESSED_COLOR_INC;
         }
      }
      part {
         name: "events";
         type: RECT;
         description {
            state: "default" 0.0;
            rel1.to: "bg";
            rel2.to: "bg";
            color: 0 0 0 0;
         }
      }
   }
   programs {
      program {
         name: "check,pressed";
         signal: "mouse,down,1";
         source: "events";
         script {
            set_int(check_state, DAYSELECOR_DAY_STATE_PRESSED);
            check_bg_show();
            check_text_show();
         }
      }
      program {
         name: "check,toggle";
         signal: "mouse,up,1";
         source: "events";
         action: SIGNAL_EMIT "elm,action,check,toggle" "";
      }
      program {
         name: "check,on";
         signal: "elm,state,check,on";
         source: "elm";
         script {
            set_int(check_state, DAYSELECOR_DAY_STATE_SELECTED);
            check_bg_show();
            check_text_show();
         }
      }
      program {
         name: "check,off";
         signal: "elm,state,check,off";
         source: "elm";
         script {
            set_int(check_state, DAYSELECOR_DAY_STATE_DEFAULT);
            check_bg_show();
            check_text_show();
         }
      }
      program { name: "check,left";
         signal: "elm,pos,check,left";
         source: "elm";
         script {
            set_int(check_pos, DAYSELECOR_DAY_POS_LEFT);
            check_bg_show();
         }
      }
      program { name: "check,right";
         signal: "elm,pos,check,right";
         source: "elm";
         script {
            set_int(check_pos, DAYSELECOR_DAY_POS_RIGHT);
            check_bg_show();
         }
      }
      program { name: "check,middle";
         signal: "elm,pos,check,middle";
         source: "elm";
         script {
            set_int(check_pos, DAYSELECOR_DAY_POS_MIDDLE);
            check_bg_show();
         }
      }
      program { name: "check,weekday";
         signal: "elm,type,weekday,default";
         source: "";
         script {
            set_int(check_type, DAYSELECOR_DAY_TYPE_WEEKDAY);
            check_text_show();
         }
      }
      program { name: "check,weekend,default";
         signal: "elm,type,weekend,default";
         source: "";
         script {
            set_int(check_type, DAYSELECOR_DAY_TYPE_WEEKEND_DEFAULT);
            check_text_show();
         }
      }
      program { name: "check,weekend,style1";
         signal: "elm,type,weekend,style1";
         source: "";
         script {
            set_int(check_type, DAYSELECOR_DAY_TYPE_WEEKEND_STYLE1);
            check_text_show();
         }
      }
   }
}

#undef DAYSELECOR_DAY_POS_LEFT
#undef DAYSELECOR_DAY_POS_RIGHT
#undef DAYSELECOR_DAY_POS_MIDDLE
#undef DAYSELECOR_DAY_TYPE_WEEKDAY
#undef DAYSELECOR_DAY_TYPE_WEEKEND_DEFAULT
#undef DAYSELECOR_DAY_TYPE_WEEKEND_STYLE1
#undef DAYSELECOR_DAY_STATE_DEFAULT
#undef DAYSELECOR_DAY_STATE_PRESSED
#undef DAYSELECOR_DAY_STATE_SELECTED
#undef DAYSELECTOR_DAY
