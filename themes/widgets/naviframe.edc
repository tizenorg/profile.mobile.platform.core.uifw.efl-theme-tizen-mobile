/*
 * Copyright (c) 2010 Samsung Electronics Co., Ltd All Rights Reserved 
 *
 * PROPRIETARY/CONFIDENTIAL
 *
 * This software is the confidential and proprietary information of SAMSUNG
 * ELECTRONICS ("Confidential Information"). You agree and acknowledge that this
 * software is owned by Samsung and you shall not disclose such Confidential
 * Information and shall use it only in accordance with the terms of the license
 * agreement you entered into with SAMSUNG ELECTRONICS. SAMSUNG make no
 * representations or warranties about the suitability of the software, either
 * express or implied, including but not limited to the implied warranties of
 * merchantability, fitness for a particular purpose, or non-infringement.
 * SAMSUNG shall not be liable for any damages suffered by licensee arising out
 * of or releated to this software.
 *
 */

#define NAVIFRAME_VIEW_TRANS_TIME 0.3

   group { name:"elm/naviframe/base/default";
      parts {
         part { name: "base";
            description { state: "default" 0.0;
            }
         }
      }
   }
   group { name:"elm/naviframe/item/basic/default";
      alias:"elm/naviframe/item/1line/default";
      images {
          image: "00_winset_control_top_bg.png" COMP;
          image: "00_winset_control_top_arrow.png" COMP;
          image: "00_winset_divider_line.png" COMP;
          image: "00_winset_control_toolbar_bg.png" COMP;
          image: "00_winset_title_bg.png" COMP;
      }
      script {
         public oh_show = 0;     //optionheader show/hide
         public oh_close = 0;    //optionheader close/open
         public cbar_bg = 0;     //Controlbar BG Show call count
      }
      parts {
         part { name: "base";
            type: RECT;
            mouse_events:  0;
            description { state: "default" 0.0;
               visible: 0;
            }
            description { state: "left" 0.0;
               inherit: "default" 0.0;
               rel1.relative: -1.0 0.0;
               rel2.relative: 0.0 1.0;
            }
            description { state: "right" 0.0;
               inherit: "default" 0.0;
               rel1.relative: 1.0 0.0;
               rel2.relative: 2.0 1.0;
            }
         }
         part { name: "title_bg";
            scale: 1;
            description { state: "default" 0.0;
               min: 1 NAVIFRAME_TITLE_H_INC;
               align: 0.0 0.0;
               fixed: 0 1;
               rel1 { relative: 0.0 0.0; to: "base"; }
               rel2 { relative: 1.0 0.0; to: "base"; }
               image.normal: "00_winset_title_bg.png";
            }
            description { state: "hide" 0.0;
               inherit: "default" 0.0;
               min: 0 0;
               max: 0 0;
               fixed: 1 1;
            }
         }
         part { name: "title_clip";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1 { to: "title_bg"; }
               rel2 { to: "title_bg"; }
            }
         }
         part { name: "optionheader_bg";
            type: IMAGE;
            scale: 1;
            description { state: "default" 0.0;
               min: 1 0;
               align: 0.5 0;
               fixed: 0 1;
               rel1.to: "title_bg";
               rel1.relative: 0 1;
               rel2.to: "title_bg";
               visible: 0;
               image { normal: "00_winset_control_top_bg.png";
                  border: NAVIFRAME_OH_BORDER_INC;
               }
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               min: 1 NAVIFRAME_OH_OPENED_H_INC;
               visible: 1;
            }
            description { state: "hide" 0.0;
               inherit: "default" 0.0;
               min: 0 0;
               max: 0 0;
               fixed: 1 1;
            }
         }
         part { name: "optionheader_clip";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1 { to: "optionheader_bg"; }
               rel2 { to: "optionheader_bg"; }
            }
         }
         part { name: "optionheader_top_padding";
            type: RECT;
            scale: 1;
            clip_to: "optionheader_clip";
            description { state: "default" 0.0;
               min: 0 NAVIFRAME_OH_PADDING_INC;
               rel1 { relative: 0.0 0.0; to: "optionheader_bg"; }
               rel2 { relative: 1.0 0.0; to: "optionheader_bg"; }
               fixed: 0 1;
               align: 0.0 0.0;
               visible: 0;
            }
         }
         part { name: "optionheader";
            type: SWALLOW;
            scale: 1;
            clip_to: "optionheader_clip";
            description { state: "default" 0.0;
               min: 0 NAVIFRAME_OH_CONTENT_H_INC;
               rel1 { relative: 0.0 1.0; to: "optionheader_top_padding"; }
               rel2 { relative: 1.0 1.0; to: "optionheader_top_padding"; }
               fixed: 0 1;
               align: 0.0 0.0;
            }
         }
         part { name: "optionheader_bottom_padding";
            type: RECT;
            scale: 1;
            clip_to: "optionheader_clip";
            description { state: "default" 0.0;
               min: 0 NAVIFRAME_OH_PADDING_INC;
               rel1 { relative: 0.0 1.0; to: "optionheader"; }
               rel2 { relative: 1.0 1.0; to: "optionheader"; }
               fixed: 0 1;
               align: 0.0 0.0;
               visible: 0;
            }
         }
         part { name: "optionheader_shadow";
            type: RECT;
            scale: 1;
            clip_to: "optionheader_clip";
            description { state: "default" 0.0;
               min: 0 NAVIFRAME_OH_SHADOW_INC;
               rel1 { relative: 0.0 1.0; to: "optionheader_bottom_padding"; }
               rel2 { relative: 1.0 1.0; to: "optionheader_bottom_padding"; }
               fixed: 0 1;
               align: 0.0 0.0;
               visible: 0;
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            repeat_events: 0;
            clip_to: "content_clip";
            description { state: "default" 0.0;
               align: 0.0 0.0;
               rel1.relative: 0.0 1.0;
               rel1.to_x: "base";
               rel1.to_y: "optionheader_bg";
               rel2.relative: 1.0 0.0;
               rel2.to_x: "base";
               rel2.to_y: "controlbar_bg";
            }
         }
         part { name: "content_clip";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1.to: "elm.swallow.content";
               rel2.to: "elm.swallow.content";
            }
         }
         part { name: "padding_center_text1";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: NAVIFRAME_PADDING_INC;
               fixed: 1 0;
               align: 0.0 0.0;
               rel1 { relative: 0.0 0.0; to: "title_bg"; }
               rel2 { relative: 0.0 1.0; to: "title_bg"; }
               visible: 0;
            }
            description { state: "icon" 0.0;
               inherit: "default" 0.0;
               min: NAVIFRAME_ICON_PADDING_INC;
            }
         }
         part { name: "padding_center_text2";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: NAVIFRAME_PADDING_INC;
               fixed: 1 0;
               align: 1.0 0.5;
               rel1 { relative: 0.0 0.0; to_x: "title_more_btn"; to_y: "title_bg"; }
               rel2 { relative: 0.0 1.0; to_x: "title_more_btn"; to_y: "title_bg"; }
               visible: 0;
            }
         }
         part { name: "padding_left";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: NAVIFRAME_PADDING_INC;
               fixed: 1 0;
               align: 0.0 0.0;
               rel1 { relative: 0.0 0.0; to: "title_bg"; }
               rel2 { relative: 0.0 1.0; to: "title_bg"; }
               visible: 0;
            }
         }
         part { name: "padding_bottom_text";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: 0 8;
               fixed: 0 1;
               align: 0.0 1.0;
               rel1 { relative: 0.0 1.0; to: "title_bg"; }
               rel2 { relative: 1.0 1.0; to: "title_bg"; }
               visible: 0;
            }
         }
         part { name: "elm.text.title";
            type: TEXT;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               text { font: "SLP:style=Medium";
                  size: NAVIFRAME_TITLE_FONT_SIZE_INC;
                  min: 0 0;
                  max: 1 0;
                  align: 0.0 0.5;
                  text_class: "slp_medium";
               }
               color: NAVIFRAME_TITLE_TEXT_COLOR_INC;
               align: 0.0 0.5;
               fixed: 1 0;
               rel1 { relative: 1.0 0.0; to: "padding_center_text1"; }
               rel2 { relative: 0.0 1.0; to: "padding_center_text2"; }
            }
            description { state: "subtitle_is_set" 0.0;
               inherit: "default" 0.0;
               align: 0.0 0.0;
               rel2 { relative: 0.0 0.6; to_x: "padding_center_text2"; to_y: "padding_center_text1"; }
            }
         }
         part { name: "elm.text.subtitle";
            type: TEXT;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               text { font: "SLP:style=Medium";
                  size: NAVIFRAME_SUBTITLE_FONT_SIZE_INC;
                  min: 0 0;
                  max: 1 0;
                  text_class: "slp_medium";
                  align: 0.0 1.0;
               }
               color: NAVIFRAME_SUBTITLE_TEXT_COLOR_INC;
               align: 0.0 1.0;
               fixed: 1 0;
               rel1 {
                  relative: 1.0 0.0;
                  to_x: "padding_left";
                  to_y: "padding_bottom_text";
               }
               rel2 {
                  relative: 0.0 0.0;
                  to_x: "padding_center_text2";
                  to_y: "padding_bottom_text";
               }
            }
         }
         part { name: "padding_before_text";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               align: 1.0 0.5;
               rel1 { relative: 0.0 0.0; to: "elm.text.title"; }
               rel2 { relative: 0.0 1.0; to: "elm.text.title"; }
               fixed: 1 0;
               min: NAVIFRAME_PADDING_INC;
               visible: 0;
            }
         }
         part { name: "elm.swallow.icon";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               max: NAVIFRAME_ICON_SIZE_INC;
               fixed: 1 1;
               rel1 { relative: 0.0 0.0; to: "padding_before_text"; }
               rel2 { relative: 0.0 1.0; to: "padding_before_text"; }
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               align: 1.0 0.5;
            }
         }
         part { name: "click_event_area";
             ignore_flags: ON_HOLD;
             repeat_events: 1;
             description { state: "default" 0.0;
                rel1 { to: "title_bg"; }
                rel2 { to: "title_bg"; }
             }
         }
         part { name: "title_left_btn";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               max: NAVIFRAME_TITLE_FUNC_BTN_SIZE_INC;
               fixed: 1 1;
               align: 1 0.5;
               rel1 { relative: 0.0 0.0; to: "title_right_btn"; }
               rel2 { relative: 0.0 1.0; to: "title_right_btn"; }
            }
         }
         part { name: "left_btn_separator";
            type: IMAGE;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: 4 48;
               max: 4 48;
               fixed: 1 1;
               align: 1.0 0.5;
               rel1 { relative: 0.0 0.0; to: "title_left_btn"; }
               rel2 { relative: 0.0 1.0; to: "title_left_btn"; }
               image {
                  normal: "00_winset_divider_line.png";
                  border: 0 2 18 0;
                  border_scale: 1;
               }
               visible: 0;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "title_right_btn";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               max: NAVIFRAME_TITLE_FUNC_BTN_SIZE_INC;
               align: 1 0.5;
               fixed: 1 1;
               rel1 { relative: 1.0 0.0; to: "title_bg"; }
               rel2 { relative: 1.0 1.0; to: "title_bg"; }
            }
         }
         part { name: "right_btn_separator";
            type: IMAGE;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: 4 48;
               max: 4 48;
               fixed: 1 1;
               align: 1.0 0.5;
               rel1 { relative: 0.0 0.0; to: "title_right_btn"; }
               rel2 { relative: 0.0 1.0; to: "title_right_btn"; }
               image {
                  normal: "00_winset_divider_line.png";
                  border: 0 2 18 0;
                  border_scale: 1;
               }
               visible: 0;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "title_more_btn";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               max: NAVIFRAME_TITLE_FUNC_BTN_SIZE_INC;
               fixed: 1 1;
               align: 1 0.5;
               rel1 { relative: 0.0 0.0; to: "title_left_btn"; }
               rel2 { relative: 0.0 1.0; to: "title_left_btn"; }
            }
         }
         part { name: "more_btn_separator";
            type: IMAGE;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: 4 48;
               max: 4 48;
               fixed: 1 1;
               align: 1.0 0.5;
               rel1 { relative: 0.0 0.0; to: "title_more_btn"; }
               rel2 { relative: 0.0 1.0; to: "title_more_btn"; }
               image {
                  normal: "00_winset_divider_line.png";
                  border: 0 2 18 0;
                  border_scale: 1;
               }
               visible: 0;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "optionheader_arrow";
            type: IMAGE;
            scale: 1;
            description { state: "default" 0.0;
               min: NAVIFRAME_OH_ARROW_SIZE_INC;
               max: NAVIFRAME_OH_ARROW_SIZE_INC;
               fixed: 1 1;
               align: 0.5 0.0;
               rel1 { relative: 0.0 0.88; to: "title_more_btn"; }
               rel2 { relative: 1.0 1.08; to: "title_more_btn"; }
               image.normal: "00_winset_control_top_arrow.png";
               color: 255 255 255 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
            }
         }
         part { name: "controlbar_bg";
            scale: 1;
            description { state: "default" 0.0;
               min: 0 0;
               max: 999999 0;
               fixed: 0 1;
               align: 0.0 1.0;
               visible: 0;
               rel1 { to: "base"; }
               rel2 { to: "base"; }
               image.normal: "00_winset_control_toolbar_bg.png";
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               min: 0 CONTROLBAR_SMALL_HEIGHT_INC;
               max: 999999 CONTROLBAR_SMALL_HEIGHT_INC;
               visible: 1;
            }
         }
         part { name: "elm.prev_btn_bg";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               min: 0 0;
               fixed: 1 0;
               align: 1.0 0.0;
               rel1 { relative: 1.0 0.0; to: "controlbar_bg"; }
               rel2.to: "controlbar_bg";
               visible: 0;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               min: NAVIFRAME_TITLE_PREV_BTN_BG_SIZE_INC 0;
            }
         }
         part { name: "prev_btn_separator";
            type: IMAGE;
            scale: 1;
            description { state: "default" 0.0;
               min: 4 48;
               max: 4 48;
               fixed: 1 1;
               align: 1.0 0.5;
               rel1 { relative: 0.0 0.0; to: "elm.prev_btn_bg"; }
               rel2 { relative: 0.0 1.0; to: "elm.prev_btn_bg"; }
               image {
                  normal: "00_winset_divider_line.png";
                  border: 0 2 18 0;
                  border_scale: 1;
               }
               visible: 0;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "elm.swallow.prev_btn";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               align: 0.5 0.5;
               rel1.to: "elm.prev_btn_bg";
               rel2.to: "elm.prev_btn_bg";
            }
         }
         part { name: "controlbar_clip";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1.to: "controlbar_bg";
               rel2 { relative: 0.0 1.0; to_x: "prev_btn_separator"; to_y: "elm.prev_btn_bg"; }
            }
         }
         part { name: "controlbar";
            type: SWALLOW;
            scale: 1;
            clip_to: "controlbar_clip";
            description { state: "default" 0.0;
               fixed: 1 1;
               rel1.to: "controlbar_clip";
               rel2.to: "controlbar_clip";
            }
         }
      }
      programs {
         program { name: "content_new_pushed";
            signal: "elm,state,new,pushed,internal";
            source: "";
            action: STATE_SET "default" 0.0;
            target: "base";
            transition: DECELERATE NAVIFRAME_VIEW_TRANS_TIME;
            after: "show_finished";
         }
         program { name: "content_cur_pushed";
            signal: "elm,state,cur,pushed,internal";
            source: "";
            action: STATE_SET "left" 0.0;
            target: "base";
            transition: DECELERATE NAVIFRAME_VIEW_TRANS_TIME;
            after: "pushed_finished";
         }
         program { name: "content_prev_popped";
            signal: "elm,state,prev,popped,internal";
            source: "";
            action: STATE_SET "default" 0.0;
            target: "base";
            transition: DECELERATE NAVIFRAME_VIEW_TRANS_TIME;
            after: "show_finished";
         }
         program { name: "content_cur_popped";
            signal: "elm,state,cur,popped,internal";
            source: "";
            action: STATE_SET "right" 0.0;
            target: "base";
            transition: DECELERATE NAVIFRAME_VIEW_TRANS_TIME;
            after: "popped_finished";
         }
         program { name: "cur_pushed";
            signal: "elm,state,cur,pushed";
            source: "elm";
            script {
               set_state(PART:"base", "default", 0.0);
               emit("elm,state,cur,pushed,internal", "");
            }
         }
         program { name: "new_pushed";
            signal: "elm,state,new,pushed";
            source: "elm";
            script {
               set_state(PART:"base", "right", 0.0);
               emit("elm,state,new,pushed,internal", "");
            }
         }
         program { name: "prev_popped";
            signal: "elm,state,prev,popped";
            source: "elm";
            script {
               set_state(PART:"base", "left", 0.0);
               emit("elm,state,prev,popped,internal", "");
            }
         }
         program { name: "cur_popped";
            signal: "elm,state,cur,popped";
            source: "elm";
            script {
               set_state(PART:"base", "default", 0.0);
               emit("elm,state,cur,popped,internal", "");
            }
         }
         program { name: "visible";
            signal: "elm,state,visible";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "base";
         }
         program { name: "title_show";
            signal: "elm,state,title,show";
            source: "elm";
            script {
               set_state(PART:"title_bg", "default", 0.0);
               if (get_int(oh_show) == 1) {
                  if (get_int(oh_close) == 1) {
                     emit("elm,state,optionheader,instant_close", "");
                  }else {
                     emit("elm,state,optionheader,instant_open", "");
                  }
               }
               else
                 set_state(PART:"optionheader_bg", "default", 0.0);
            }
         }
         program { name: "title_hide";
            signal: "elm,state,title,hide";
            source: "elm";
            action: STATE_SET "hide" 0.0;
            target: "title_bg";
            target: "optionheader_bg";
         }
         program { name: "subtitle_show";
            signal: "elm,state,subtitle,show";
            source: "elm";
            script {
               set_state(PART:"elm.text.title", "subtitle_is_set", 0.0);
            }
         }
         program { name: "subtitle_hide";
            signal: "elm,state,subtitle,hide";
            source: "elm";
            script {
               set_state(PART:"elm.text.title", "default", 0.0);
            }
         }
         program { name: "prev_btn_show";
            signal: "elm,state,prev_btn,show";
            source: "elm";
            script {
               emit("elm,state,controlbar_bg,show", "elm");
               set_state(PART:"elm.prev_btn_bg", "visible", 0.0);
               set_state(PART:"prev_btn_separator", "visible", 0.0);
            }
         }
         program { name: "prev_btn_hide";
            signal: "elm,state,prev_btn,hide";
            source: "elm";
            script {
               emit("elm,state,controlbar_bg,hide", "elm");
               set_state(PART:"elm.prev_btn_bg", "default", 0.0);
               set_state(PART:"prev_btn_separator", "default", 0.0);
            }
         }
         program { name: "icon_show";
            signal: "elm,state,icon,show";
            source: "elm";
            action: STATE_SET "icon" 0.0;
            target: "padding_center_text1";
         }
         program { name: "icon_hide";
            signal: "elm,state,icon,hide";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "padding_center_text1";
         }
         program { name: "left_btn_show";
            signal: "elm,state,title_left_btn,show";
            source: "elm";
            action: STATE_SET "visible" 0.0;
            target: "left_btn_separator";
         }
         program { name: "left_btn_hide";
            signal: "elm,state,title_left_btn,hide";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "left_btn_separator";
         }
         program { name: "right_btn_show";
            signal: "elm,state,title_right_btn,show";
            source: "elm";
            action: STATE_SET "visible" 0.0;
            target: "right_btn_separator";
         }
         program { name: "right_btn_hide";
            signal: "elm,state,title_right_btn,hide";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "right_btn_separator";
         }
         program { name: "more_btn_show";
            signal: "elm,state,title_more_btn,show";
            source: "elm";
            action: STATE_SET "visible" 0.0;
            target: "more_btn_separator";
         }
         program { name: "more_btn_hide";
            signal: "elm,state,title_more_btn,hide";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "more_btn_separator";
         }
         program { name: "controlbar_show";
            signal: "elm,state,controlbar,show";
            source: "elm";
            script {
               emit("elm,state,controlbar_bg,show", "elm");
            }
         }
         program { name: "controlbar_hide";
            signal: "elm,state,controlbar,hide";
            source: "elm";
            script {
               emit("elm,state,controlbar_bg,hide", "elm");
            }
         }
         program { name: "controlbar_bg_show";
            signal: "elm,state,controlbar_bg,show";
            source: "elm";
            script {
               set_state(PART:"controlbar_bg", "show", 0.0);
               set_int(cbar_bg, get_int(cbar_bg) + 1);
            }
         }
         program { name: "controlbar_bg_hide";
            signal: "elm,state,controlbar_bg,hide";
            source: "elm";
            script {
               set_int(cbar_bg, get_int(cbar_bg) - 1);
               if (get_int(cbar_bg) <= 0)
                 set_state(PART:"controlbar_bg", "default", 0.0);
            }
         }
         program { name: "optionheader_show";
            signal: "elm,state,optionheader,show";
            source: "elm";
            script {
               set_state(PART:"optionheader_bg", "show", 0.0);
               set_state(PART:"optionheader_arrow", "show", 0.0);
               set_int(oh_show, 1);
            }
         }
         program { name: "optionheader_hide";
            signal: "elm,state,optionheader,hide";
            source: "elm";
            script {
               set_state(PART:"optionheader_bg", "default", 0.0);
               set_state(PART:"optionheader_arrow", "default", 0.0);
               set_int(oh_show, 0);
            }
         }
         program { name: "optionheader_open";
            signal: "elm,state,optionheader,open";
            source: "";
            action: STATE_SET "show" 0.0;
            target: "optionheader_bg";
            target: "optionheader_arrow";
            transition: LINEAR 0.2;
            after: "optionheader_open_set";
         }
         program { name: "optionheader_close";
            signal: "elm,state,optionheader,close";
            source: "";
            action: STATE_SET "default" 0.0;
            target: "optionheader_bg";
            target: "optionheader_arrow";
            transition: LINEAR 0.2;
            after: "optionheader_close_set";
         }
         program { name: "optionheader_instant_open";
            signal: "elm,state,optionheader,instant_open";
            source: "";
            action: STATE_SET "show" 0.0;
            target: "optionheader_bg";
            target: "optionheader_arrow";
            after: "optionheader_open_set";
         }
         program { name: "optionheader_instant_close";
            signal: "elm,state,optionheader,instant_close";
            source: "";
            action: STATE_SET "default" 0.0;
            target: "optionheader_bg";
            target: "optionheader_arrow";
            after: "optionheader_close_set";
         }
         program { name: "optionheader_close_set";
            signal: "elm,state,optionheader,close_set";
            source: "";
            script {
               set_int(oh_close, 1);
            }
         }
         program { name: "optionheader_open_set";
            signal: "elm,state,optionheader,open_set";
            source: "";
            script {
               set_int(oh_close, 0);
            }
         }
         program { name: "controlbar_open";
            signal: "elm,state,controlbar,open";
            source: "";
            action: STATE_SET "show" 0.0;
            target: "controlbar_bg";
            transition: LINEAR 0.2;
         }
         program { name: "controlbar_close";
            signal: "elm,state,controlbar,close";
            source: "";
            action: STATE_SET "default" 0.0;
            target: "controlbar_bg";
            transition: LINEAR 0.2;
         }
         program { name: "controlbar_instant_open";
            signal: "elm,state,controlbar,instant_open";
            source: "";
            script {
               emit("elm,state,prev_btn,show", "elm");
               emit("elm,state,controlbar,show", "elm");
            }
         }
         program { name: "controlbar_instant_close";
            signal: "elm,state,controlbar,instant_close";
            source: "";
            script {
               emit("elm,state,prev_btn,hide", "elm");
               emit("elm,state,controlbar,hide", "elm");
            }
         }
         program { name: "show_finished";
            action: SIGNAL_EMIT "elm,action,show,finished" "";
         }
         program { name: "pushed_finished";
            action: SIGNAL_EMIT "elm,action,pushed,finished" "";
         }
         program { name: "popped_finished";
            action: SIGNAL_EMIT "elm,action,popped,finished" "";
         }
         program {
            name: "title_clicked";
            signal: "mouse,clicked,1";
            source: "click_event_area";
            action: SIGNAL_EMIT "elm,action,title,clicked" "";
         }
      }
   }
   group { name:"elm/naviframe/item/basic2/default";
      alias:"elm/naviframe/item/2line/default";
      images {
         image: "00_winset_control_top_bg.png" COMP;
         image: "00_winset_control_top_arrow.png" COMP;
         image: "00_winset_divider_line.png" COMP;
         image: "00_winset_control_toolbar_bg.png" COMP;
         image: "00_winset_title_bg.png" COMP;
      }
      script {
         public oh_show = 0;     //optionheader show/hide
         public oh_close = 0;    //optionheader close/open
         public cbar_bg = 0;     //Controlbar BG Show call count
      }
      parts {
         part { name: "base";
            type: RECT;
            mouse_events:  0;
            description { state: "default" 0.0;
               visible: 0;
            }
            description { state: "left" 0.0;
               inherit: "default" 0.0;
               rel1.relative: -1.0 0.0;
               rel2.relative: 0.0 1.0;
            }
            description { state: "right" 0.0;
               inherit: "default" 0.0;
               rel1.relative: 1.0 0.0;
               rel2.relative: 2.0 1.0;
            }
         }
         part { name: "title_bg";
            scale: 1;
            description { state: "default" 0.0;
               min: 1 NAVIFRAME_TITLE_H_INC;
               align: 0.0 0.0;
               fixed: 0 1;
               rel1 { relative: 0.0 0.0; to: "base"; }
               rel2 { relative: 1.0 0.0; to: "base"; }
               image.normal: "00_winset_title_bg.png";
            }
            description { state: "hide" 0.0;
               inherit: "default" 0.0;
               min: 0 0;
               max: 0 0;
               fixed: 1 1;
            }
         }
         part { name: "title_clip";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1 { to: "title_bg"; }
               rel2 { to: "title_bg"; }
            }
         }
         part { name: "optionheader_bg";
            type: IMAGE;
            scale: 1;
            description { state: "default" 0.0;
               min: 1 0;
               align: 0.5 0;
               fixed: 0 1;
               rel1.to: "title_bg";
               rel1.relative: 0 1;
               rel2.to: "title_bg";
               visible: 0;
               image { normal: "00_winset_control_top_bg.png";
                  border: NAVIFRAME_OH_BORDER_INC;
               }
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               min: 1 NAVIFRAME_OH_OPENED_DOUBLE_H_INC;
               visible: 1;
            }
            description { state: "hide" 0.0;
               inherit: "default" 0.0;
               min: 0 0;
               max: 0 0;
               fixed: 1 1;
            }
         }
         part { name: "optionheader_clip";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1 { to: "optionheader_bg"; }
               rel2 { to: "optionheader_bg"; }
            }
         }
         part { name: "optionheader_top_padding";
            type: RECT;
            scale: 1;
            clip_to: "optionheader_clip";
            description { state: "default" 0.0;
               min: 0 NAVIFRAME_OH_PADDING_INC;
               rel1 { relative: 0.0 0.0; to: "optionheader_bg"; }
               rel2 { relative: 1.0 0.0; to: "optionheader_bg"; }
               fixed: 0 1;
               align: 0.0 0.0;
               visible: 0;
            }
         }
         part { name: "optionheader";
            type: SWALLOW;
            scale: 1;
            clip_to: "optionheader_clip";
            description { state: "default" 0.0;
               min: 0 NAVIFRAME_OH_CONTENT_H_INC;
               rel1 { relative: 0.0 1.0; to: "optionheader_top_padding"; }
               rel2 { relative: 1.0 1.0; to: "optionheader_top_padding"; }
               fixed: 0 1;
               align: 0.0 0.0;
            }
         }
         part { name: "optionheader_mid_padding";
            type: RECT;
            scale: 1;
            clip_to: "optionheader_clip";
            description { state: "default" 0.0;
               min: 0 NAVIFRAME_OH_PADDING_INC;
               rel1 { relative: 0.0 1.0; to: "optionheader"; }
               rel2 { relative: 1.0 1.0; to: "optionheader"; }
               fixed: 0 1;
               align: 0.0 0.0;
               visible: 0;
            }
         }
         part { name: "optionheader2";
            type: SWALLOW;
            scale: 1;
            clip_to: "optionheader_clip";
            description { state: "default" 0.0;
               min: 0 NAVIFRAME_OH_CONTENT_H_INC;
               rel1 { relative: 0.0 1.0; to: "optionheader_mid_padding";}
               rel2 { relative: 1.0 1.0; to: "optionheader_mid_padding";}
               fixed: 0 1;
               align: 0.0 0.0;
            }
         }
         part { name: "optionheader_bottom_padding";
            type: RECT;
            scale: 1;
            clip_to: "optionheader_clip";
            description { state: "default" 0.0;
               min: 0 NAVIFRAME_OH_PADDING_INC;
               rel1 { relative: 0.0 1.0; to: "optionheader2"; }
               rel2 { relative: 1.0 1.0; to: "optionheader2"; }
               fixed: 0 1;
               align: 0.0 0.0;
               visible: 0;
            }
         }
         part { name: "optionheader_shadow";
            type: RECT;
            scale: 1;
            clip_to: "optionheader_clip";
            description { state: "default" 0.0;
               min: 0 NAVIFRAME_OH_SHADOW_INC;
               rel1 { relative: 0.0 1.0; to: "optionheader_bottom_padding"; }
               rel2 { relative: 1.0 1.0; to: "optionheader_bottom_padding"; }
               fixed: 0 1;
               align: 0.0 0.0;
               visible: 0;
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            repeat_events: 0;
            clip_to: "content_clip";
            description { state: "default" 0.0;
               align: 0.0 0.0;
               rel1.relative: 0.0 1.0;
               rel1.to_x: "base";
               rel1.to_y: "optionheader_bg";
               rel2.relative: 1.0 0.0;
               rel2.to_x: "base";
               rel2.to_y: "controlbar_bg";
            }
         }
         part { name: "content_clip";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1.to: "elm.swallow.content";
               rel2.to: "elm.swallow.content";
            }
         }
         part { name: "padding_center_text1";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: NAVIFRAME_PADDING_INC;
               fixed: 1 0;
               align: 0.0 0.0;
               rel1 { relative: 0.0 0.0; to: "title_bg"; }
               rel2 { relative: 0.0 1.0; to: "title_bg"; }
               visible: 0;
            }
            description { state: "icon" 0.0;
               inherit: "default" 0.0;
               min: NAVIFRAME_ICON_PADDING_INC;
            }
         }
         part { name: "padding_center_text2";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: NAVIFRAME_PADDING_INC;
               fixed: 1 0;
               align: 1.0 0.5;
               rel1 { relative: 0.0 0.0; to_x: "title_more_btn"; to_y: "title_bg"; }
               rel2 { relative: 0.0 1.0; to_x: "title_more_btn"; to_y: "title_bg"; }
               visible: 0;
            }
         }
         part { name: "padding_left";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: NAVIFRAME_PADDING_INC;
               fixed: 1 0;
               align: 0.0 0.0;
               rel1 { relative: 0.0 0.0; to: "title_bg"; }
               rel2 { relative: 0.0 1.0; to: "title_bg"; }
               visible: 0;
            }
         }
         part { name: "padding_bottom_text";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: 0 8;
               fixed: 0 1;
               align: 0.0 1.0;
               rel1 { relative: 0.0 1.0; to: "title_bg"; }
               rel2 { relative: 1.0 1.0; to: "title_bg"; }
               visible: 0;
            }
         }
         part { name: "elm.text.title";
            type: TEXT;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               text { font: "SLP:style=Medium";
                  size: NAVIFRAME_TITLE_FONT_SIZE_INC;
                  min: 0 0;
                  max: 1 0;
                  align: 0.0 0.5;
                  text_class: "slp_medium";
               }
               color: NAVIFRAME_TITLE_TEXT_COLOR_INC;
               align: 0.0 0.5;
               fixed: 1 0;
               rel1 { relative: 1.0 0.0; to: "padding_center_text1"; }
               rel2 { relative: 0.0 1.0; to: "padding_center_text2"; }
            }
            description { state: "subtitle_is_set" 0.0;
               inherit: "default" 0.0;
               align: 0.0 0.0;
               rel2 { relative: 0.0 0.6; to_x: "padding_center_text2"; to_y: "padding_center_text1"; }
            }
         }
         part { name: "elm.text.subtitle";
            type: TEXT;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               text { font: "SLP:style=Medium";
                  size: NAVIFRAME_SUBTITLE_FONT_SIZE_INC;
                  min: 0 0;
                  max: 1 0;
                  text_class: "slp_medium";
                  align: 0.0 1.0;
               }
               color: NAVIFRAME_SUBTITLE_TEXT_COLOR_INC;
               align: 0.0 1.0;
               fixed: 1 0;
               rel1 {
                  relative: 1.0 0.0;
                  to_x: "padding_left";
                  to_y: "padding_bottom_text";
               }
               rel2 {
                  relative: 0.0 0.0;
                  to_x: "padding_center_text2";
                  to_y: "padding_bottom_text";
               }
            }
         }
         part { name: "padding_before_text";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               align: 1.0 0.5;
               rel1 { relative: 0.0 0.0; to: "elm.text.title"; }
               rel2 { relative: 0.0 1.0; to: "elm.text.title"; }
               fixed: 1 0;
               min: NAVIFRAME_PADDING_INC;
               visible: 0;
            }
         }
         part { name: "elm.swallow.icon";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               max: NAVIFRAME_ICON_SIZE_INC;
               fixed: 1 1;
               rel1 { relative: 0.0 0.0; to: "padding_before_text"; }
               rel2 { relative: 0.0 1.0; to: "padding_before_text"; }
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               align: 1.0 0.5;
            }
         }
         part { name: "click_event_area";
             ignore_flags: ON_HOLD;
             repeat_events: 1;
             description { state: "default" 0.0;
                rel1 { to: "title_bg"; }
                rel2 { to: "title_bg"; }
             }
         }
         part { name: "title_left_btn";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               max: NAVIFRAME_TITLE_FUNC_BTN_SIZE_INC;
               fixed: 1 1;
               align: 1 0.5;
               rel1 { relative: 0.0 0.0; to: "title_right_btn"; }
               rel2 { relative: 0.0 1.0; to: "title_right_btn"; }
            }
         }
         part { name: "left_btn_separator";
            type: IMAGE;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: 4 48;
               max: 4 48;
               fixed: 1 1;
               align: 1.0 0.5;
               rel1 { relative: 0.0 0.0; to: "title_left_btn"; }
               rel2 { relative: 0.0 1.0; to: "title_left_btn"; }
               image {
                  normal: "00_winset_divider_line.png";
                  border: 0 2 18 0;
                  border_scale: 1;
               }
               visible: 0;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "title_right_btn";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               max: NAVIFRAME_TITLE_FUNC_BTN_SIZE_INC;
               align: 1 0.5;
               fixed: 1 1;
               rel1 { relative: 1.0 0.0; to: "title_bg"; }
               rel2 { relative: 1.0 1.0; to: "title_bg"; }
            }
         }
         part { name: "right_btn_separator";
            type: IMAGE;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: 4 48;
               max: 4 48;
               fixed: 1 1;
               align: 1.0 0.5;
               rel1 { relative: 0.0 0.0; to: "title_right_btn"; }
               rel2 { relative: 0.0 1.0; to: "title_right_btn"; }
               image {
                  normal: "00_winset_divider_line.png";
                  border: 0 2 18 0;
                  border_scale: 1;
               }
               visible: 0;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "title_more_btn";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               max: NAVIFRAME_TITLE_FUNC_BTN_SIZE_INC;
               fixed: 1 1;
               align: 1 0.5;
               rel1 { relative: 0.0 0.0; to: "title_left_btn"; }
               rel2 { relative: 0.0 1.0; to: "title_left_btn"; }
            }
         }
         part { name: "more_btn_separator";
            type: IMAGE;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: 4 48;
               max: 4 48;
               fixed: 1 1;
               align: 1.0 0.5;
               rel1 { relative: 0.0 0.0; to: "title_more_btn"; }
               rel2 { relative: 0.0 1.0; to: "title_more_btn"; }
               image {
                  normal: "00_winset_divider_line.png";
                  border: 0 2 18 0;
                  border_scale: 1;
               }
               visible: 0;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "optionheader_arrow";
            type: IMAGE;
            scale: 1;
            description { state: "default" 0.0;
               min: NAVIFRAME_OH_ARROW_SIZE_INC;
               max: NAVIFRAME_OH_ARROW_SIZE_INC;
               fixed: 1 1;
               align: 0.5 0.0;
               rel1 { relative: 0.0 0.88; to: "title_more_btn"; }
               rel2 { relative: 1.0 1.08; to: "title_more_btn"; }
               image.normal: "00_winset_control_top_arrow.png";
               color: 255 255 255 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
            }
         }
         part { name: "controlbar_bg";
            scale: 1;
            description { state: "default" 0.0;
               min: 0 0;
               max: 999999 0;
               fixed: 0 1;
               align: 0.0 1.0;
               visible: 0;
               rel1 { to: "base"; }
               rel2 { to: "base"; }
               image.normal: "00_winset_control_toolbar_bg.png";
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               min: 0 CONTROLBAR_SMALL_HEIGHT_INC;
               max: 999999 CONTROLBAR_SMALL_HEIGHT_INC;
               visible: 1;
            }
         }
         part { name: "elm.prev_btn_bg";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               min: 0 0;
               fixed: 1 0;
               align: 1.0 0.0;
               rel1 { relative: 1.0 0.0; to: "controlbar_bg"; }
               rel2.to: "controlbar_bg";
               visible: 0;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               min: NAVIFRAME_TITLE_PREV_BTN_BG_SIZE_INC 0;
            }
         }
         part { name: "prev_btn_separator";
            type: IMAGE;
            scale: 1;
            description { state: "default" 0.0;
               min: 4 48;
               max: 4 48;
               fixed: 1 1;
               align: 1.0 0.5;
               rel1 { relative: 0.0 0.0; to: "elm.prev_btn_bg"; }
               rel2 { relative: 0.0 1.0; to: "elm.prev_btn_bg"; }
               image {
                  normal: "00_winset_divider_line.png";
                  border: 0 2 18 0;
                  border_scale: 1;
               }
               visible: 0;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "elm.swallow.prev_btn";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               align: 0.5 0.5;
               rel1.to: "elm.prev_btn_bg";
               rel2.to: "elm.prev_btn_bg";
            }
         }
         part { name: "controlbar_clip";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1.to: "controlbar_bg";
               rel2 { relative: 0.0 1.0; to_x: "prev_btn_separator"; to_y: "elm.prev_btn_bg"; }
            }
         }
         part { name: "controlbar";
            type: SWALLOW;
            scale: 1;
            clip_to: "controlbar_clip";
            description { state: "default" 0.0;
               fixed: 1 1;
               rel1.to: "controlbar_clip";
               rel2.to: "controlbar_clip";
            }
         }
      }
      programs {
         program { name: "content_new_pushed";
            signal: "elm,state,new,pushed,internal";
            source: "";
            action: STATE_SET "default" 0.0;
            target: "base";
            transition: DECELERATE NAVIFRAME_VIEW_TRANS_TIME;
            after: "show_finished";
         }
         program { name: "content_cur_pushed";
            signal: "elm,state,cur,pushed,internal";
            source: "";
            action: STATE_SET "left" 0.0;
            target: "base";
            transition: DECELERATE NAVIFRAME_VIEW_TRANS_TIME;
            after: "pushed_finished";
         }
         program { name: "content_prev_popped";
            signal: "elm,state,prev,popped,internal";
            source: "";
            action: STATE_SET "default" 0.0;
            target: "base";
            transition: DECELERATE NAVIFRAME_VIEW_TRANS_TIME;
            after: "show_finished";
         }
         program { name: "content_cur_popped";
            signal: "elm,state,cur,popped,internal";
            source: "";
            action: STATE_SET "right" 0.0;
            target: "base";
            transition: DECELERATE NAVIFRAME_VIEW_TRANS_TIME;
            after: "popped_finished";
         }
         program { name: "cur_pushed";
            signal: "elm,state,cur,pushed";
            source: "elm";
            script {
               set_state(PART:"base", "default", 0.0);
               emit("elm,state,cur,pushed,internal", "");
            }
         }
         program { name: "new_pushed";
            signal: "elm,state,new,pushed";
            source: "elm";
            script {
               set_state(PART:"base", "right", 0.0);
               emit("elm,state,new,pushed,internal", "");
            }
         }
         program { name: "prev_popped";
            signal: "elm,state,prev,popped";
            source: "elm";
            script {
               set_state(PART:"base", "left", 0.0);
               emit("elm,state,prev,popped,internal", "");
            }
         }
         program { name: "cur_popped";
            signal: "elm,state,cur,popped";
            source: "elm";
            script {
               set_state(PART:"base", "default", 0.0);
               emit("elm,state,cur,popped,internal", "");
            }
         }
         program { name: "visible";
            signal: "elm,state,visible";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "base";
         }
         program { name: "title_show";
            signal: "elm,state,title,show";
            source: "elm";
            script {
               set_state(PART:"title_bg", "default", 0.0);
               if (get_int(oh_show) == 1) {
                  if (get_int(oh_close) == 1) {
                     emit("elm,state,optionheader,instant_close", "");
                  }else {
                     emit("elm,state,optionheader,instant_open", "");
                  }
               }
               else
                 set_state(PART:"optionheader_bg", "default", 0.0);
            }
         }
         program { name: "title_hide";
            signal: "elm,state,title,hide";
            source: "elm";
            action: STATE_SET "hide" 0.0;
            target: "title_bg";
            target: "optionheader_bg";
         }
         program { name: "subtitle_show";
            signal: "elm,state,subtitle,show";
            source: "elm";
            script {
               set_state(PART:"elm.text.title", "subtitle_is_set", 0.0);
            }
         }
         program { name: "subtitle_hide";
            signal: "elm,state,subtitle,hide";
            source: "elm";
            script {
               set_state(PART:"elm.text.title", "default", 0.0);
            }
         }
         program { name: "prev_btn_show";
            signal: "elm,state,prev_btn,show";
            source: "elm";
            script {
               emit("elm,state,controlbar_bg,show", "elm");
               set_state(PART:"elm.prev_btn_bg", "visible", 0.0);
               set_state(PART:"prev_btn_separator", "visible", 0.0);
            }
         }
         program { name: "prev_btn_hide";
            signal: "elm,state,prev_btn,hide";
            source: "elm";
            script {
               emit("elm,state,controlbar_bg,hide", "elm");
               set_state(PART:"elm.prev_btn_bg", "default", 0.0);
               set_state(PART:"prev_btn_separator", "default", 0.0);
            }
         }
         program { name: "icon_show";
            signal: "elm,state,icon,show";
            source: "elm";
            action: STATE_SET "icon" 0.0;
            target: "padding_center_text1";
         }
         program { name: "icon_hide";
            signal: "elm,state,icon,hide";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "padding_center_text1";
         }
         program { name: "left_btn_show";
            signal: "elm,state,title_left_btn,show";
            source: "elm";
            action: STATE_SET "visible" 0.0;
            target: "left_btn_separator";
         }
         program { name: "left_btn_hide";
            signal: "elm,state,title_left_btn,hide";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "left_btn_separator";
         }
         program { name: "right_btn_show";
            signal: "elm,state,title_right_btn,show";
            source: "elm";
            action: STATE_SET "visible" 0.0;
            target: "right_btn_separator";
         }
         program { name: "right_btn_hide";
            signal: "elm,state,title_right_btn,hide";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "right_btn_separator";
         }
         program { name: "more_btn_show";
            signal: "elm,state,title_more_btn,show";
            source: "elm";
            action: STATE_SET "visible" 0.0;
            target: "more_btn_separator";
         }
         program { name: "more_btn_hide";
            signal: "elm,state,title_more_btn,hide";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "more_btn_separator";
         }
         program { name: "controlbar_show";
            signal: "elm,state,controlbar,show";
            source: "elm";
            script {
               emit("elm,state,controlbar_bg,show", "elm");
            }
         }
         program { name: "controlbar_hide";
            signal: "elm,state,controlbar,hide";
            source: "elm";
            script {
               emit("elm,state,controlbar_bg,hide", "elm");
            }
         }
         program { name: "controlbar_bg_show";
            signal: "elm,state,controlbar_bg,show";
            source: "elm";
            script {
               set_state(PART:"controlbar_bg", "show", 0.0);
               set_int(cbar_bg, get_int(cbar_bg) + 1);
            }
         }
         program { name: "controlbar_bg_hide";
            signal: "elm,state,controlbar_bg,hide";
            source: "elm";
            script {
               set_int(cbar_bg, get_int(cbar_bg) - 1);
               if (get_int(cbar_bg) <= 0)
                 set_state(PART:"controlbar_bg", "default", 0.0);
            }
         }
         program { name: "optionheader_show";
            signal: "elm,state,optionheader,show";
            source: "elm";
            script {
               set_state(PART:"optionheader_bg", "show", 0.0);
               set_state(PART:"optionheader_arrow", "show", 0.0);
               set_int(oh_show, 1);
            }
         }
         program { name: "optionheader_hide";
            signal: "elm,state,optionheader,hide";
            source: "elm";
            script {
               set_state(PART:"optionheader_bg", "default", 0.0);
               set_state(PART:"optionheader_arrow", "default", 0.0);
               set_int(oh_show, 0);
            }
         }
         program { name: "optionheader_open";
            signal: "elm,state,optionheader,open";
            source: "";
            action: STATE_SET "show" 0.0;
            target: "optionheader_bg";
            target: "optionheader_arrow";
            transition: LINEAR 0.2;
            after: "optionheader_open_set";
         }
         program { name: "optionheader_close";
            signal: "elm,state,optionheader,close";
            source: "";
            action: STATE_SET "default" 0.0;
            target: "optionheader_bg";
            target: "optionheader_arrow";
            transition: LINEAR 0.2;
            after: "optionheader_close_set";
         }
         program { name: "optionheader_instant_open";
            signal: "elm,state,optionheader,instant_open";
            source: "";
            action: STATE_SET "show" 0.0;
            target: "optionheader_bg";
            target: "optionheader_arrow";
            after: "optionheader_open_set";
         }
         program { name: "optionheader_instant_close";
            signal: "elm,state,optionheader,instant_close";
            source: "";
            action: STATE_SET "default" 0.0;
            target: "optionheader_bg";
            target: "optionheader_arrow";
            after: "optionheader_close_set";
         }
         program { name: "optionheader_close_set";
            signal: "elm,state,optionheader,close_set";
            source: "";
            script {
               set_int(oh_close, 1);
            }
         }
         program { name: "optionheader_open_set";
            signal: "elm,state,optionheader,open_set";
            source: "";
            script {
               set_int(oh_close, 0);
            }
         }
         program { name: "controlbar_open";
            signal: "elm,state,controlbar,open";
            source: "";
            action: STATE_SET "show" 0.0;
            target: "controlbar_bg";
            transition: LINEAR 0.2;
         }
         program { name: "controlbar_close";
            signal: "elm,state,controlbar,close";
            source: "";
            action: STATE_SET "default" 0.0;
            target: "controlbar_bg";
            transition: LINEAR 0.2;
         }
         program { name: "controlbar_instant_open";
            signal: "elm,state,controlbar,instant_open";
            source: "";
            script {
               emit("elm,state,prev_btn,show", "elm");
               emit("elm,state,controlbar,show", "elm");
            }
         }
         program { name: "controlbar_instant_close";
            signal: "elm,state,controlbar,instant_close";
            source: "";
            script {
               emit("elm,state,prev_btn,hide", "elm");
               emit("elm,state,controlbar,hide", "elm");
            }
         }
         program { name: "show_finished";
            action: SIGNAL_EMIT "elm,action,show,finished" "";
         }
         program { name: "pushed_finished";
            action: SIGNAL_EMIT "elm,action,pushed,finished" "";
         }
         program { name: "popped_finished";
            action: SIGNAL_EMIT "elm,action,popped,finished" "";
         }
         program {
            name: "title_clicked";
            signal: "mouse,clicked,1";
            source: "click_event_area";
            action: SIGNAL_EMIT "elm,action,title,clicked" "";
         }
      }
   }

   group { name: "elm/naviframe/item/segment/default";
      script {
         public cbar_bg = 0;     //Controlbar BG Show call count
         public sep_show = 0;    //whether to show separator between left/right buttons
      }
      images {
         image: "00_winset_control_toolbar_bg.png" COMP;
         image: "00_winset_title_bg.png" COMP;
         image: "00_winset_divider_line.png" COMP;
      }
      parts {
         part { name: "base";
            type: RECT;
            mouse_events:  0;
            description { state: "default" 0.0;
               visible: 0;
            }
            description { state: "left" 0.0;
               inherit: "default" 0.0;
               rel1.relative: -1.0 0.0;
               rel2.relative: 0.0 1.0;
            }
            description { state: "right" 0.0;
               inherit: "default" 0.0;
               rel1.relative: 1.0 0.0;
               rel2.relative: 2.0 1.0;
            }
         }
         part { name: "title_bg";
            scale: 1;
            description { state: "default" 0.0;
               min: 1 NAVIFRAME_SEGMENT_TITLE_H_INC;
               align: 0.0 0.0;
               fixed: 0 1;
               rel1 { relative: 0.0 0.0; to: "base"; }
               rel2 { relative: 1.0 0.0; to: "base"; }
               image.normal: "00_winset_title_bg.png";
            }
            description { state: "hide" 0.0;
               inherit: "default" 0.0;
               min: 0 0;
               max: 0 0;
               fixed: 1 1;
            }
         }
         part { name: "title_clip";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1 { to: "title_bg"; }
               rel2 { to: "title_bg"; }
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            repeat_events: 0;
            clip_to: "content_clip";
            description { state: "default" 0.0;
               align: 0.0 0.0;
               rel1.relative: 0.0 1.0;
               rel1.to_x: "base";
               rel1.to_y: "title_bg";
               rel2.relative: 1.0 0.0;
               rel2.to_x: "base";
               rel2.to_y: "controlbar_bg";
            }
         }
         part { name: "content_clip";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1.to: "elm.swallow.content";
               rel2.to: "elm.swallow.content";
            }
         }
         part { name: "left_padding";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               align: 0.0 0.5;
               rel1 { relative: 0.0 0.0; }
               rel2 { relative: 0.0 1.0; }
               fixed: 1 0;
               min: NAVIFRAME_PADDING_INC;
               visible: 0;
            }
         }
         part { name: "right_padding";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               align: 1.0 0.5;
               rel1 { relative: 1.0 0.0; }
               rel2 { relative: 1.0 1.0; }
               fixed: 1 0;
               min: NAVIFRAME_PADDING_INC;
               visible: 0;
            }
         }
         part { name: "elm.text.title";
            type: TEXT;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               text { font: "SLP:style=Medium";
                  size: NAVIFRAME_TITLE_SEGMENT_FONT_SIZE_INC;
                  min: 0 0;
                  max: 1 0;
                  align: 0.5 0.5;
                  text_class: "slp_medium";
               }
               min: 0 NAVIFRAME_TITLE_SEGMENT_TEXT_H_INC;
               max: 999999 NAVIFRAME_TITLE_SEGMENT_TEXT_H_INC;
               fixed: 1 1;
               color: NAVIFRAME_TITLE_TEXT_COLOR_INC;
               align: 0 0;
               rel1.to: "left_padding";
               rel1.relative: 1.0 0.0;
               rel2.to: "right_padding";
               rel2.relative: 0.0 1.0;
            }
         }
         part { name: "click_event_area";
             ignore_flags: ON_HOLD;
             repeat_events: 1;
             description { state: "default" 0.0;
                rel1 { to: "title_bg"; }
                rel2 { to: "title_bg"; }
             }
         }
         part { name: "title_left_btn";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               max: NAVIFRAME_SEGMENT_TITLE_FUNC_BTN_SIZE_INC;
               fixed: 1 1;
               align: 1.0 0.0;
               rel1 { relative: 0.0 1.0; to_x: "title_right_btn"; to_y: "elm.text.title"; }
               rel2 { relative: 0.0 1.0; to_x: "title_right_btn"; to_y: "elm.text.title"; }
            }
         }
         part { name: "left_btn_Padding";
            type: RECT;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: 4 0;
               fixed: 1 0;
               align: 1.0 0.5;
               rel1 { relative: 0.0 0.0; to: "title_left_btn"; }
               rel2 { relative: 0.0 1.0; to: "title_left_btn"; }
               visible: 0;
            }
         }
         part { name: "title_right_btn";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               max: NAVIFRAME_TITLE_FUNC_BTN_SIZE_INC;
               align: 1.0 0.0;
               fixed: 1 1;
               rel1 { relative: 1.0 1.0; to_x: "title_bg"; to_y: "elm.text.title"; }
               rel2 { relative: 1.0 1.0; to_x: "title_bg"; to_y: "elm.text.title"; }
            }
         }
         part { name: "btns_separator";
            type: IMAGE;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: 4 48;
               max: 4 48;
               fixed: 1 1;
               align: 1.0 0.5;
               rel1 { relative: 0.0 0.0; to: "title_right_btn"; }
               rel2 { relative: 0.0 1.0; to: "title_right_btn"; }
               image {
                  normal: "00_winset_divider_line.png";
                  border: 0 2 18 0;
                  border_scale: 1;
               }
               visible: 0;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "segment";
            type: "SWALLOW";
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: 0 NAVIFRAME_TITLE_SEGMENT_H_INC;
               max: 999999 NAVIFRAME_TITLE_SEGMENT_H_INC;
               fixed: 1 1;
               align: 0.5 0;
               rel1.to_x: "left_padding";
               rel1.to_y: "elm.text.title";
               rel1.relative: 1 1;
               rel2.to_x: "right_padding";
               rel2.to_y: "elm.text.title";
               rel2.relative: 0 1;
            }
            description { state: "buttons_set" 0.0;
               inherit: "default" 0.0;
               rel2.to_x: "left_btn_Padding";
            }
         }
         part { name: "controlbar_bg";
            scale: 1;
            description { state: "default" 0.0;
               min: 0 0;
               max: 999999 0;
               fixed: 0 1;
               align: 0.0 1.0;
               visible: 0;
               rel1 { to: "base"; }
               rel2 { to: "base"; }
               image.normal: "00_winset_control_toolbar_bg.png";
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               min: 0 CONTROLBAR_SMALL_HEIGHT_INC;
               max: 999999 CONTROLBAR_SMALL_HEIGHT_INC;
               visible: 1;
            }
         }
         part { name: "elm.prev_btn_bg";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               min: 0 0;
               fixed: 1 0;
               align: 1.0 0.0;
               rel1 { relative: 1.0 0.0; to: "controlbar_bg"; }
               rel2.to: "controlbar_bg";
               visible: 0;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               min: NAVIFRAME_TITLE_PREV_BTN_BG_SIZE_INC 0;
            }
         }
         part { name: "prev_btn_separator";
            type: IMAGE;
            scale: 1;
            description { state: "default" 0.0;
               min: 4 48;
               max: 4 48;
               fixed: 1 1;
               align: 1.0 0.5;
               rel1 { relative: 0.0 0.0; to: "elm.prev_btn_bg"; }
               rel2 { relative: 0.0 1.0; to: "elm.prev_btn_bg"; }
               image {
                  normal: "00_winset_divider_line.png";
                  border: 0 2 18 0;
                  border_scale: 1;
               }
               visible: 0;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
        part { name: "elm.swallow.prev_btn";
           type: SWALLOW;
           scale: 1;
           description { state: "default" 0.0;
              fixed: 1 1;
              align: 0.5 0.5;
              rel1.to: "elm.prev_btn_bg";
              rel2.to: "elm.prev_btn_bg";
           }
        }
         part { name: "controlbar_clip";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1.to: "controlbar_bg";
               rel2 { relative: 0.0 1.0; to_x: "prev_btn_separator"; to_y: "elm.prev_btn_bg"; }
            }
         }
         part { name: "controlbar";
            type: SWALLOW;
            scale: 1;
            clip_to: "controlbar_clip";
            description { state: "default" 0.0;
               fixed: 1 1;
               rel1.to: "controlbar_clip";
               rel2.to: "controlbar_clip";
            }
         }
      }
      programs {
         program { name: "content_new_pushed";
            signal: "elm,state,new,pushed,internal";
            source: "";
            action: STATE_SET "default" 0.0;
            target: "base";
            transition: DECELERATE NAVIFRAME_VIEW_TRANS_TIME;
            after: "show_finished";
         }
         program { name: "content_cur_pushed";
            signal: "elm,state,cur,pushed,internal";
            source: "";
            action: STATE_SET "left" 0.0;
            target: "base";
            transition: DECELERATE NAVIFRAME_VIEW_TRANS_TIME;
            after: "pushed_finished";
         }
         program { name: "content_prev_popped";
            signal: "elm,state,prev,popped,internal";
            source: "";
            action: STATE_SET "default" 0.0;
            target: "base";
            transition: DECELERATE NAVIFRAME_VIEW_TRANS_TIME;
            after: "show_finished";
         }
         program { name: "content_cur_popped";
            signal: "elm,state,cur,popped,internal";
            source: "";
            action: STATE_SET "right" 0.0;
            target: "base";
            transition: DECELERATE NAVIFRAME_VIEW_TRANS_TIME;
            after: "popped_finished";
         }
         program { name: "cur_pushed";
            signal: "elm,state,cur,pushed";
            source: "elm";
            script {
               set_state(PART:"base", "default", 0.0);
               emit("elm,state,cur,pushed,internal", "");
            }
         }
         program { name: "new_pushed";
            signal: "elm,state,new,pushed";
            source: "elm";
            script {
               set_state(PART:"base", "right", 0.0);
               emit("elm,state,new,pushed,internal", "");
            }
         }
         program { name: "prev_popped";
            signal: "elm,state,prev,popped";
            source: "elm";
            script {
               set_state(PART:"base", "left", 0.0);
               emit("elm,state,prev,popped,internal", "");
            }
         }
         program { name: "cur_popped";
            signal: "elm,state,cur,popped";
            source: "elm";
            script {
               set_state(PART:"base", "default", 0.0);
               emit("elm,state,cur,popped,internal", "");
            }
         }
         program { name: "visible";
            signal: "elm,state,visible";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "base";
         }
         program { name: "title_show";
            signal: "elm,state,title,show";
            source: "elm";
            action: STATE_SET "show" 0.0;
            target: "title_bg";
         }
         program { name: "title_hide";
            signal: "elm,state,title,hide";
            source: "elm";
            action: STATE_SET "hide" 0.0;
            target: "title_bg";
         }
         program { name: "left_btn_show";
            signal: "elm,state,title_left_btn,show";
            source: "elm";
            script {
               set_state(PART:"segment", "buttons_set", 0.0);
               set_int(sep_show, get_int(sep_show) + 1);
               if (get_int(sep_show) >= 2)
                 set_state(PART:"btns_separator", "visible", 0.0);
            }
         }
         program { name: "left_btn_hide";
            signal: "elm,state,title_left_btn,hide";
            source: "elm";
            script {
               if (get_int(sep_show) == 0)
                 set_state(PART:"segment", "default", 0.0);
               set_int(sep_show, get_int(sep_show) - 1);
               set_state(PART:"btns_separator", "default", 0.0);
            }
         }
         program { name: "right_btn_show";
            signal: "elm,state,title_right_btn,show";
            source: "elm";
            script {
               set_state(PART:"segment", "buttons_set", 0.0);
               set_int(sep_show, get_int(sep_show) + 1);
               if (get_int(sep_show) >= 2)
                 set_state(PART:"btns_separator", "visible", 0.0);
            }
         }
         program { name: "right_btn_hide";
            signal: "elm,state,title_right_btn,hide";
            source: "elm";
            script {
               if (get_int(sep_show) == 0)
                 set_state(PART:"segment", "default", 0.0);
               set_int(sep_show, get_int(sep_show) - 1);
               set_state(PART:"btns_separator", "default", 0.0);
            }
         }
         program { name: "prev_btn_show";
            signal: "elm,state,prev_btn,show";
            source: "elm";
            script {
               emit("elm,state,controlbar_bg,show", "elm");
               set_state(PART:"elm.prev_btn_bg", "visible", 0.0);
               set_state(PART:"prev_btn_separator", "visible", 0.0);
            }
         }
         program { name: "prev_btn_hide";
            signal: "elm,state,prev_btn,hide";
            source: "elm";
            script {
               emit("elm,state,controlbar_bg,hide", "elm");
               set_state(PART:"elm.prev_btn_bg", "default", 0.0);
               set_state(PART:"prev_btn_separator", "default", 0.0);
            }
         }
         program { name: "controlbar_show";
            signal: "elm,state,controlbar,show";
            source: "elm";
            script {
               emit("elm,state,controlbar_bg,show", "elm");
            }
         }
         program { name: "controlbar_hide";
            signal: "elm,state,controlbar,hide";
            source: "elm";
            script {
               emit("elm,state,controlbar_bg,hide", "elm");
            }
         }
         program { name: "controlbar_bg_show";
            signal: "elm,state,controlbar_bg,show";
            source: "elm";
            script {
               set_state(PART:"controlbar_bg", "show", 0.0);
               set_int(cbar_bg, get_int(cbar_bg) + 1);
            }
         }
         program { name: "controlbar_bg_hide";
            signal: "elm,state,controlbar_bg,hide";
            source: "elm";
            script {
               set_int(cbar_bg, get_int(cbar_bg) - 1);
               if (get_int(cbar_bg) <= 0)
                 set_state(PART:"controlbar_bg", "default", 0.0);
            }
         }
         program { name: "controlbar_open";
            signal: "elm,state,controlbar,open";
            source: "";
            action: STATE_SET "show" 0.0;
            target: "controlbar_bg";
            transition: LINEAR 0.2;
         }
         program { name: "controlbar_close";
            signal: "elm,state,controlbar,close";
            source: "";
            action: STATE_SET "default" 0.0;
            target: "controlbar_bg";
            transition: LINEAR 0.2;
         }
         program { name: "controlbar_instant_open";
            signal: "elm,state,controlbar,instant_open";
            source: "";
            script {
               emit("elm,state,prev_btn,show", "elm");
               emit("elm,state,controlbar,show", "elm");
            }
         }
         program { name: "controlbar_instant_close";
            signal: "elm,state,controlbar,instant_close";
            source: "";
            script {
               emit("elm,state,prev_btn,hide", "elm");
               emit("elm,state,controlbar,hide", "elm");
            }
         }
         program { name: "show_finished";
            action: SIGNAL_EMIT "elm,action,show,finished" "";
         }
         program { name: "pushed_finished";
            action: SIGNAL_EMIT "elm,action,pushed,finished" "";
         }
         program { name: "popped_finished";
            action: SIGNAL_EMIT "elm,action,popped,finished" "";
         }
         program {
            name: "title_clicked";
            signal: "mouse,clicked,1";
            source: "click_event_area";
            action: SIGNAL_EMIT "elm,action,title,clicked" "";
         }
      }
   }
   group { name: "elm/naviframe/item/tabbar/default";
      script {
         public cbar_bg = 0;     //Controlbar BG Show call count
      }
      images {
         image: "00_winset_control_toolbar_bg.png" COMP;
         image: "00_winset_title_bg.png" COMP;
         image: "00_winset_divider_line.png" COMP;
      }
      parts {
         part { name: "base";
            type: RECT;
            mouse_events:  0;
            description { state: "default" 0.0;
               visible: 0;
            }
            description { state: "left" 0.0;
               inherit: "default" 0.0;
               rel1.relative: -1.0 0.0;
               rel2.relative: 0.0 1.0;
            }
            description { state: "right" 0.0;
               inherit: "default" 0.0;
               rel1.relative: 1.0 0.0;
               rel2.relative: 2.0 1.0;
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            repeat_events: 0;
            clip_to: "content_clip";
            description { state: "default" 0.0;
               align: 0.0 0.0;
               rel1.relative: 0.0 0.0;
               rel1.to: "base";
               rel2.relative: 1.0 0.0;
               rel2.to_x: "base";
               rel2.to_y: "controlbar_bg";
            }
         }
         part { name: "content_clip";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1.to: "elm.swallow.content";
               rel2.to: "elm.swallow.content";
            }
         }
         part { name: "controlbar_bg";
            scale: 1;
            description { state: "default" 0.0;
               min: 0 0;
               max: 999999 0;
               fixed: 0 1;
               align: 0.0 1.0;
               visible: 0;
               rel1 { to: "base"; }
               rel2 { to: "base"; }
               image.normal: "00_winset_control_toolbar_bg.png";
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               min: 0 CONTROLBAR_SMALL_HEIGHT_INC;
               max: 999999 CONTROLBAR_SMALL_HEIGHT_INC;
               visible: 1;
            }
         }
         part { name: "elm.prev_btn_bg";
           type: RECT;
           scale: 1;
           description { state: "default" 0.0;
              min: 0 0;
              fixed: 1 0;
              align: 1.0 0.0;
              rel1 { relative: 1.0 0.0; to: "controlbar_bg"; }
              rel2.to: "controlbar_bg";
              visible: 0;
           }
           description { state: "visible" 0.0;
              inherit: "default" 0.0;
              min: NAVIFRAME_TITLE_PREV_BTN_BG_SIZE_INC 0;
           }
         }
         part { name: "prev_btn_separator";
            type: IMAGE;
            scale: 1;
            description { state: "default" 0.0;
               min: 4 48;
               max: 4 48;
               fixed: 1 1;
               align: 1.0 0.5;
               rel1 { relative: 0.0 0.0; to: "elm.prev_btn_bg"; }
               rel2 { relative: 0.0 1.0; to: "elm.prev_btn_bg"; }
               image {
                  normal: "00_winset_divider_line.png";
                  border: 0 2 18 0;
                  border_scale: 1;
               }
               visible: 0;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "elm.swallow.prev_btn";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               align: 0.5 0.5;
               rel1.to: "elm.prev_btn_bg";
               rel2.to: "elm.prev_btn_bg";
            }
         }
         part { name: "controlbar_clip";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1.to: "controlbar_bg";
               rel2 { relative: 0.0 1.0; to_x: "prev_btn_separator"; to_y: "elm.prev_btn_bg"; }
            }
         }
         part { name: "controlbar";
            type: SWALLOW;
            scale: 1;
            clip_to: "controlbar_clip";
            description { state: "default" 0.0;
               fixed: 1 1;
               rel1.to: "controlbar_clip";
               rel2.to: "controlbar_clip";
            }
         }
      }
      programs {
         program { name: "content_new_pushed";
            signal: "elm,state,new,pushed,internal";
            source: "";
            action: STATE_SET "default" 0.0;
            target: "base";
            transition: DECELERATE NAVIFRAME_VIEW_TRANS_TIME;
            after: "show_finished";
         }
         program { name: "content_cur_pushed";
            signal: "elm,state,cur,pushed,internal";
            source: "";
            action: STATE_SET "left" 0.0;
            target: "base";
            transition: DECELERATE NAVIFRAME_VIEW_TRANS_TIME;
            after: "pushed_finished";
         }
         program { name: "content_prev_popped";
            signal: "elm,state,prev,popped,internal";
            source: "";
            action: STATE_SET "default" 0.0;
            target: "base";
            transition: DECELERATE NAVIFRAME_VIEW_TRANS_TIME;
            after: "show_finished";
         }
         program { name: "content_cur_popped";
            signal: "elm,state,cur,popped,internal";
            source: "";
            action: STATE_SET "right" 0.0;
            target: "base";
            transition: DECELERATE NAVIFRAME_VIEW_TRANS_TIME;
            after: "popped_finished";
         }
         program { name: "cur_pushed";
            signal: "elm,state,cur,pushed";
            source: "elm";
            script {
               set_state(PART:"base", "default", 0.0);
               emit("elm,state,cur,pushed,internal", "");
            }
         }
         program { name: "new_pushed";
            signal: "elm,state,new,pushed";
            source: "elm";
            script {
               set_state(PART:"base", "right", 0.0);
               emit("elm,state,new,pushed,internal", "");
            }
         }
         program { name: "prev_popped";
            signal: "elm,state,prev,popped";
            source: "elm";
            script {
               set_state(PART:"base", "left", 0.0);
               emit("elm,state,prev,popped,internal", "");
            }
         }
         program { name: "cur_popped";
            signal: "elm,state,cur,popped";
            source: "elm";
            script {
               set_state(PART:"base", "default", 0.0);
               emit("elm,state,cur,popped,internal", "");
            }
         }
         program { name: "visible";
            signal: "elm,state,visible";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "base";
         }
         program { name: "prev_btn_show";
            signal: "elm,state,prev_btn,show";
            source: "elm";
            script {
               emit("elm,state,controlbar_bg,show", "elm");
               set_state(PART:"elm.prev_btn_bg", "visible", 0.0);
               set_state(PART:"prev_btn_separator", "visible", 0.0);
            }
         }
         program { name: "prev_btn_hide";
            signal: "elm,state,prev_btn,hide";
            source: "elm";
            script {
               emit("elm,state,controlbar_bg,hide", "elm");
               set_state(PART:"elm.prev_btn_bg", "default", 0.0);
               set_state(PART:"prev_btn_separator", "default", 0.0);
            }
         }
         program { name: "controlbar_show";
            signal: "elm,state,controlbar,show";
            source: "elm";
            action: STATE_SET "show" 0.0;
            script {
               emit("elm,state,controlbar_bg,show", "elm");
            }
         }
         program { name: "controlbar_hide";
            signal: "elm,state,controlbar,hide";
            source: "elm";
            script {
               emit("elm,state,controlbar_bg,hide", "elm");
            }
         }
         program { name: "controlbar_bg_show";
            signal: "elm,state,controlbar_bg,show";
            source: "elm";
            script {
               set_state(PART:"controlbar_bg", "show", 0.0);
               set_int(cbar_bg, get_int(cbar_bg) + 1);
            }
         }
         program { name: "controlbar_bg_hide";
            signal: "elm,state,controlbar_bg,hide";
            source: "elm";
            script {
               set_int(cbar_bg, get_int(cbar_bg) - 1);
               if (get_int(cbar_bg) <= 0)
                 set_state(PART:"controlbar_bg", "default", 0.0);
            }
         }
         program { name: "controlbar_open";
            signal: "elm,state,controlbar,open";
            source: "";
            action: STATE_SET "show" 0.0;
            target: "controlbar_bg";
            transition: LINEAR 0.2;
         }
         program { name: "controlbar_close";
            signal: "elm,state,controlbar,close";
            source: "";
            action: STATE_SET "default" 0.0;
            target: "controlbar_bg";
            transition: LINEAR 0.2;
         }
         program { name: "controlbar_instant_open";
            signal: "elm,state,controlbar,instant_open";
            source: "";
            script {
               emit("elm,state,prev_btn,show", "elm");
               emit("elm,state,controlbar,show", "elm");
            }
         }
         program { name: "controlbar_instant_close";
            signal: "elm,state,controlbar,instant_close";
            source: "";
            script {
               emit("elm,state,prev_btn,hide", "elm");
               emit("elm,state,controlbar,hide", "elm");
            }
         }
         program { name: "show_finished";
            action: SIGNAL_EMIT "elm,action,show,finished" "";
         }
         program { name: "pushed_finished";
            action: SIGNAL_EMIT "elm,action,pushed,finished" "";
         }
         program { name: "popped_finished";
            action: SIGNAL_EMIT "elm,action,popped,finished" "";
         }
         program {
            name: "title_clicked";
            signal: "mouse,clicked,1";
            source: "click_event_area";
            action: SIGNAL_EMIT "elm,action,title,clicked" "";
         }
      }
   }

   group { name:"elm/naviframe/item/basic/instant/default";
      inherit: "elm/naviframe/item/basic/default";
      alias:"elm/naviframe/item/1line/instant/default";
      alias:"elm/naviframe/item/instant/default";
      script {
         public oh_show = 0;     //optionheader show/hide
         public oh_close = 0;    //optionheader close/open
         public cbar_bg = 0;     //Controlbar BG Show call count
      }
      programs {
         program { name: "cur_pushed";
            signal: "elm,state,cur,pushed";
            source: "elm";
            after: "pushed_finished";
         }
         program { name: "new_pushed";
            signal: "elm,state,new,pushed";
            source: "elm";
            after: "show_finished";
         }
         program { name: "prev_popped";
            signal: "elm,state,prev,popped";
            source: "elm";
            after: "show_finished";
         }
         program { name: "cur_popped";
            signal: "elm,state,cur,popped";
            source: "elm";
            after: "popped_finished";
         }
      }
   }
   group { name:"elm/naviframe/item/basic2/instant/default";
      inherit: "elm/naviframe/item/basic2/default";
      alias:"elm/naviframe/item/2line/instant/default";
      alias:"elm/naviframe/item/instant2/default";
      script {
         public oh_show = 0;     //optionheader show/hide
         public oh_close = 0;    //optionheader close/open
         public cbar_bg = 0;     //Controlbar BG Show call count
      }
      programs {
         program { name: "cur_pushed";
            signal: "elm,state,cur,pushed";
            source: "elm";
            after: "pushed_finished";
         }
         program { name: "new_pushed";
            signal: "elm,state,new,pushed";
            source: "elm";
            after: "show_finished";
         }
         program { name: "prev_popped";
            signal: "elm,state,prev,popped";
            source: "elm";
            after: "show_finished";
         }
         program { name: "cur_popped";
            signal: "elm,state,cur,popped";
            source: "elm";
            after: "popped_finished";
         }
      }
   }
   group { name: "elm/naviframe/item/segment/instant/default";
      inherit:  "elm/naviframe/item/segment/default";
      script {
         public cbar_bg = 0;     //Controlbar BG Show call count
         public sep_show = 0;     //Controlbar BG Show call count
      }
      programs {
         program { name: "cur_pushed";
            signal: "elm,state,cur,pushed";
            source: "elm";
            after: "pushed_finished";
         }
         program { name: "new_pushed";
            signal: "elm,state,new,pushed";
            source: "elm";
            after: "show_finished";
         }
         program { name: "prev_popped";
            signal: "elm,state,prev,popped";
            source: "elm";
            after: "show_finished";
         }
         program { name: "cur_popped";
            signal: "elm,state,cur,popped";
            source: "elm";
            after: "popped_finished";
         }
         program { name: "title_show";
            signal: "elm,state,title,show";
            source: "elm";
            action: STATE_SET "show" 0.0;
            target: "title_clip";
         }
         program { name: "title_hide";
            signal: "elm,state,title,hide";
            source: "elm";
            action: STATE_SET "hide" 0.0;
            target: "title_clip";
         }
      }
   }

   group { name: "elm/naviframe/item/tabbar/instant/default";
      inherit:  "elm/naviframe/item/tabbar/default";
      script {
         public cbar_bg = 0;     //Controlbar BG Show call count
      }
      programs {
         program { name: "cur_pushed";
            signal: "elm,state,cur,pushed";
            source: "elm";
            after: "pushed_finished";
         }
         program { name: "new_pushed";
            signal: "elm,state,new,pushed";
            source: "elm";
            after: "show_finished";
         }
         program { name: "prev_popped";
            signal: "elm,state,prev,popped";
            source: "elm";
            after: "show_finished";
         }
         program { name: "cur_popped";
            signal: "elm,state,cur,popped";
            source: "elm";
            after: "popped_finished";
         }
         program { name: "controlbar_bgp_hide";
            signal: "elm,state,controlbar_bg,hide";
            source: "elm";
            script {
               set_int(cbar_bg, get_int(cbar_bg) - 1);
               if (get_int(cbar_bg) <= 0)
                 set_state(PART:"controlbar_bg", "default", 0.0);
            }
         }
      }
   }

   group { name:"elm/naviframe/item/empty/default";
      images {
          image: "00_winset_control_top_bg.png" COMP;
          image: "00_winset_control_top_arrow.png" COMP;
          image: "00_winset_control_toolbar_bg.png" COMP;
          image: "00_winset_title_bg.png" COMP;
          image: "00_winset_divider_line.png" COMP;
      }
      script {
         public oh_show = 0;     //optionheader show/hide
         public oh_close = 0;    //optionheader close/open
         public cbar_bg = 0;     //Controlbar BG Show call count
      }
      parts {
         part { name: "base";
            type: RECT;
            mouse_events:  0;
            description { state: "default" 0.0;
               visible: 0;
            }
            description { state: "left" 0.0;
               inherit: "default" 0.0;
               rel1.relative: -1.0 0.0;
               rel2.relative: 0.0 1.0;
            }
            description { state: "right" 0.0;
               inherit: "default" 0.0;
               rel1.relative: 1.0 0.0;
               rel2.relative: 2.0 1.0;
            }
         }
         part { name: "title_bg";
            scale: 1;
            description { state: "default" 0.0;
               rel1 { to: "title"; }
               rel2 { to: "title"; }
               image.normal: "00_winset_title_bg.png";
            }
            description { state: "hide" 0.0;
               inherit: "default" 0.0;
               min: 0 0;
               max: 0 0;
               fixed: 1 1;
            }
         }
         part { name: "title_clip";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1 { to: "base"; }
               rel2 { to: "base"; }
            }
         }
         part { name: "optionheader_bg";
            type: IMAGE;
            scale: 1;
            description { state: "default" 0.0;
               min: 1 0;
               align: 0.5 0;
               fixed: 0 1;
               rel1.to: "title_bg";
               rel1.relative: 0 1;
               rel2.to: "title_bg";
               visible: 0;
               image { normal: "00_winset_control_top_bg.png";
                  border: NAVIFRAME_OH_BORDER_INC;
               }
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               min: 1 NAVIFRAME_OH_OPENED_H_INC;
               visible: 1;
            }
            description { state: "hide" 0.0;
               inherit: "default" 0.0;
               min: 0 0;
               max: 0 0;
               fixed: 1 1;
            }
         }
         part { name: "optionheader_clip";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1 { to: "optionheader_bg"; }
               rel2 { to: "optionheader_bg"; }
            }
         }
         part { name: "optionheader_top_padding";
            type: RECT;
            scale: 1;
            clip_to: "optionheader_clip";
            description { state: "default" 0.0;
               min: 0 NAVIFRAME_OH_PADDING_INC;
               rel1 { relative: 0.0 0.0; to: "optionheader_bg"; }
               rel2 { relative: 1.0 0.0; to: "optionheader_bg"; }
               fixed: 0 1;
               align: 0.0 0.0;
               visible: 0;
            }
         }
         part { name: "optionheader";
            type: SWALLOW;
            scale: 1;
            clip_to: "optionheader_clip";
            description { state: "default" 0.0;
               min: 0 NAVIFRAME_OH_CONTENT_H_INC;
               rel1 { relative: 0.0 1.0; to: "optionheader_top_padding"; }
               rel2 { relative: 1.0 1.0; to: "optionheader_top_padding"; }
               fixed: 0 1;
               align: 0.0 0.0;
            }
         }
         part { name: "optionheader_bottom_padding";
            type: RECT;
            scale: 1;
            clip_to: "optionheader_clip";
            description { state: "default" 0.0;
               min: 0 NAVIFRAME_OH_PADDING_INC;
               rel1 { relative: 0.0 1.0; to: "optionheader"; }
               rel2 { relative: 1.0 1.0; to: "optionheader"; }
               fixed: 0 1;
               align: 0.0 0.0;
               visible: 0;
            }
         }
         part { name: "optionheader_shadow";
            type: RECT;
            scale: 1;
            clip_to: "optionheader_clip";
            description { state: "default" 0.0;
               min: 0 NAVIFRAME_OH_SHADOW_INC;
               rel1 { relative: 0.0 1.0; to: "optionheader_bottom_padding"; }
               rel2 { relative: 1.0 1.0; to: "optionheader_bottom_padding"; }
               fixed: 0 1;
               align: 0.0 0.0;
               visible: 0;
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            repeat_events: 0;
            clip_to: "content_clip";
            description { state: "default" 0.0;
               align: 0.0 0.0;
               rel1.relative: 0.0 1.0;
               rel1.to_x: "base";
               rel1.to_y: "optionheader_bg";
               rel2.relative: 1.0 0.0;
               rel2.to_x: "base";
               rel2.to_y: "controlbar_bg";
            }
         }
         part { name: "content_clip";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1.to: "elm.swallow.content";
               rel2.to: "elm.swallow.content";
            }
         }
         part { name: "title";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               align: 0.5 0.0;
               fixed: 0 1;
               rel1 { relative: 0.0 0.0; to: "base"; }
               rel2 { relative: 1.0 0.0; to: "base"; }
            }
            description { state: "hide" 0.0;
               inherit: "default" 0.0;
               visible: 0;
               min: 0 0;
               max: 0 0;
               fixed: 1 1;
            }
         }
         part { name: "controlbar_bg";
            scale: 1;
            description { state: "default" 0.0;
               min: 0 0;
               max: 999999 0;
               fixed: 0 1;
               align: 0.0 1.0;
               visible: 0;
               rel1 { to: "base"; }
               rel2 { to: "base"; }
               image.normal: "00_winset_control_toolbar_bg.png";
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               min: 0 CONTROLBAR_SMALL_HEIGHT_INC;
               max: 999999 CONTROLBAR_SMALL_HEIGHT_INC;
               visible: 1;
            }
         }
         part { name: "elm.prev_btn_bg";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               min: 0 0;
               fixed: 1 0;
               align: 1.0 0.0;
               rel1 { relative: 1.0 0.0; to: "controlbar_bg"; }
               rel2.to: "controlbar_bg";
               visible: 0;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               min: NAVIFRAME_TITLE_PREV_BTN_BG_SIZE_INC 0;
            }
         }
         part { name: "prev_btn_separator";
            type: IMAGE;
            scale: 1;
            description { state: "default" 0.0;
               min: 4 48;
               max: 4 48;
               fixed: 1 1;
               align: 1.0 0.5;
               rel1 { relative: 0.0 0.0; to: "elm.prev_btn_bg"; }
               rel2 { relative: 0.0 1.0; to: "elm.prev_btn_bg"; }
               image {
                  normal: "00_winset_divider_line.png";
                  border: 0 2 18 0;
                  border_scale: 1;
               }
               visible: 0;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "elm.swallow.prev_btn";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               align: 0.5 0.5;
               rel1.to: "elm.prev_btn_bg";
               rel2.to: "elm.prev_btn_bg";
            }
         }
         part { name: "controlbar_clip";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1.to: "controlbar_bg";
               rel2 { relative: 0.0 1.0; to_x: "prev_btn_separator"; to_y: "elm.prev_btn_bg"; }
            }
         }
         part { name: "controlbar";
            type: SWALLOW;
            scale: 1;
            clip_to: "controlbar_clip";
            description { state: "default" 0.0;
               fixed: 1 1;
               rel1.to: "controlbar_clip";
               rel2.to: "controlbar_clip";
            }
         }
      }
      programs {
         program { name: "content_new_pushed";
            signal: "elm,state,new,pushed,internal";
            source: "";
            action: STATE_SET "default" 0.0;
            target: "base";
            transition: DECELERATE NAVIFRAME_VIEW_TRANS_TIME;
            after: "show_finished";
         }
         program { name: "content_cur_pushed";
            signal: "elm,state,cur,pushed,internal";
            source: "";
            action: STATE_SET "left" 0.0;
            target: "base";
            transition: DECELERATE NAVIFRAME_VIEW_TRANS_TIME;
            after: "pushed_finished";
         }
         program { name: "content_prev_popped";
            signal: "elm,state,prev,popped,internal";
            source: "";
            action: STATE_SET "default" 0.0;
            target: "base";
            transition: DECELERATE NAVIFRAME_VIEW_TRANS_TIME;
            after: "show_finished";
         }
         program { name: "content_cur_popped";
            signal: "elm,state,cur,popped,internal";
            source: "";
            action: STATE_SET "right" 0.0;
            target: "base";
            transition: DECELERATE NAVIFRAME_VIEW_TRANS_TIME;
            after: "popped_finished";
         }
         program { name: "cur_pushed";
            signal: "elm,state,cur,pushed";
            source: "elm";
            script {
               set_state(PART:"base", "default", 0.0);
               emit("elm,state,cur,pushed,internal", "");
            }
         }
         program { name: "new_pushed";
            signal: "elm,state,new,pushed";
            source: "elm";
            script {
               set_state(PART:"base", "right", 0.0);
               emit("elm,state,new,pushed,internal", "");
            }
         }
         program { name: "prev_popped";
            signal: "elm,state,prev,popped";
            source: "elm";
            script {
               set_state(PART:"base", "left", 0.0);
               emit("elm,state,prev,popped,internal", "");
            }
         }
         program { name: "cur_popped";
            signal: "elm,state,cur,popped";
            source: "elm";
            script {
               set_state(PART:"base", "default", 0.0);
               emit("elm,state,cur,popped,internal", "");
            }
         }
         program { name: "visible";
            signal: "elm,state,visible";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "base";
         }
         program { name: "title_show";
            signal: "elm,state,title,show";
            source: "elm";
            script {
               set_state(PART:"title", "default", 0.0);
               set_state(PART:"title_bg", "default", 0.0);
               if (get_int(oh_show) == 1) {
                  if (get_int(oh_close) == 1) {
                     emit("elm,state,optionheader,instant_close", "");
                  }else {
                     emit("elm,state,optionheader,instant_open", "");
                  }
               }
               else
                 set_state(PART:"optionheader_bg", "default", 0.0);
            }
         }
         program { name: "title_hide";
            signal: "elm,state,title,hide";
            source: "elm";
            action: STATE_SET "hide" 0.0;
            target: "title";
            target: "title_bg";
            target: "optionheader_bg";
         }
         program { name: "prev_btn_show";
            signal: "elm,state,prev_btn,show";
            source: "elm";
            script {
               emit("elm,state,controlbar_bg,show", "elm");
               set_state(PART:"elm.prev_btn_bg", "visible", 0.0);
               set_state(PART:"prev_btn_separator", "visible", 0.0);
            }
         }
         program { name: "prev_btn_hide";
            signal: "elm,state,prev_btn,hide";
            source: "elm";
            script {
               emit("elm,state,controlbar_bg,hide", "elm");
               set_state(PART:"elm.prev_btn_bg", "default", 0.0);
               set_state(PART:"prev_btn_separator", "default", 0.0);
            }
         }
         program { name: "controlbar_show";
            signal: "elm,state,controlbar,show";
            source: "elm";
            script {
               emit("elm,state,controlbar_bg,show", "elm");
            }
         }
         program { name: "controlbar_hide";
            signal: "elm,state,controlbar,hide";
            source: "elm";
            script {
               emit("elm,state,controlbar_bg,hide", "elm");
            }
         }
         program { name: "controlbar_bg_show";
            signal: "elm,state,controlbar_bg,show";
            source: "elm";
            script {
               set_state(PART:"controlbar_bg", "show", 0.0);
               set_int(cbar_bg, get_int(cbar_bg) + 1);
            }
         }
         program { name: "controlbar_bg_hide";
            signal: "elm,state,controlbar_bg,hide";
            source: "elm";
            script {
               set_int(cbar_bg, get_int(cbar_bg) - 1);
               if (get_int(cbar_bg) <= 0)
                 set_state(PART:"controlbar_bg", "default", 0.0);
            }
         }
         program { name: "optionheader_show";
            signal: "elm,state,optionheader,show";
            source: "elm";
            script {
               set_state(PART:"optionheader_bg", "show", 0.0);
               set_int(oh_show, 1);
            }
         }
         program { name: "optionheader_hide";
            signal: "elm,state,optionheader,hide";
            source: "elm";
            script {
               set_state(PART:"optionheader_bg", "default", 0.0);
               set_int(oh_show, 0);
            }
         }
         program { name: "optionheader_open";
            signal: "elm,state,optionheader,open";
            source: "";
            action: STATE_SET "show" 0.0;
            target: "optionheader_bg";
            transition: LINEAR 0.2;
            after: "optionheader_open_set";
         }
         program { name: "optionheader_close";
            signal: "elm,state,optionheader,close";
            source: "";
            action: STATE_SET "default" 0.0;
            target: "optionheader_bg";
            transition: LINEAR 0.2;
            after: "optionheader_close_set";
         }
         program { name: "optionheader_instant_open";
            signal: "elm,state,optionheader,instant_open";
            source: "";
            action: STATE_SET "show" 0.0;
            target: "optionheader_bg";
            after: "optionheader_open_set";
         }
         program { name: "optionheader_instant_close";
            signal: "elm,state,optionheader,instant_close";
            source: "";
            action: STATE_SET "default" 0.0;
            target: "optionheader_bg";
            after: "optionheader_close_set";
         }
         program { name: "optionheader_close_set";
            signal: "elm,state,optionheader,close_set";
            source: "";
            script {
               set_int(oh_close, 1);
            }
         }
         program { name: "optionheader_open_set";
            signal: "elm,state,optionheader,open_set";
            source: "";
            script {
               set_int(oh_close, 0);
            }
         }
         program { name: "controlbar_open";
            signal: "elm,state,controlbar,open";
            source: "";
            action: STATE_SET "show" 0.0;
            target: "controlbar_bg";
            transition: LINEAR 0.2;
         }
         program { name: "controlbar_close";
            signal: "elm,state,controlbar,close";
            source: "";
            action: STATE_SET "default" 0.0;
            target: "controlbar_bg";
            transition: LINEAR 0.2;
         }
         program { name: "controlbar_instant_open";
            signal: "elm,state,controlbar,instant_open";
            source: "";
            script {
               emit("elm,state,prev_btn,show", "elm");
               emit("elm,state,controlbar,show", "elm");
            }
         }
         program { name: "controlbar_instant_close";
            signal: "elm,state,controlbar,instant_close";
            source: "";
            script {
               emit("elm,state,prev_btn,hide", "elm");
               emit("elm,state,controlbar,hide", "elm");
            }
         }
         program { name: "show_finished";
            action: SIGNAL_EMIT "elm,action,show,finished" "";
         }
         program { name: "pushed_finished";
            action: SIGNAL_EMIT "elm,action,pushed,finished" "";
         }
         program { name: "popped_finished";
            action: SIGNAL_EMIT "elm,action,popped,finished" "";
         }
      }
   }

