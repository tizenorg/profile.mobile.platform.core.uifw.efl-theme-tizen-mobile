// ***************************** Action bar ***********************************/
#define ACTIONBAR_LOGS_HEIGHT                          87
#define ACTIONBAR_LOGS_NEXT_BTN_SIZE                   64 87

// ***************************** List *****************************************/
#define LIST_LOGS_ICON_SIZE                            50 38
#define LIST_LOGS1_ICON_SIZE                           33 33
#define LIST_LOGS_TEXT_MAIN_SIZE                       34 // 38 NOT USED
#define LIST_LOGS_TEXT_SUB_SIZE                        20 // 24 NOT USED
#define LIST_LOGS_TEXT_ACTIONBAR_MAIN_SIZE             34 // 38 NOT USED
#define LIST_LOGS_TEXT_ACTIONBAR_SUB_SIZE              22 // 24 NOT USED
#define LIST_LOGS_TEXT_ACTIONBAR_1TEXT_SIZE            34
#define LIST_LOGS_PADDING_TOP_SIZE                     24 // 22 NOT USED
#define LIST_LOGS_PADDING_BOTTOM_SIZE                  25 // 23 NOT USED
#define LIST_LOGS_PADDING_DEFAULT_SIZE                 16
#define LIST_LOGS1_PADDING_DEFAULT_SIZE                8  // 0 NOT USED
#define LIST_LOGS1_PADDING_TOP_SIZE                    12 // 8 NOT USED
#define LIST_LOGS1_PADDING_BOTTOM_SIZE                 6  // 9 NOT USED
#define LIST_LOGS1_TEXT_RIGHT_PADDING_SIZE             20
#define LIST_LOGS_HEIGHT                               38 // 45 NOT USED
#define LIST_LOGS_SUB_HEIGHT                           24 // 28 NOT USED
#define LIST_LOGS1_SUB_MAX_WIDTH                       118 // NOT USED
#define LIST_LOGS_TEXT_MAIN_NORMAL                     "#FFFFFFFF"
#define LIST_LOGS_TEXT_SUB_NORMAL                      "#FFFFFF7F"

styles {
  style { name: "list_logs_style";
    base: "font=Tizen:style=Regular font_size="LIST_TEXT_MAIN_SIZE" color="LIST_LOGS_TEXT_MAIN_NORMAL" text_class=list_item ellipsis=1.0";
    STYLE_TAG
    STYLE_TAG_MATCH
  }
  style { name: "list_logs2_style";
    base: "font=Tizen:style=Regular font_size="LIST_TEXT_MAIN_SIZE" color="LIST_LOGS_TEXT_MAIN_NORMAL" text_class=list_item ellipsis=1.0";
    STYLE_TAG
    STYLE_TAG_MATCH
  }
  style { name: "list_logs_sub_style";
    base: "font=Tizen:style=Regular font_size="LIST_TEXT_SUB_SIZE" color="LIST_LOGS_TEXT_SUB_NORMAL" text_class=tizen ellipsis=1.0";
    STYLE_TAG
    STYLE_TAG_MATCH
  }
  style { name: "list_logs_action_bar_style";
    base: "font=Tizen:style=Bold font_size="LIST_TEXT_MAIN_SIZE" color=#FFFFFF color_class=T012 text_class=T012 ellipsis=1.0";
    STYLE_TAG
    STYLE_TAG_MATCH
  }
  style { name: "list_logs_action_bar_sub_style";
    base: "font=Tizen:style=Bold font_size="LIST_TEXT_SUB_SIZE" color=#FFFFFF color_class=T012 text_class=T012 ellipsis=1.0";
    STYLE_TAG
    STYLE_TAG_MATCH
  }
  style { name: "list_logs_action_bar_style2";
    base: "font=Tizen:style=Bold font_size="LIST_LOGS_TEXT_ACTIONBAR_1TEXT_SIZE" color=#FFFFFF color_class=T012 text_class=T012 ellipsis=1.0";
    STYLE_TAG
    STYLE_TAG_MATCH
  }
}

group { name: "elm/button/base/logs_divider_btn";
  script {
     public mouse_down = 0;
     public multi_down = 0;
  }
  parts {
     part { name: "bg";
        type: RECT;
        scale: 1;
        description { state: "default" 0.0;
           min: 0 BUTTON_HEIGHT;
           color: 0 0 0 0;
        }
        description { state: "disabled" 0.0;
            inherit: "default" 0.0;
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
            color_class: "B0511P";
         }
     }
     part { name: "padding_left_top";
        type: SPACER;
        scale: 1;
        description { state: "default" 0.0;
           align: 0.0 0.0;
           rel2.relative: 0.0 0.0;
           min: BUTTON_PADDING_SIZE;
           fixed: 1 1;
        }
     }
     part { name: "padding_right_bottom";
        type: SPACER;
        scale: 1;
        description { state: "default" 0.0;
           align: 1.0 1.0;
           rel1.relative: 1.0 1.0;
           min: BUTTON_PADDING_SIZE;
           fixed: 1 1;
        }
     }
     part { name: "icon_rect";
        type: SPACER;
        scale: 1;
        description { state: "default" 0.0;
           align: 0.0 0.5;
           rel1 {
              relative: 1.0 1.0;
              to: "padding_left_top";
           }
           rel2 {
              relative: 1.0 0.0;
              to_x: "padding_left_top";
              to_y: "padding_right_bottom";
           }
           min: 0 0;
           fixed: 1 1;
        }
        description { state: "visible" 0.0;
           inherit: "default" 0.0;
           min: BUTTON_ICON_SIZE;
           max: BUTTON_ICON_SIZE;
           fixed: 1 1;
        }
     }
     part { name: "elm.text";
        type: TEXTBLOCK;
        mouse_events: 0;
        scale: 1;
        description { state: "default" 0.0;
           fixed: 1 1;
           rel1 {
              relative: 1.0 1.0;
              to_x: "icon_rect";
              to_y: "padding_left_top";
           }
           rel2 {
              relative: 0.0 0.0;
              to: "padding_right_bottom";
           }
           text {
              max: 1 0;
              style: "button_general_text_normal";
           }
        }
        description { state: "disabled" 0.0;
           inherit: "default" 0.0;
           text.style: "button_general_text_dim";
        }
        description { state: "pressed" 0.0;
           inherit: "default" 0.0;
           text.style: "button_general_text_press";
        }
     }
     part { name: "left_padding";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            min: BUTTON_DIVIDER_BTN_PADDING_LEFT_SIZE 0;
            max: BUTTON_DIVIDER_BTN_PADDING_LEFT_SIZE -1;
            fixed: 1 1;
            align: 0.0 0.5;
            rel1.to: "bg";
            rel2 {
               to: "bg";
               relative: 0.0 1.0;
            }
         }
      }
      part { name: "right_padding";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            min: BUTTON_DIVIDER_BTN_PADDING_RIGHT_SIZE 0;
            max: BUTTON_DIVIDER_BTN_PADDING_RIGHT_SIZE -1;
            fixed: 1 1;
            align: 1.0 0.5;
            rel1 {
               to: "bg";
               relative: 1.0 0.0;
            }
            rel2.to: "bg";
         }
      }
     part { name: "elm.swallow.content";
        type: SWALLOW;
        clip_to: "elm.swallow.content.clip";
        scale: 1;
        description { state: "default" 0.0;
           min: BUTTON_DIVIDER_BTN_ICON_SIZE 0;
           max: BUTTON_DIVIDER_BTN_ICON_SIZE -1;
           fixed: 1 1;
           align: 0.5 0.5;
           rel1 {
               to: "left_padding";
               relative: 1.0 0.0;
            }
            rel2 {
               to: "right_padding";
               relative: 0.0 1.0;
            }
        }
        description { state: "visible" 0.0;
          inherit: "default" 0.0;
        }
        description { state: "icononly" 0.0;
          inherit: "default" 0.0;
        }
     }
     part { name: "elm.swallow.content.clip";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            color_class: "F022L1i";
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color_class: "F022L1iD";
         }
      }
      part { name: "event";
         type: RECT;
         scale: 1;
         repeat_events: 0;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
         }
      }
  }
  programs {
     program { name: "pressed";
         signal: "mouse,down,1*";
         source: "event";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"event", st, 30, vl);
            if (strcmp(st, "disabled")) {
               set_state(PART:"bg", "pressed", 0.0);
               emit("elm,action,press", "");
            }
         }
      }
      program { name: "unpressed";
         signal: "mouse,up,1";
         source: "event";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"event", st, 30, vl);
            if (strcmp(st, "disabled")) {
               set_state(PART:"bg", "default", 0.0);
               emit("elm,action,unpress", "");
            }
         }
      }
      program { name: "touch_snd";
         signal: "mouse,clicked,1";
         source: "event";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"event", st, 30, vl);
            if (strcmp(st, "disabled")) {
               play_sample("touch_sound", 1.0);
               emit("elm,action,click", "");
            }
         }
      }
      program { name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "event";
         target: "bg";
      }
      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "event";
         target: "bg";
      }

     program { name: "text_show";
        signal: "elm,state,text,visible";
        source: "elm";
        script {
           new st[31];
           new Float:vl;
           get_state(PART:"elm.swallow.content", st, 30, vl);
           if (!strcmp(st, "icononly"))
             {
                set_state(PART:"elm.swallow.content", "visible", 0.0);
                set_state(PART:"icon_rect", "visible", 0.0);
             }
           get_state(PART:"bg", st, 30, vl);
           if (strcmp(st, "disabled"))
              set_state(PART:"elm.text", "default", 0.0);
           else
              set_state(PART:"elm.text", "disabled", 0.0);
        }
     }
     program { name: "text_hide";
        signal: "elm,state,text,hidden";
        source: "elm";
        script {
           new st[31];
           new Float:vl;
           get_state(PART:"elm.swallow.content", st, 30, vl);
           if (!strcmp(st, "visible"))
             {
                set_state(PART:"elm.swallow.content", "icononly", 0.0);
                set_state(PART:"icon_rect", "default", 0.0);
             }
           set_state(PART:"elm.text", "default", 0.0);
        }
     }
     program { name: "icon_show";
        signal: "elm,state,icon,visible";
        source: "elm";
        action: STATE_SET "visible" 0.0;
        target: "elm.swallow.content";
        target: "icon_rect";
     }
     program { name: "icon_hide";
        signal: "elm,state,icon,hidden";
        source: "elm";
        action: STATE_SET "default" 0.0;
        target: "elm.swallow.content";
        target: "icon_rect";
     }
     program { name: "multi_down";
        signal: "elm,action,multi,down";
        source: "elm";
        script {
           set_int(multi_down, 1);
        }
     }
     program { name: "multi_up";
        signal: "elm,action,multi,up";
        source: "elm";
        script {
           set_int(multi_down, 0);
        }
     }
  }
}

//logs
group { name: "elm/genlist/item/logs/default";
   PROLOG_LIST
   data.item: "texts" "elm.text";
   data.item: "contents" "elm.icon.1 elm.icon.2";

   parts {
      PART_LIST_BG
      PART_LIST_PADDINGS(
         LIST_PADDING_LEFT_SIZE, LIST_PADDING_RIGHT_SIZE,
         LIST_1LINE_PADDING_TOP_SIZE, LIST_1LINE_PADDING_BOTTOM_SIZE
      )
      PART_LIST_BOTTOMLINE
      PART(SPACER, "elm.padding.center",
         description { state: "default" 0.0;
            fixed: 1 1;
            align: 0.5 0.5;
            min: 0 0;
            max: -1 0;
         }
      )
      PART(SWALLOW, "elm.icon.1",
         DESC_LB("elm.padding.left", "elm.padding.center",
            fixed: 1 1;
            min: LIST_LOGS_ICON_SIZE;
            max: LIST_LOGS_ICON_SIZE;
         )
      )
      PART(SWALLOW, "elm.icon.2",
         DESC_LT("elm.padding.left", "elm.padding.center",
            fixed: 1 1;
            min: LIST_LOGS_ICON_SIZE;
            max: LIST_LOGS_ICON_SIZE;
         )
      )
      PART(SPACER, "elm.padding.icon.right",
         DESC_L("elm.icon.1", min: LIST_LOGS_PADDING_DEFAULT_SIZE 0; max: LIST_LOGS_PADDING_DEFAULT_SIZE -1; )
      )
      PART(TEXTBLOCK, "elm.text",
         DESC_LRTB("elm.padding.icon.right", "elm.padding.right", "elm.padding.top", "elm.padding.bottom",
            PARAM_TEXT("list_logs_style",)
         )
      )
   }
   PROGRAMS_LIST( target: "elm.text"; target: "elm.icon.1"; target: "elm.icon.2";)
}

group { name: "elm/genlist/item/logs/swipe/default";
   inherit: "elm/genlist/item/logs/default";
   SCRIPTS_LIST_SWIPE
   IMAGES_LIST_SWIPE

   data.item: "texts" "elm.text elm.text.swipe.left elm.text.swipe.right";
   data.item: "contents" "elm.icon.1 elm.icon.2 elm.icon.swipe.left elm.icon.swipe.right";

   parts {
      PARTS_LIST_SWIPE
   }
   PROGRAMS_LIST_SWIPE
}

group { name: "elm/genlist/item/logs/swipe_left/default";
   inherit: "elm/genlist/item/logs/swipe/default";

   data.item: "texts" "elm.text elm.text.swipe.left";
   data.item: "contents" "elm.icon.1 elm.icon.2 elm.icon.swipe.left";

   parts {
      PARTS_LIST_SWIPE_LEFT
   }
   PROGRAMS_LIST_SWIPE_LEFT
}

group { name: "elm/genlist/item/logs/swipe_right/default";
   inherit: "elm/genlist/item/logs/swipe/default";

   data.item: "texts" "elm.text elm.text.swipe.right";
   data.item: "contents" "elm.icon.1 elm.icon.2 elm.icon.swipe.right";

   parts {
      PARTS_LIST_SWIPE_RIGHT
   }
   PROGRAMS_LIST_SWIPE_RIGHT
}

group { name: "elm/genlist/item/logs.2text.2icon/default";
   PROLOG_LIST
   data.item: "texts" "elm.text.1 elm.text.3";
   data.item: "contents" "elm.icon.1 elm.icon.2";

   parts {
      PART_LIST_BG
      PART_LIST_PADDINGS(
         LIST_PADDING_LEFT_SIZE, LIST_PADDING_RIGHT_SIZE,
         LIST_2LINE_PADDING_TOP_SIZE, LIST_2LINE_PADDING_BOTTOM_SIZE
      )
      PART_LIST_BOTTOMLINE
      PART(TEXTBLOCK, "elm.text.1",
         DESC_LRTB("elm.padding.left", "elm.padding.right", "elm.padding.top", "elm.text.3",
            min: 0 0;
            PARAM_TEXT("list_logs_style",)
         )
      )
      PART(SWALLOW, "elm.icon.1",
         DESC_LT("elm.padding.left", "elm.text.1",
           fixed: 1 1;
           min: LIST_LOGS1_ICON_SIZE;
           max: LIST_LOGS1_ICON_SIZE;
         )
      )
      PART(SWALLOW, "elm.icon.2",
         DESC_LT("elm.icon.1", "elm.text.1",
           fixed: 1 1;
           min: LIST_LOGS1_ICON_SIZE;
           max: LIST_LOGS1_ICON_SIZE;
         )
      )
      PART(TEXTBLOCK, "elm.text.3",
         DESC_RB("elm.padding.right", "elm.padding.bottom",
            min: 0 0;
            PARAM_TEXT("list_logs_sub_style", min: 1 1;)
         )
      )
   }
   PROGRAMS_LIST( target: "elm.text.1"; target: "elm.text.3"; target: "elm.icon.1"; target: "elm.icon.2";)
}

group { name: "elm/genlist/item/logs.2text.2icon/swipe/default";
   inherit: "elm/genlist/item/logs.2text.2icon/default";
   SCRIPTS_LIST_SWIPE
   IMAGES_LIST_SWIPE

   data.item: "texts" "elm.text.1 elm.text.3 elm.text.swipe.left elm.text.swipe.right";
   data.item: "contents" "elm.icon.1 elm.icon.2 elm.icon.swipe.left elm.icon.swipe.right";

   parts {
      PARTS_LIST_SWIPE
   }
   PROGRAMS_LIST_SWIPE
}

group { name: "elm/genlist/item/logs.2text.2icon/swipe_left/default";
   inherit: "elm/genlist/item/logs.2text.2icon/swipe/default";

   data.item: "texts" "elm.text.1 elm.text.3 elm.text.swipe.left";
   data.item: "contents" "elm.icon.1 elm.icon.2 elm.icon.swipe.left";

   parts {
      PARTS_LIST_SWIPE_LEFT
   }
   PROGRAMS_LIST_SWIPE_LEFT
}

group { name: "elm/genlist/item/logs.2text.2icon/swipe_right/default";
   inherit: "elm/genlist/item/logs.2text.2icon/swipe/default";

   data.item: "texts" "elm.text.1 elm.text.3 elm.text.swipe.right";
   data.item: "contents" "elm.icon.1 elm.icon.2 elm.icon.swipe.right";

   parts {
      PARTS_LIST_SWIPE_RIGHT
   }
   PROGRAMS_LIST_SWIPE_RIGHT
}

group { name: "elm/genlist/item/logs.3text.2icon/default";
   inherit: "elm/genlist/item/logs.2text.2icon/default";
   data.item: "texts" "elm.text.1 elm.text.2 elm.text.3";

   parts {
      PART(TEXTBLOCK, "elm.text.1",
         DESC_LRTB("elm.padding.left", "elm.padding.text2.right", "elm.padding.top", "elm.text.3",
            min: 0 0;
            PARAM_TEXT("list_logs_style",)
         )
      )
      PART(TEXTBLOCK, "elm.text.2",
         DESC_RTB("elm.padding.right", "elm.padding.top", "elm.text.3",
            min: 0 0;
            PARAM_TEXT("list_logs2_style", min: 1 1;)
         )
      )
      PART(SPACER, "elm.padding.text2.right",
         DESC_R("elm.text.2", min: LIST_LOGS1_TEXT_RIGHT_PADDING_SIZE 0; max: LIST_LOGS1_TEXT_RIGHT_PADDING_SIZE -1;)
      )
   }
   PROGRAMS_LIST( target: "elm.text.1"; target: "elm.text.2"; target: "elm.text.3"; target: "elm.icon.1"; target: "elm.icon.2";)
}

group { name: "elm/genlist/item/logs.3text.2icon/swipe/default";
   inherit: "elm/genlist/item/logs.3text.2icon/default";
   SCRIPTS_LIST_SWIPE
   IMAGES_LIST_SWIPE

   data.item: "texts" "elm.text.1 elm.text.2 elm.text.3 elm.text.swipe.left elm.text.swipe.right";
   data.item: "contents" "elm.icon.1 elm.icon.2 elm.icon.swipe.left elm.icon.swipe.right";

   parts {
      PARTS_LIST_SWIPE
   }
   PROGRAMS_LIST_SWIPE
}

group { name: "elm/genlist/item/logs.3text.2icon/swipe_left/default";
   inherit: "elm/genlist/item/logs.3text.2icon/swipe/default";

   data.item: "texts" "elm.text.1 elm.text.2 elm.text.3 elm.text.swipe.left";
   data.item: "contents" "elm.icon.1 elm.icon.2 elm.icon.swipe.left";

   parts {
      PARTS_LIST_SWIPE_RIGHT
   }
   PROGRAMS_LIST_SWIPE_RIGHT
}

group { name: "elm/genlist/item/logs.3text.2icon/swipe_right/default";
   inherit: "elm/genlist/item/logs.3text.2icon/swipe/default";

   data.item: "texts" "elm.text.1 elm.text.2 elm.text.3 elm.text.swipe.right";
   data.item: "contents" "elm.icon.1 elm.icon.2 elm.icon.swipe.right";

   parts {
      PARTS_LIST_SWIPE_RIGHT
   }
   PROGRAMS_LIST_SWIPE_RIGHT
}

group { name: "elm/genlist/item/logs.1text.1icon.divider/default";
   PROLOG_LIST
   data.item: "texts" "elm.text.1";
   data.item: "contents" "elm.swallow.colorbar elm.icon";

   parts {
      PART(RECT, "bg_clip",
         mouse_events: 0;
         description { state: "default" 0.0; }
         description { state: "decorate" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 0;
         }
         description { state: "reorder" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 0;
         }
         description { state: "decorate_reorder" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 0;
         }
      )
      PART(RECT, "bg",
         clip_to: "bg_clip";
         description { state: "default" 0.0;
            color_class: "B0511";
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            color_class: "B0511P";
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
            color_class: "B0211D";
         }
      )
      PART_LIST_PADDINGS(
         LIST_PADDING_LEFT_SIZE, LIST_PADDING_R_ICON_RIGHT_SIZE,
         LIST_1LINE_PADDING_TOP_SIZE, LIST_1LINE_PADDING_BOTTOM_SIZE
      )
      PART(TEXTBLOCK, "elm.text.1",
         DESC_LRTB("elm.padding.left", "elm.padding.divider.left", "elm.padding.top", "elm.padding.bottom",
            PARAM_TEXT("list_text_main_normal",)
         ) DESCRIPIONS_TEXT("list_text_main_dim", "list_text_main_press")
      )
      PART(SPACER, "elm.padding.divider.left",
         DESC_R("elm.divider",
            min: LIST_DIVIDER_PADDING_SIZE 0;  max: LIST_DIVIDER_PADDING_SIZE -1;
         )
      )
      PART(SWALLOW, "elm.icon",
         DESC_FROM_R(
            min: BUTTON_DIVIDER_BTN_SIZE 0;
            max: BUTTON_DIVIDER_BTN_SIZE -1;
            rel1.to: "bg";
            rel2.to: "bg";
         )
      )
      PART(RECT, "elm.divider",
         DESC_R("elm.icon",
            align: 0 0.5;
            min: 2 LIST_DIVIDER_HEIGHT;
            max: 2 LIST_DIVIDER_HEIGHT;
            color_class: "B0221L1";
         )
      )
   }
   programs {
      PROGRAM_LIST_DEFAULT(
         target: "elm.text.1"; target: "elm.icon";
         target: "bg";
         target: "bg_clip";
         target: "elm.padding.left";
         target: "elm.padding.right";
      )
      PROGRAM_LIST_DISABLE(
         target: "elm.text.1"; target: "elm.icon";
         target: "bg";
      )
      PROGRAM_LIST_SELECT(
         target: "elm.text.1"; target: "elm.icon";
         target: "bg";
      )
      PROGRAM_LIST_SOUND
      PROGRAM_LIST_DECORATE(
         target: "bg";
         target: "bg_clip";
         target: "elm.padding.left";
         target: "elm.padding.right";
      )
   }
}

group { name: "elm/genlist/item/logs.2text.1icon.divider/default";
   PROLOG_LIST
   data.item: "texts" "elm.text.1 elm.text.2";
   data.item: "contents" "elm.swallow.colorbar elm.icon";

   parts {
      PART(RECT, "bg_clip",
         mouse_events: 0;
         description { state: "default" 0.0; }
         description { state: "decorate" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 0;
         }
         description { state: "reorder" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 0;
         }
         description { state: "decorate_reorder" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 0;
         }
      )
      PART(RECT, "bg",
         clip_to: "bg_clip";
         description { state: "default" 0.0;
            color_class: "B0511";
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            color_class: "B0511P";
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color_class: "B0211D";
         }
      )
      PART_LIST_PADDINGS(
         LIST_PADDING_LEFT_SIZE, LIST_PADDING_R_ICON_RIGHT_SIZE,
         LIST_2LINE_PADDING_TOP_SIZE, LIST_2LINE_PADDING_BOTTOM_SIZE
      )
      PART(RECT, "elm.divider",
         DESC_R("elm.icon",
            align: 0 0.5;
            min: 1 LIST_DIVIDER_HEIGHT;
            max: 1 LIST_DIVIDER_HEIGHT;
            color: 0 0 0 0;
         )
      )
      PART(TEXTBLOCK, "elm.text.1",
         DESC_LRTB("elm.padding.left", "elm.padding.divider.left", "elm.padding.top", "elm.text.2",
            min: 0 0;
            PARAM_TEXT("list_logs_action_bar_style",)
         ) DESCRIPIONS_TEXT("list_logs_action_bar_style", "list_logs_action_bar_style")
      )
      PART(TEXTBLOCK, "elm.text.2",
         DESC_LRB("elm.padding.left", "elm.padding.divider.left", "elm.padding.bottom",
            min: 0 0;
            PARAM_TEXT("list_logs_action_bar_sub_style",)
         ) DESCRIPIONS_TEXT("list_logs_action_bar_sub_style", "list_logs_action_bar_sub_style")
      )
      PART(SPACER, "elm.padding.divider.left",
         DESC_R("elm.divider",
            min: LIST_DIVIDER_PADDING_SIZE 0;  max: LIST_DIVIDER_PADDING_SIZE -1;
         )
      )
      PART(SWALLOW, "elm.icon",
         DESC_FROM_R(
            min: BUTTON_DIVIDER_BTN_SIZE 0;
            max: BUTTON_DIVIDER_BTN_SIZE -1;
            rel1.to: "bg";
            rel2.to: "bg";
         )
      )
   }
   programs {
      PROGRAM_LIST_DEFAULT(
         target: "elm.text.1";
         target: "elm.text.2";
         target: "elm.icon";
         target: "bg";
         target: "bg_clip";
         target: "elm.padding.left";
         target: "elm.padding.right";
      )
      PROGRAM_LIST_DISABLE(
         target: "elm.text.1";
         target: "elm.text.2";
         target: "elm.icon";
         target: "bg";
      )
      PROGRAM_LIST_SELECT(
         target: "elm.text.1";
         target: "elm.text.2";
         target: "elm.icon";
         target: "bg";
      )
      PROGRAM_LIST_SOUND
      PROGRAM_LIST_DECORATE(
         target: "bg";
         target: "bg_clip";
         target: "elm.padding.left";
         target: "elm.padding.right";
      )
   }
}

group { name: "elm/genlist/item/logs.1text/default";
   PROLOG_LIST

   data.item: "texts" "elm.text";

   parts {
      PART(RECT, "bg_clip",
         mouse_events: 0;
         description { state: "default" 0.0; }
         description { state: "decorate" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 0;
         }
         description { state: "reorder" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 0;
         }
         description { state: "decorate_reorder" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 0;
         }
      )
      PART(RECT, "bg",
         clip_to: "bg_clip";
         description { state: "default" 0.0;
            color_class: "B0511";
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            color_class: "B0511P";
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color_class: "B0211D";
         }
      )
      PART_LIST_PADDINGS(
         LIST_PADDING_LEFT_SIZE, LIST_PADDING_RIGHT_SIZE,
         LIST_1LINE_PADDING_TOP_SIZE, LIST_1LINE_PADDING_BOTTOM_SIZE
      )
      PART(TEXTBLOCK, "elm.text",
         DESC_LRTB("elm.padding.left", "elm.padding.right", "elm.padding.top", "elm.padding.bottom",
            PARAM_TEXT("list_logs_action_bar_style",)
         ) DESCRIPIONS_TEXT("list_logs_action_bar_style", "list_logs_action_bar_style")
      )
   }
   programs {
      PROGRAM_LIST_DEFAULT(
         target: "elm.text";
         target: "bg";
         target: "bg_clip";
         target: "elm.padding.left";
         target: "elm.padding.right";
      )
      PROGRAM_LIST_DISABLE(
         target: "elm.text";
         target: "bg";
      )
      PROGRAM_LIST_SELECT(
         target: "elm.text";
         target: "bg";
      )
      PROGRAM_LIST_SOUND
      PROGRAM_LIST_DECORATE(
         target: "bg";
         target: "bg_clip";
         target: "elm.padding.left";
         target: "elm.padding.right";
      )
   }
}