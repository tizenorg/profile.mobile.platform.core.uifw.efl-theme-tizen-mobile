group { name: "elm/button/base/device_option";
   script {
      public mouse_down = 0;
      public multi_down = 0;
      public move = 0;
   }
   parts {
      part { name: "bg";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
         description { state: "pressed" 0.0;
            color_class: "B041P";
         }
         description { state: "disabled" 0.0;
            color_class: "B0211D";
         }
      }
      part { name: "top_padding";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 0 1;
            align: 0.5 0;
            min: 0 BUTTON_DEVICE_OPTION_TOP_PADDING_SIZE;
            rel2 {
               relative: 1.0 0.0;
            }
         }
      }
      part { name: "bottom_padding";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 0 1;
            align: 0.5 1;
            min: 0 0;
            rel1 {
               relative: 0.0 1.0;
            }
         }
      }
      part { name: "elm.swallow.content";
         clip_to: "elm.swallow.content.clip";
         type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 0 1;
            align: 0.5 0.0;
            min: BUTTON_DEVICE_OPTION_ICON_SIZE;
            max: BUTTON_DEVICE_OPTION_ICON_SIZE;
            rel1 {
               to_y: "top_padding";
               relative: 0.0 1.0;
            }
            rel2 {
               to_y: "top_padding";
               relative: 1.0 1.0;
            }
         }
      }
      part { name: "text_left_padding";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 0 0.5;
            min: BUTTON_DEVICE_OPTION_LR_PADDING_SIZE 0;
            max: BUTTON_DEVICE_OPTION_LR_PADDING_SIZE -1;
            rel2 {
               relative: 0.0 1.0;
            }
         }
      }
      part { name: "text_right_padding";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 1 0.5;
            min: BUTTON_DEVICE_OPTION_LR_PADDING_SIZE 0;
            max: BUTTON_DEVICE_OPTION_LR_PADDING_SIZE -1;
            rel1 {
               relative: 1.0 0.0;
            }
         }
      }
      part { name: "elm.text";
         type: TEXTBLOCK;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            min: BUTTON_DEVICE_OPTION_TEXT_PART_SIZE;
            rel1 {
               to_x: "text_left_padding";
               to_y: "elm.swallow.content";
               relative: 1.0 1.0;
            }
            rel2 {
               to_x: "text_right_padding";
               to_y: "bottom_padding";
               relative: 0.0 0.0;
            }
            text {
               min: 0 1;
               style: "button_popup_device_option_2_text_normal";
            }
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            text.style: "button_popup_device_option_2_text_press";
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            text.style: "button_popup_device_option_2_text_dim";
         }
      }
      part { name: "elm.swallow.content.clip";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            color_class: "B063L1";
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color_class: "B063L1D";
         }
      }
   }
   programs {
      program { name: "pressed";
         signal: "mouse,down,1*";
         source: "bg";
         script {
            if ((get_int(multi_down) == 0) && (get_int(mouse_down) == 0))
              {
                  set_int(mouse_down, 1);
                  run_program(PROGRAM:"button_press1");
              }
         }
      }
      program { name: "button_press1";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"bg", st, 30, vl);
            if (strcmp(st, "disabled")) {
               set_state(PART:"elm.text", "pressed", 0.0);
               set_state(PART:"bg", "pressed", 0.0);
               emit("elm,action,press", "");
            }
         }
      }
      program { name: "unpressed";
         signal: "mouse,up,1";
         source: "bg";
         script {
            if (get_int(mouse_down) == 1) {
              set_int(mouse_down, 0);
              run_program(PROGRAM:"button_unpress1");
            }
         }
      }
      program { name: "button_unpress1";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"bg", st, 30, vl);
            if (strcmp(st, "disabled")) {
               set_state(PART:"elm.text", "default", 0.0);
               set_state(PART:"bg", "default", 0.0);
               emit("elm,action,unpress", "");
            }
         }
      }
      program { name: "button_move";
         signal: "mouse,move";
         source: "bg";
         script {
            if (get_int(mouse_down) == 1) {
               set_int(move, get_int(move)+1);
               if (get_int(move) > 15) {
                  set_int(move, 0);
                  set_int(mouse_down, 0);
                  run_program(PROGRAM:"button_unpress1");
               }
            }
         }
      }
      program { name: "touch_snd";
         signal: "mouse,clicked,1";
         source: "bg";
         script {
            new st[31];
            new Float:vl;
            if (get_int(multi_down) == 0) {
               get_state(PART:"bg", st, 30, vl);
               if (strcmp(st, "disabled")) {
                  play_sample("touch_sound", 1.0);
                  emit("elm,action,click", "");
               }
            }
         }
      }
      program { name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "elm.swallow.content.clip";
         target: "elm.text";
         target: "bg";
      }
      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.swallow.content.clip";
         target: "elm.text";
         target: "bg";
      }
      program { name: "multi_down";
         signal: "elm,action,multi,down";
         source: "elm";
         script {
            set_int(multi_down, 1);
         }
      }
      program { name: "multi_up";
         signal: "elm,action,multi,up";
         source: "elm";
         script {
            set_int(multi_down, 0);
         }
      }
   }
}

group { name: "elm/genlist/item/device_option.1text.1icon/default";
   PROLOG_LIST
   data.item: "texts" "elm.text";
   data.item: "contents" "elm.icon";

   parts {
      PART_LIST_BG
      PART_LIST_PADDINGS(
         LIST_PADDING_LEFT_SIZE, LIST_PADDING_RIGHT_SIZE,
         LIST_1LINE_PADDING_TOP_SIZE, LIST_1LINE_PADDING_BOTTOM_SIZE
      )
      PART(RECT, "bottom_line_clip",
         description { state: "default" 0.0; }
         description { state: "hide" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 0;
         }
         description { state: "decorate" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 0;
         }
         description { state: "reorder" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 0;
         }
         description { state: "decorate_reorder" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 0;
         }
         description { state: "flipped" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 0;
         }
      )
      PART(RECT, "bottom_line",
         mouse_events: 0;
         clip_to: "bottom_line_clip";
         description { state: "default" 0.0;
            min: 0 1;
            max: -1 1;
            fixed: 0 1;
            align: 0.5 1;
            color_class: "B0621L1";
            rel1.offset: -1 -1;
         }
      )
      PART(SWALLOW, "elm.icon",
         DESC_L("elm.padding.left",
           min: LIST_DEVICE_OPTION_ICON_MIN_MAX_SIZE;
           max: LIST_DEVICE_OPTION_ICON_MIN_MAX_SIZE;
           fixed: 1 1;
         )
      )
      PART(SPACER, "elm.padding.icon.right",
         DESC_L("elm.icon", min: LIST_PADDING_R_ICON_DEFAULT_SIZE 0; max: LIST_PADDING_R_ICON_DEFAULT_SIZE -1; )
      )
      PART(TEXTBLOCK, "elm.text",
         DESC_LR("elm.padding.icon.right", "elm.padding.right",
            min: 0 LIST_DEVICE_OPTION_HEIGHT;
            PARAM_TEXT("list_text_main_normal",)
         ) DESCRIPIONS_TEXT("list_text_main_dim", "list_text_main_press")
      )
   }
   PROGRAMS_LIST( target: "elm.text"; target: "elm.icon"; )
}

group { name: "elm/genlist/item/device_option.2text.1icon/default";
   PROLOG_LIST
   data.item: "texts" "elm.text.1 elm.text.2";
   data.item: "contents" "elm.icon";

   parts {
      PART_LIST_BG
      PART_LIST_PADDINGS(
         LIST_PADDING_LEFT_SIZE, LIST_PADDING_RIGHT_SIZE,
         LIST_DEVICE_OPTION_PADDING_TOP_SIZE, LIST_DEVICE_OPTION_PADDING_BOTTOM_SIZE
      )
      PART(RECT, "bottom_line_clip",
         description { state: "default" 0.0; }
         description { state: "hide" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 0;
         }
         description { state: "decorate" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 0;
         }
         description { state: "reorder" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 0;
         }
         description { state: "decorate_reorder" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 0;
         }
         description { state: "flipped" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 0;
         }
      )
      PART(RECT, "bottom_line",
         mouse_events: 0;
         clip_to: "bottom_line_clip";
         description { state: "default" 0.0;
            min: 0 1;
            max: -1 1;
            fixed: 0 1;
            align: 0.5 1;
            color_class: "B0621L1";
            rel1.offset: -1 -1;
         }
      )
      PART(SWALLOW, "elm.icon",
         DESC_L("elm.padding.left",
           min: LIST_DEVICE_OPTION_ICON_MIN_MAX_SIZE;
           max: LIST_DEVICE_OPTION_ICON_MIN_MAX_SIZE;
           fixed: 1 1;
         )
      )
      PART(SPACER, "elm.padding.icon.right",
         DESC_L("elm.icon", min: LIST_PADDING_R_ICON_DEFAULT_SIZE 0; max: LIST_PADDING_R_ICON_DEFAULT_SIZE -1; )
      )
      PART(TEXTBLOCK, "elm.text.1",
         DESC_LRTB("elm.padding.icon.right", "elm.padding.right", "elm.padding.top", "elm.text.2",
            min: 0 0;
            PARAM_TEXT("list_text_main_normal",)
         ) DESCRIPIONS_TEXT("list_text_main_dim", "list_text_main_press")
      )
      PART(TEXTBLOCK, "elm.text.2",
         DESC_LRB( "elm.padding.icon.right", "elm.padding.right", "elm.padding.bottom",
            min: 0 0;
            PARAM_TEXT("list_text_sub_normal",)
         ) DESCRIPIONS_TEXT("list_text_sub_dim", "list_text_sub_press")
      )
   }
   PROGRAMS_LIST( target: "elm.text.1"; target: "elm.text.2"; target: "elm.icon"; )
}

group { name: "elm/genlist/item/device_option.2icon.divider/default";
   PROLOG_LIST
   data.item: "contents" "elm.icon elm.icon.1";

   parts {
      PART_LIST_BG
      PART(RECT, "bottom_line_clip",
         description { state: "default" 0.0; }
         description { state: "hide" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 0;
         }
         description { state: "decorate" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 0;
         }
         description { state: "reorder" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 0;
         }
         description { state: "decorate_reorder" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 0;
         }
         description { state: "flipped" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 0;
         }
      )
      PART(RECT, "bottom_line",
         mouse_events: 0;
         clip_to: "bottom_line_clip";
         description { state: "default" 0.0;
            min: 0 1;
            max: -1 1;
            fixed: 0 1;
            align: 0.5 1;
            color_class: "B0621L1";
            rel1.offset: -1 -1;
         }
      )
      PART_LIST_PADDINGS( 0, 0, 0, 0)

      PART(SWALLOW, "elm.icon",
         DESC_LRTB("elm.padding.left", "elm.padding.divider.line", "elm.padding.top","elm.padding.bottom",
            min: 0 115;
         )
      )
      PART(SWALLOW, "elm.icon.1",
         DESC_LRTB("elm.padding.divider.line", "elm.padding.right", "elm.padding.top","elm.padding.bottom",
           min: 0 115;
         )
      )
      PART(RECT, "elm.padding.divider.line",
         description { state: "default" 0.0;
            min: LIST_DEVICE_OPTION_ICON_DIVIDER_MIN_MAX_INC;
            max: LIST_DEVICE_OPTION_ICON_DIVIDER_MIN_MAX_INC;
            fixed: 1 1;
            color_class: "B0621L4";
         }
      )
   }
   PROGRAMS_LIST(target: "elm.icon"; target: "elm.icon.1";)
}

group { name: "elm/genlist/item/device_option.2text/default";
   PROLOG_LIST
   data.item: "texts" "elm.text.1 elm.text.2";

   parts {
      PART_LIST_BG
      PART_LIST_PADDINGS(
         LIST_PADDING_LEFT_SIZE, LIST_PADDING_RIGHT_SIZE,
         LIST_DEVICE_OPTION_PADDING_TOP_SIZE, LIST_DEVICE_OPTION_PADDING_BOTTOM_SIZE
      )
      PART_LIST_BOTTOMLINE_OFF
      PART(TEXTBLOCK, "elm.text.1",
         DESC_LRTB("elm.padding.left", "elm.padding.right", "elm.padding.top", "elm.text.2",
            min: 0 0;
            PARAM_TEXT("list_text_main_normal",)
         ) DESCRIPIONS_TEXT("list_text_main_dim", "list_text_main_press")
      )
      PART(TEXTBLOCK, "elm.text.2",
         DESC_LRB("elm.padding.left", "elm.padding.right", "elm.padding.bottom",
            min: 0 0;
            PARAM_TEXT("list_text_sub_normal",)
         ) DESCRIPIONS_TEXT("list_text_sub_dim", "list_text_sub_press")
      )
   }
   PROGRAMS_LIST( target: "elm.text.1"; target: "elm.text.2";)
}