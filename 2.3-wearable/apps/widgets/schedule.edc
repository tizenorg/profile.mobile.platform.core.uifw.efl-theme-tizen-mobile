// ***************************** Button ***************************************/
#define BUTTON_SCHEDULE_SIZE                           52 52
#define BUTTON_NAVIFRAME_SCHEDULE_SIZE                 52 52
#define BUTTON_SCHEDULE_NORMAL_COLOR                   93 169 1 255
#define BUTTON_SCHEDULE_PRESS_COLOR                    145 191 94 255

// ***************************** Layout ***************************************/
// Layout - No Item - Schedule
#define NOSCHEDULE_ITEM_TEXT_SIZE                      24

// ***************************** List *****************************************/
// Schedules
#define LIST_SCHEDULES_TEXT_SUB_NORMAL_COLOR            "#FFFFFF3F"
#define LIST_SCHEDULES_TEXT_SUB_DIM_COLOR               "#3333333F"
#define LIST_SCHEDULES_LINE_COLOR                       96 96 96 255
#define LIST_SCHEDULES_BG_PRESSED_COLOR                 88 76 48 255

styles {
  style { name: "nocontent_noschedule_style";
    base: "font=Tizen:style=Regular font_size="NOSCHEDULE_ITEM_TEXT_SIZE" align=center color="NOITEM_NOSCHDEULE_TEXT_COLOR" text_class=label wrap=mixed ";
    STYLE_TAG
  }
  style { name: "list_text_main_normal_schedules";
    base: "font=Tizen:style=Regular font_size="LIST_TEXT_MAIN_SIZE" color=#FFFFFF color_class=T0211 text_class=T0211 ellipsis=1.0";
    STYLE_TAG
    STYLE_TAG_MATCH
  }
  style { name: "list_text_sub_normal_schedules";
    base: "font=Tizen:style=Regular font_size="LIST_TEXT_SUB_SIZE" color="LIST_SCHEDULES_TEXT_SUB_NORMAL_COLOR" text_class=tizen ellipsis=1.0";
    STYLE_TAG
    STYLE_TAG_MATCH
  }
  style { name: "list_text_main_dim_schedules";
    base: "font=Tizen:style=Regular font_size="LIST_TEXT_MAIN_SIZE" color=#FFFFFF color_class=T0211D text_class=T0211D ellipsis=1.0";
    STYLE_TAG
    STYLE_TAG_MATCH
  }
  style { name: "list_text_sub_dim_schedules";
    base: "font=Tizen:style=Regular font_size="LIST_TEXT_SUB_SIZE" color="LIST_SCHEDULES_TEXT_SUB_DIM_COLOR" text_class=tizen ellipsis=1.0";
    STYLE_TAG
    STYLE_TAG_MATCH
  }
}

// bg is made transparent so calendar app can set the provided bg image
#define PART_LIST_BG_CALENDAR \
   PART(RECT, "bg_clip", \
      mouse_events: 0; \
      description { state: "default" 0.0; } \
      description { state: "decorate" 0.0; \
         inherit: "default" 0.0; \
         color: 0 0 0 0; \
      } \
      description { state: "reorder" 0.0; \
         inherit: "default" 0.0; \
         color: 0 0 0 0; \
      } \
      description { state: "decorate_reorder" 0.0; \
         inherit: "default" 0.0; \
         color: 0 0 0 0; \
      } \
   ) \
   PART(RECT, "bg",  \
      clip_to: "bg_clip"; \
      description { state: "default" 0.0; \
         color: 0 0 0 0; \
      } \
      description { state: "selected" 0.0; \
         inherit: "default" 0.0; \
      } \
      description { state: "disabled" 0.0; \
         inherit: "default" 0.0; \
      } \
   )

group { name: "elm/button/base/calendar_next";
   script {
      public mouse_down = 0;
      public multi_down = 0;
   }
   images {
      image: "b2_widget_contact_right_arrow.png" COMP;
   }

   parts {
      part { name: "bg";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            min: BUTTON_SCHEDULE_SIZE;
            max: BUTTON_SCHEDULE_SIZE;
            fixed: 1 1;
            align: 1.0 0.5;
            color: BUTTON_SCHEDULE_NORMAL_COLOR;
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            color: BUTTON_SCHEDULE_PRESS_COLOR;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
         }
      }
      part { name: "controller";
         description { state: "default" 0.0;
            image.normal: "b2_widget_contact_right_arrow.png";
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: BUTTON_CONTROLLER_CLIP_DISABLE_COLOR;
         }
      }
      part { name: "event";
         type: RECT;
         scale: 1;
         repeat_events: 0;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
         }
      }
   }
   programs {
      program { name: "pressed";
         signal: "mouse,down,1*";
         source: "event";
         script {
            if ((get_int(multi_down) == 0) && (get_int(mouse_down) == 0))
              {
                  set_int(mouse_down, 1);
                  run_program(PROGRAM:"button_press1");
              }
         }
      }
      program { name: "button_press1";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"event", st, 30, vl);
            if (strcmp(st, "disabled")) {
               set_state(PART:"bg", "pressed", 0.0);
               emit("elm,action,press", "");
            }
         }
      }
      program { name: "unpressed";
         signal: "mouse,up,1";
         source: "event";
         script {
            new st[31];
            new Float:vl;
            if (get_int(mouse_down) == 1)
              {
                 set_int(mouse_down, 0);
                 get_state(PART:"event", st, 30, vl);
                 if (strcmp(st, "disabled")) {
                    set_state(PART:"bg", "default", 0.0);
                    emit("elm,action,unpress", "");
                 }
              }
         }
      }
      program { name: "touch_snd";
         signal: "mouse,clicked,1";
         source: "event";
         script {
            new st[31];
            new Float:vl;
            if (get_int(multi_down) == 0) {
               get_state(PART:"event", st, 30, vl);
               if (strcmp(st, "disabled")) {
                  play_sample("touch_sound", 1.0);
                  emit("elm,action,click", "");
               }
            }
         }
      }
      program { name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "event";
         target: "bg";
         target: "controller";
      }
      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "event";
         target: "bg";
         target: "controller";
      }
      program { name: "multi_down";
         signal: "elm,action,multi,down";
         source: "elm";
         script {
            set_int(multi_down, 1);
         }
      }
      program { name: "multi_up";
         signal: "elm,action,multi,up";
         source: "elm";
         script {
            set_int(multi_down, 0);
         }
      }
   }
}

group { name: "elm/button/base/calendar_prev";
   inherit: "elm/button/base/calendar_next";
   images {
      image: "b2_widget_contact_left_arrow.png" COMP;
   }
   parts {
      part { name: "controller";
         description { state: "default" 0.0;
            image.normal: "b2_widget_contact_left_arrow.png";
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: BUTTON_CONTROLLER_CLIP_DISABLE_COLOR;
         }
      }
   }
}

 group { name: "elm/button/base/naviframe/title_schedules_icon";
    script {
       public mouse_down = 0;
       public multi_down = 0;
    }
    parts {
       part { name: "button_bg";
          type: RECT;
          scale: 1;
          description { state: "default" 0.0;
             min: BUTTON_NAVIFRAME_SCHEDULE_SIZE;
             max: BUTTON_NAVIFRAME_SCHEDULE_SIZE;
             visible: 0;
          }
          description { state: "pressed" 0.0;
             inherit: "default" 0.0;
             visible: 1;
             color_class: "B0511P";
          }
          description { state: "disabled" 0.0;
             inherit: "default" 0.0;
          }
       }
       part { name: "elm.swallow.content";
          type: SWALLOW;
          scale: 1;
          clip_to: "elm.icon.clipper";
          description { state: "default" 0.0;
             visible: 0;
          }
          description { state: "visible" 0.0;
             inherit: "default" 0.0;
             visible: 1;
          }
       }
       part { name: "elm.icon.clipper";
          type: RECT;
          description { state: "default" 0.0;
             color_class: "B0521";
          }
          description { state: "clicked" 0.0;
             inherit: "default" 0.0;
          }
          description { state: "disabled" 0.0;
             color_class: "B0521D";
          }
       }
       part { name: "over2";
          type: RECT;
          ignore_flags: ON_HOLD;
          description { state: "default" 0.0;
             color: 0 0 0 0;
          }
       }
       part { name: "over3";
          type: RECT;
          repeat_events: 1;
          description { state: "default" 0.0;
             color: 0 0 0 0;
          }
       }
       part { name: "disabler";
          type: RECT;
          description { state: "default" 0.0;
             color: 0 0 0 0;
             visible: 0;
          }
          description { state: "disabled" 0.0;
             inherit: "default" 0.0;
             visible: 1;
          }
       }
    }
    programs {
       program { name: "button_click";
          signal: "mouse,down,1";
          source: "over2";
          script {
             if ((get_int(multi_down) == 0) && (get_int(mouse_down) == 0))
               {
                   set_int(mouse_down, 1);
                   run_program(PROGRAM:"button_click1");
               }
          }
       }
       program { name: "button_click1";
          action: SIGNAL_EMIT "elm,action,press" "";
          after: "button_click_anim";
       }
       program { name: "button_click_anim";
          script {
             set_state(PART:"elm.icon.clipper", "clicked", 0.0);
             set_state(PART:"button_bg", "pressed", 0.0);
          }
       }
       program { name: "button_double_click";
          signal: "mouse,down,1,double";
          source: "over2";
          script {
             if ((get_int(multi_down) == 0) && (get_int(mouse_down) == 0))
               {
                   set_int(mouse_down, 1);
                   run_program(PROGRAM:"button_click_anim");
               }
          }
       }
       program { name: "button_unpress";
          action: SIGNAL_EMIT "elm,action,unpress" "";
          after: "button_unclick_anim";
       }
       program { name: "button_unclick_anim";
          action: STATE_SET "default" 0.0;
          target: "button_bg";
       }
       program { name: "button_mouseout_clicked";
          signal: "mouse,up,1";
          source: "over3";
          script {
             if (get_int(mouse_down) == 1)
               {
                  set_int(mouse_down, 0);
                  set_state(PART:"elm.icon.clipper", "default", 0.0);
                  run_program(PROGRAM:"button_unpress");
               }
          }
       }
       program { name: "touch_snd";
          signal: "mouse,clicked,1";
          source: "over2";
          script {
             if (get_int(multi_down) == 0) {
               run_program(PROGRAM:"play_sound");
               run_program(PROGRAM:"button_unclick3");
             }
          }
       }
       program { name: "play_sound";
          action: PLAY_SAMPLE "touch_sound" 1.0;
       }
       program { name: "button_unclick3";
          action: SIGNAL_EMIT "elm,action,click" "";
       }
       program { name: "icon_show";
          signal: "elm,state,icon,visible";
          source: "elm";
          action: STATE_SET "visible" 0.0;
          target: "elm.swallow.content";
       }
       program { name: "icon_hide";
          signal: "elm,state,icon,hidden";
          source: "elm";
          action: STATE_SET "default" 0.0;
          target: "elm.swallow.content";
       }
       program { name: "disable";
          signal: "elm,state,disabled";
          source: "elm";
          action: STATE_SET "disabled" 0.0;
          target: "disabler";
          target: "elm.icon.clipper";
          target: "button_bg";
       }
       program { name: "enable";
          signal: "elm,state,enabled";
          source: "elm";
          action: STATE_SET "default" 0.0;
          target: "disabler";
          target: "elm.icon.clipper";
          target: "button_bg";
       }
       program { name: "multi_down";
          signal: "elm,action,multi,down";
          source: "elm";
          script {
             set_int(multi_down, 1);
          }
       }
       program { name: "multi_up";
          signal: "elm,action,multi,up";
          source: "elm";
          script {
             set_int(multi_down, 0);
          }
       }
    }
 }

group { name: "elm/genlist/item/schedules/past/default";
   PROLOG_LIST
   data.item: "texts" "elm.text.1 elm.text.2 elm.text.noti";
   data.item: "contents" "elm.swallow.colorbar elm.icon.noti";

   parts {
      PART_LIST_BG
      PART_LIST_PADDINGS(
         LIST_PADDING_LEFT_SIZE, LIST_PADDING_RIGHT_SIZE,
         LIST_2LINE_PADDING_TOP_SIZE, LIST_2LINE_PADDING_BOTTOM_SIZE
      )
      PART_LIST_BOTTOMLINE
      PART(TEXTBLOCK, "elm.text.1",
         DESC_LRTB("elm.padding.left", "elm.icon.noti", "elm.padding.top", "elm.text.2",
            min: 0 0;
            PARAM_TEXT("list_text_main_dim",)
         ) DESCRIPIONS_TEXT("list_text_main_dim", "list_text_main_press")
      )
      PART(TEXTBLOCK, "elm.text.2",
         DESC_LRB("elm.padding.left", "elm.padding.right", "elm.padding.bottom",
            min: 0 0;
            PARAM_TEXT("list_text_sub_dim",)
         ) DESCRIPIONS_TEXT("list_text_sub_dim", "list_text_sub_press")
      )
      PART(SWALLOW, "elm.icon.noti",
         DESC_RTB("elm.padding.right", "elm.padding.top", "elm.text.2",
            min: 0 LIST_NOTI_NUMBER_ICON_HEIGHT;
         )
      )
      PART(TEXTBLOCK, "elm.text.noti",
         mouse_events: 0;
         DESC_TO("elm.icon.noti",
            min: 0 LIST_NOTI_NUMBER_ICON_HEIGHT;
            PARAM_TEXT("list_noti_style", min: 1 1;)
         )
      )
   }
   PROGRAMS_LIST( target: "elm.text.1"; target: "elm.text.2";
                 target: "elm.text.noti"; target: "elm.icon.noti";)
}

group { name: "elm/genlist/item/schedules_widget/default";
   PROLOG_LIST
   data.item: "texts" "elm.text.1 elm.text.2 elm.text.noti";
   data.item: "contents" "elm.swallow.colorbar elm.icon.noti";

   parts {
      PART(RECT, "bg_clip",
         mouse_events: 0;
         description { state: "default" 0.0; }
         description { state: "decorate" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 0;
         }
         description { state: "reorder" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 0;
         }
         description { state: "decorate_reorder" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 0;
         }
      )
      PART(RECT, "bg",
         clip_to: "bg_clip";
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
            color: LIST_SCHEDULES_BG_PRESSED_COLOR;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
            color_class: "B0211D";
         }
      )
      PART_LIST_PADDINGS(
         LIST_PADDING_LEFT_SIZE, LIST_PADDING_RIGHT_SIZE,
         LIST_2LINE_PADDING_TOP_SIZE, LIST_2LINE_PADDING_BOTTOM_SIZE
      )
      PART(RECT, "bottom_line_clip",
         description { state: "default" 0.0; }
         description { state: "hide" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 0;
         }
         description { state: "decorate" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 0;
         }
         description { state: "reorder" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 0;
         }
         description { state: "decorate_reorder" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 0;
         }
         description { state: "flipped" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 0;
         }
      )
      PART(RECT, "bottom_line",
         mouse_events: 0;
         clip_to: "bottom_line_clip";
         description { state: "default" 0.0;
            min: 0 1;
            max: -1 1;
            fixed: 0 1;
            align: 0.5 1;
            color: LIST_SCHEDULES_LINE_COLOR;
            color_class: "B0222";
            rel1.offset: -1 -1;
         }
      )
      PART(TEXTBLOCK, "elm.text.1",
         DESC_LRTB("elm.padding.left", "elm.icon.noti", "elm.padding.top", "elm.text.2",
            min: 0 0;
            PARAM_TEXT("list_text_main_normal_schedules",)
         ) DESCRIPIONS_TEXT("list_text_main_dim_schedules", "list_text_main_normal_schedules")
      )
      PART(TEXTBLOCK, "elm.text.2",
         DESC_LRB("elm.padding.left", "elm.padding.right", "elm.padding.bottom",
            min: 0 0;
            PARAM_TEXT("list_text_sub_normal_schedules",)
         ) DESCRIPIONS_TEXT("list_text_sub_dim_schedules", "list_text_sub_normal_schedules")
      )
      PART(SWALLOW, "elm.icon.noti",
         DESC_RTB("elm.padding.right", "elm.padding.top", "elm.text.2",
            min: 0 LIST_NOTI_NUMBER_ICON_HEIGHT;
         )
      )
      PART(TEXTBLOCK, "elm.text.noti",
         mouse_events: 0;
         DESC_TO("elm.icon.noti",
            min: 0 LIST_NOTI_NUMBER_ICON_HEIGHT;
            PARAM_TEXT("list_noti_style", min: 1 1;)
         )
      )
   }
   PROGRAMS_LIST( target: "elm.text.1"; target: "elm.text.2";
         target: "elm.text.noti"; target: "elm.icon.noti"; )
}

group { name: "elm/genlist/item/schedules_widget/past/default";
   inherit: "elm/genlist/item/schedules_widget/default";
   parts {
      PART(TEXTBLOCK, "elm.text.1",
         DESC_LRTB("elm.padding.left", "elm.icon.noti", "elm.padding.top", "elm.text.2",
            min: 0 0;
            PARAM_TEXT("list_text_main_dim_schedules",)
         ) DESCRIPIONS_TEXT("list_text_main_dim_schedules", "list_text_main_dim_schedules")
      )
      PART(TEXTBLOCK, "elm.text.2",
         DESC_LRB("elm.padding.left", "elm.padding.right", "elm.padding.bottom",
            min: 0 0;
            PARAM_TEXT("list_text_sub_dim_schedules",)
         ) DESCRIPIONS_TEXT("list_text_sub_dim_schedules", "list_text_sub_dim_schedules")
      )
   }
}

group { name: "elm/layout/nocontents/no_schedule";
   parts {
      part {
         name: "bg";
         type: RECT;
         scale: 1;
         description {
            state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
      part {
         name: "left_padding";
         type: SPACER;
         scale: 1;
         description {
            state: "default" 0.0;
            min: NOITEM_LR_PADDING_SIZE 0;
            max: NOITEM_LR_PADDING_SIZE -1;
            fixed: 1 1;
            align: 0.0 0.0;
            rel1 {
               to: "bg";
               relative: 0.0 0.0;
            }
            rel2 {
               to: "bg";
               relative: 0.0 0.0;
            }
         }
      }
      part {
         name: "right_padding";
         type: SPACER;
         scale: 1;
         description {
            state: "default" 0.0;
            min: NOITEM_LR_PADDING_SIZE 0;
            max: NOITEM_LR_PADDING_SIZE -1;
            fixed: 1 1;
            align: 1.0 0.0;
            rel1 {
               to: "bg";
               relative: 1.0 0.0;
            }
            rel2 {
               to: "bg";
               relative: 1.0 0.0;
            }
         }
      }
      part { name: "elm.text";
         type: TEXTBLOCK;
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1 {
               to_x: "left_padding";
               relative: 1.0 0.5;
            }
            rel2 {
               to_x: "right_padding";
               relative: 0.0 0.5;
            }
            text {
              style: "nocontent_noschedule_style";
              min: 0 1;
              max: 0 1;
            }
         }
      }
      part { name: "elm.swallow.content";
         type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0; }
      }
   }
}