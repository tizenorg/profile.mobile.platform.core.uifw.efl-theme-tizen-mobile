/*
 * Copyright (c) 2010 Samsung Electronics Co., Ltd All Rights Reserved
 *
 * BSD 2-Clause License (http://www.opensource.org/licenses/bsd-license.php)
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *   1. Redistributions of source code must retain the above copyright notice, this
 *      list of conditions and the following disclaimer.
 *   2. Redistributions in binary form must reproduce the above copyright notice,
 *      this list of conditions and the following disclaimer in the documentation
 *      and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

group { name: "elm/slider/horizontal/indicator/default";
        alias: "elm/slider/horizontal/indicator/disabled";
        alias: "elm/slider/horizontal/indicator/tap_to_drag";
        alias: "elm/slider/horizontal/indicator/textstyle";
        alias: "elm/slider/horizontal/indicator/numberstyle";
      images {
         image: "tw_scrubber_control_holo_dark.png" COMP;
      }
      parts {
         part { name: "access";
            type: RECT;
            description { state: "default" 0.0;
               fixed: 1 1;
               color: 0 0 0 0;
            }
         }
         part { name: "button_events";
            type: RECT;
            mouse_events: 1;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               min: 2*SLIDER_IND_WIDTH 1.5*SLIDER_IND_HEIGHT;
               color: 0 0 0 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
         }
         part { name: "button0";
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               min: SLIDER_IND_WIDTH SLIDER_IND_HEIGHT;
               max: SLIDER_IND_WIDTH SLIDER_IND_HEIGHT;
               image {
                  normal: "tw_scrubber_control_holo_dark.png";
               }
               color_class: "B065L1";
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               color_class: "B065L1P";
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color_class: "B065L1D";
            }
         }
      }
      programs {
         program { name: "slider_disable";
            signal: "elm,state,disabled";
            source: "elm";
            action:  STATE_SET "disabled" 0.0;
            target: "button0";
            target: "button_events";
         }
         program { name: "slider_enable";
            signal: "elm,state,enabled";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "button0";
            target: "button_events";
         }
         program { name: "mouse_down";
            signal: "mouse,down,*";
            source: "button_events";
            action:  STATE_SET "pressed" 0.0;
            target: "button0";
         }
         program { name: "mouse_up";
            signal: "mouse,up,*";
            source: "button_events";
            action:  STATE_SET "default" 0.0;
            target: "button0";
         }
      }
   }

   group { name: "elm/slider/horizontal/default";
           alias: "elm/slider/horizontal/disabled";
      script {
         public invert_on = 0;
         public set_invert_on() {
            set_state(PART:"level", "inverted", 0.0);
            set_int(invert_on, 1);
         }
         public set_invert_off() {
            set_state(PART:"level", "default", 0.0);
            set_int(invert_on, 0);
         }
         public thumb_down() {
            if(get_int(invert_on) == 0)
               set_state(PART:"level", "pressed", 0.0);
            }
         public thumb_up() {
            if(get_int(invert_on) == 0)
               set_state(PART:"level", "default", 0.0);
            }
         }
         parts {
            part { name: "access";
               type: RECT;
               description { state: "default" 0.0;
                  fixed: 1 1;
                  color: 0 0 0 0;
               }
            }
            part {
               name: "bg";
               type: RECT;
               scale: 1;
               description {
                  state: "default" 0.0;
                  min: 0 PROGRESSBAR_HEIGHT;
                  max: -1 PROGRESSBAR_HEIGHT;
                  fixed: 0 1;
                  color_class: "B065L3";
               }
            }
            part { name: "level";
               type: RECT;
               mouse_events: 0;
               scale: 1;
               clip_to: "clipper";
               description { state: "default" 0.0;
                  fixed: 0 1;
                  rel1 {
                     to_x: "bg";
                     relative: 0.0 0.0;
                  }
                  rel2 {
                     to_x: "elm.dragable.slider";
                     relative: 0.5 1.0;
                  }
                  color_class: "B065L2";
                  min: 0 PROGRESSBAR_HEIGHT;
                  max: -1 PROGRESSBAR_HEIGHT;
                  fixed: 0 1;
               }
               description { state: "inverted" 0.0;
                  inherit: "default" 0.0;
                  visible: 0;
               }
               description { state: "pressed" 0.0;
                  inherit: "default" 0.0;
               }
            }
            part { name: "base";
               type: RECT;
               mouse_events: 0;
               scale: 1;
               description { state: "default" 0.0;
                  visible: 0;
                  rel1.to: "elm.swallow.bar";
                  rel1.offset: -20 0; // FIXME: slider image has transparent area
                  rel2.to: "elm.swallow.bar";
                  rel2.offset: 10 0;  // FIXME: slider image has transparent area
               }
            }
            part { name: "elm.swallow.bar";
               type: SWALLOW;
               mouse_events: 0;
               scale: 1;
               description { state: "default" 0.0;
                  min: 0  SLIDER_IND_HEIGHT;
                  max: -1 SLIDER_IND_HEIGHT;
                  align: 1.0 0.5;
                  fixed: 0 1;
                  rel1 {
                     to_x: "bg";
                     relative: 0.0 0.0;
                  }
                  rel2 {
                     to_x: "bg";
                     relative: 1.0 1.0;
                  }
               }
            }
            part { name: "elm.dragable.slider";
               type: GROUP;
               source: "elm/slider/horizontal/indicator/default";
               mouse_events: 1;
               scale: 1;
               dragable {
                  x: 1 1 0;
                  y: 0 0 0;
                  confine: "base";
               }
               description { state: "default" 0.0;
                  min: SLIDER_IND_WIDTH SLIDER_IND_HEIGHT;
                  fixed: 1 1;
                  align: 0.5 0.5;
                  color: 0 0 0 0;
               }
            }
            part { name: "disabler";
               type: RECT;
               mouse_events: 1;
               repeat_events: 0;
               scale: 1;
               description { state: "default" 0.0;
                  visible: 0;
                  color: 0 0 0 0;
               }
               description { state: "disabled" 0.0;
                  inherit: "default" 0.0;
                  visible: 1;
               }
            }
            part { name: "clipper";
               type: RECT;
               description { state: "default" 0.0;
                  color: 255 255 255 255;
               }
               description { state: "disabled" 0.0;
                  color: 255 255 255 102;
               }
            }
         }
      programs {
         program { name: "invert_on";
            signal: "elm,state,inverted,on";
            source: "elm";
            script {
               set_invert_on();
            }
         }
         program { name: "invert_off";
            signal: "elm,state,inverted,off";
            source: "elm";
            script {
               set_invert_off();
            }
         }
         program { name: "val_show";
            signal: "mouse,down,*";
            source: "elm.dragable.slider";
            script {
               thumb_down();
            }
         }
         program { name: "val_hide";
            signal: "mouse,up,*";
            source: "elm.dragable.slider";
            script {
               thumb_up();
            }
         }
         program { name: "slider_disable";
            signal: "elm,state,disabled";
            source: "elm";
            action:  STATE_SET "disabled" 0.0;
            target: "disabler";
            target: "clipper";
         }
         program { name: "slider_enable";
            signal: "elm,state,enabled";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "disabler";
            target: "clipper";
         }
      }
   }
