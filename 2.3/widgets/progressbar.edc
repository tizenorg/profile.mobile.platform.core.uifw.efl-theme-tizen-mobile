/*
 * Copyright (c) 2010 Samsung Electronics Co., Ltd All Rights Reserved
 *
 * BSD 2-Clause License (http://www.opensource.org/licenses/bsd-license.php)
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *   1. Redistributions of source code must retain the above copyright notice, this
 *      list of conditions and the following disclaimer.
 *   2. Redistributions in binary form must reproduce the above copyright notice,
 *      this list of conditions and the following disclaimer in the documentation
 *      and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */


///////////////////////////////////////////////////////////////////////////////////////

   group { name: "elm/progressbar/horizontal/default";
      alias: "elm/progressbar/horizontal/list_progress";
      images {
         image: "core_progress_bg.#.png" COMP;
         image: "core_progress_bar.#.png" COMP;
      }
      parts {
         part { name: "access";
            type: RECT;
            description { state: "default" 0.0;
               fixed: 1 1;
               color: 0 0 0 0;
            }
         }
         part { name: "elm.padding.left";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               min: PROGRESSBAR_IMAGE_PADDING_SIZE_INC;
               rel1 {
                  relative: 0.0  0.0;
                  offset: 0 0;
               }
               rel2 {
                  relative: 0.0  1.0;
                  offset: 0 0;
               }
               align: 0.0 0.0;
               fixed: 1 0;
            }
         }
         part { name: "elm.padding.right";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               min: PROGRESSBAR_IMAGE_PADDING_SIZE_INC;
               rel1 {
                  relative: 1.0  0.0;
                  offset: 0 0;
               }
               rel2 {
                  relative: 1.0  1.0;
                  offset: 0 0;
               }
               align: 1.0 0.0;
               fixed: 1 0;
            }
         }
         part { name: "elm.background.progressbar";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               min: 0 PROGRESSBAR_BG_HEIGHT_INC;
               rel1 {
                  to_x: "elm.padding.left";
                  relative: 1.0 0.0;
                  offset: 0 0;
               }
               rel2 {
                  to_x: "elm.padding.right";
                  relative: 0.0 1.0;
                  offset: 0 0;
               }
            }
         }
         part { name: "elm.swallow.icon";
            type: SWALLOW;
            clip_to: "icon_clipper";
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               min: PROGRESSBAR_ICON_SIZE_INC;
               max: PROGRESSBAR_ICON_SIZE_INC;
               align: 0.0 0.5;
               rel1.to: "elm.background.progressbar";
               rel2.to: "elm.background.progressbar";
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part {
            name: "icon_right_padding";
            type: SPACER;
            scale: 1;
            description {
               state: "default" 0.0;
               min: 0 0;
               max: 0 0;
               rel1 {
                  relative: 1.0  0.0;
                  to: "elm.swallow.icon";
               }
               rel2 {
                  relative: 1.0  1.0;
                  to: "elm.swallow.icon";
               }
               fixed: 1 1;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               min: PROGRESSBAR_ICON_PADDING_SIZE_INC;
               max: PROGRESSBAR_ICON_PADDING_SIZE_INC;
            }
         }
         part { name: "elm.swallow.bar";
            mouse_events: 0;
            scale: 1;
            type: SWALLOW;
            description { state: "default" 0.0;
               min: 1 PROGRESSBAR_LIST_PROGRESS_HEIGHT_INC;
               max: -1 PROGRESSBAR_LIST_PROGRESS_HEIGHT_INC;
               rel1 {
                  to: "elm.background.progressbar";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to: "elm.background.progressbar";
                  relative: 1.0 1.0;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to_x: "icon_right_padding";
                  to_y: "elm.background.progressbar";
                  relative: 1.0 0.0;
               }
               rel2 {
                  to: "elm.background.progressbar";
                  relative: 1.0 1.0;
               }
            }
         }
         part { name: "background";
            mouse_events: 0;
            scale: 1;
            clip_to: "elm.background.progressbar";
            description { state: "default" 0.0;
               rel1 {
                  to: "elm.swallow.bar";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to: "elm.swallow.bar";
                  relative: 1.0 1.0;
               }
               image.normal: "core_progress_bg.#.png";
               color_class: "W062L1D";
            }
         }
         part { name: "swallowbar.bottom.pad";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               min: 0 PROGRESSBAR_BOTTOM_PADDING_HEIGHT_INC;
               rel1 {
                  to: "elm.swallow.bar";
                  relative: 0.0 1.0;
               }
               rel2 {
                  to: "elm.swallow.bar";
                  relative: 1.0 1.0;
               }
               align: 0.5 0.0;
               fixed: 1 1;
            }
         }
         part { name: "elm.text.status";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               visible: 0;
               rel1 {
                  to: "swallowbar.bottom.pad";
                  relative: 1.0 1.0;
               }
               rel2 {
                  to: "swallowbar.bottom.pad";
                  relative: 1.0 1.0;
               }
               text {
                  min: 0 0;
                  align: 0.5 0.5;
                  text_class: "T057";
               }
               align: 1.0 0.0;
               color_class: "T057";
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               text.min: 1 1;
            }
         }
         part { name: "drag.background";
            type: SPACER;
            scale: 1;
            clip_to: "elm.background.progressbar";
            description { state: "default" 0.0;
               rel1 {
                  to_x: "elm.padding.left";
                  to_y: "elm.swallow.bar";
                  relative: 1.0 0.0;
               }
               rel2 {
                  to_x: "elm.padding.right";
                  to_y: "elm.swallow.bar";
                  relative: 0.0 1.0;
               }
            }
         }
         part { name: "elm.progress.progressbar";
            mouse_events: 0;
            scale: 1;
            clip_to: "elm.background.progressbar";
            description { state: "default" 0.0;
               min: 0 0;
               fixed: 1 1;
               rel1 {
                  to: "elm.swallow.bar";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to_y: "elm.swallow.bar";
                  to_x: "elm.cur.progressbar";
                  offset: -1 -1;
               }
               image.normal: "core_progress_bar.#.png";
               color_class: "W062L1";
            }
            description { state: "invert" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to_y: "elm.swallow.bar";
                  to_x: "elm.cur.progressbar";
               }
               rel2 {
                  to_y: "elm.swallow.bar";
                  to_x: "elm.padding.right";
                  relative: 1.0 1.0;
               }
            }
            description { state: "state_begin" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to: "elm.swallow.bar";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to: "elm.swallow.bar";
                  relative: 0.1 1.0;
               }
            }
            description { state: "state_end" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to: "elm.swallow.bar";
                  relative: 0.9 0.0;
               }
               rel2 {
                  to: "elm.swallow.bar";
                  relative: 1.0 1.0;
               }
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color_class: "W062L1D";
            }
         }
         part { name: "elm.cur.progressbar";
            mouse_events: 0;
            scale: 1;
            dragable {
               confine: "drag.background";
               x: 1 1 1;
               y: 0 0 0;
            }
            description { state: "default" 0.0;
               min: 0 28;
               fixed: 1 1;
               visible: 0;
               rel1.to: "drag.background";
               rel2.to: "drag.background";
           }
         }
         part { name: "icon_clipper";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               color_class: "W062L4";
            }
         }
      }
      programs {
         program { name: "units_show";
            signal: "elm,state,units,visible";
            source: "elm";
            action:  STATE_SET "show" 0.0;
            target: "elm.text.status";
         }
         program { name: "units_hide";
            signal: "elm,state,units,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.text.status";
         }
         program { name: "slide_to_end";
            action:  STATE_SET "state_end" 0.0;
            transition: LINEAR 0.5;
            target: "elm.progress.progressbar";
            after: "slide_to_begin";
         }
         program { name: "slide_to_begin";
            signal: "elm,state,slide,begin";
            action: STATE_SET "state_begin" 0.0;
            target: "elm.progress.progressbar";
            transition: LINEAR 0.5;
            after: "slide_to_end";
         }
         program { name: "start_pulse";
            signal: "elm,state,pulse,start";
            source: "elm";
         }
         program { name: "stop_pulse";
            signal: "elm,state,pulse,stop";
            source: "elm";
            action: ACTION_STOP;
            target: "slide_to_begin";
            target: "slide_to_end";
            target: "start_pulse";
         }
         program { name: "state_pulse";
            signal: "elm,state,pulse";
            source: "elm";
            action: STATE_SET "state_begin" 0.0;
            target: "elm.progress.progressbar";
            after: "units_hide";
         }
         program { name: "icon_show";
            signal: "elm,state,icon,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.swallow.icon";
            target: "icon_right_padding";
            target: "elm.swallow.bar";
         }
         program { name: "state_fraction";
            signal: "elm,state,fraction";
            source: "elm";
            action: ACTION_STOP;
            target: "slide_to_begin";
            target: "slide_to_end";
            target: "start_pulse";
            action: STATE_SET "default" 0.0;
            target: "elm.progress.progressbar";
         }
         program { name: "set_invert_on";
            signal: "elm,state,inverted,on";
            source: "elm";
            action:  STATE_SET "invert" 0.0;
            target: "elm.progress.progressbar";
         }
         program { name: "set_invert_off";
            signal: "elm,state,inverted,off";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.progress.progressbar";
         }
      }
   }

   group { name: "elm/progressbar/horizontal/pending_list";
      images {
         image: "core_progress_bg.#.png" COMP;
         image: "core_progress_pending_bg_01.png" COMP;
         image: "core_progress_pending_bg_02.png" COMP;
      }
      parts {
         part { name: "access";
            type: RECT;
            description { state: "default" 0.0;
               fixed: 1 1;
               color: 0 0 0 0;
            }
         }
         part { name: "elm.padding.left";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               min: PROGRESSBAR_IMAGE_PADDING_SIZE_INC;
               rel1 {
                  relative: 0.0  0.0;
                  offset: 0 0;
               }
               rel2 {
                  relative: 0.0  1.0;
                  offset: 0 0;
               }
               align: 0.0 0.0;
               fixed: 1 0;
            }
         }
         part { name: "elm.padding.right";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               min: PROGRESSBAR_IMAGE_PADDING_SIZE_INC;
               rel1 {
                  relative: 1.0  0.0;
                  offset: 0 0;
               }
               rel2 {
                  relative: 1.0  1.0;
                  offset:   0   0;
               }
               align: 1.0 0.0;
               fixed: 1 0;
            }
         }
         part { name: "elm.background.progressbar";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               rel1 {
                  relative: 1.0 0.0;
                  to: "elm.padding.left";
               }
               rel2 {
                  relative: 0.0 1.0;
                  to: "elm.padding.right";
               }
            }
         }
         part { name: "elm.swallow.bar";
            mouse_events: 0;
            scale: 1;
            type: SWALLOW;
            description { state: "default" 0.0;
               min: 1 PROGRESSBAR_LIST_PROGRESS_HEIGHT_INC;
               max: -1 PROGRESSBAR_LIST_PROGRESS_HEIGHT_INC;
               rel1 {
                  relative: 1.0 0.0;
                  to: "elm.padding.left";
               }
               rel2 {
                  relative: 0.0 1.0;
                  to: "elm.padding.right";
               }
            }
         }
         part { name: "background";
            mouse_events: 0;
            scale: 1;
            clip_to: "elm.background.progressbar";
            description {
               state: "default" 0.0;
               rel1 {
                  to: "elm.swallow.bar";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to: "elm.swallow.bar";
                  relative: 1.0 1.0;
               }
            image.normal: "core_progress_bg.#.png";
            color_class: "W062L1D";
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color_class: "W062L1D";
            }
         }
         part { name: "elm.progress.progressbar";
            mouse_events: 0;
            scale: 1;
            clip_to: "elm.background.progressbar";
            description { state: "default" 0.0;
               min: 0 0;
               fixed: 1 1;
               rel1 {
                  to: "background";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to: "background";
                  relative: 1.0 1.0;
                  offset: -1 -1;
               }
               image.normal: "core_progress_pending_bg_01.png";
               color_class: "W062L4";
            }
            description { state: "state_begin" 0.0;
               inherit: "default" 0.0;
            }
            description { state: "state_end" 0.0;
               inherit: "default" 0.0;
               image.normal: "core_progress_pending_bg_02.png";
               color_class: "W062L4";
            }
         }
      }
      script {
         public state_end = 0;
      }
      programs {
         program { name: "slide_to_end";
            in: 0.3 0.0;
            script {
               set_state(PART:"elm.progress.progressbar", "state_end", 0.0);
               set_int(state_end, 1);
            }
            after: "slide_to_begin";
         }
         program { name: "slide_to_begin";
            signal: "elm,state,slide,begin";
            in: 0.3 0.0;
            script {
               set_state(PART:"elm.progress.progressbar", "state_begin", 0.0);
               set_int(state_end, 0);
            }
            after: "slide_to_end";
         }
         program { name: "start_pulse";
            signal: "elm,state,pulse,start";
            source: "elm";
            after: "slide_to_end";
         }
         program { name: "stop_pulse";
            signal: "elm,state,pulse,stop";
            source: "elm";
            action: ACTION_STOP;
            target: "slide_to_begin";
            target: "slide_to_end";
            target: "start_pulse";
            after: "init_pulse";
         }
         program { name: "init_pulse";
            action: STATE_SET "default" 0.0;
            target: "elm.progress.progressbar";
         }
         program { name: "progressbar_disable";
            signal: "elm,state,disabled";
            source: "elm";
            script {
               set_state(PART:"background", "disabled", 0.0);
               if (!get_int(state_end))
                  set_state(PART:"elm.progress.progressbar", "state_begin_disabled", 0.0);
               else
                  set_state(PART:"elm.progress.progressbar", "state_end_disabled", 0.0);
            }
         }
         program { name: "progressbar_enable";
            signal: "elm,state,enabled";
            source: "elm";
            script {
               set_state(PART:"background", "default", 0.0);
               if (!get_int(state_end))
                  set_state(PART:"elm.progress.progressbar", "state_begin", 0.0);
               else
                  set_state(PART:"elm.progress.progressbar", "state_end", 0.0);
            }
         }
      }
   }

#define PROGRESS_DESC(NUM , SIZE) \
   description { state: "pulse" 0.0; \
      inherit: "default" 0.0; \
      image.normal: "core_activity_Indicator_"SIZE".png"; \
      map { \
         on: 1; \
         smooth: 0; \
         rotation { \
            z: NUM; \
         } \
      } \
   }

#define PROCESS_DESCS(WIDTH, HEIGHT, SIZE) \
      description { \
         state: "default" 0.0; \
         min: WIDTH HEIGHT; \
         max: WIDTH HEIGHT; \
         aspect: 1.0 1.0; \
         aspect_preference: BOTH; \
         image.normal: "core_activity_Indicator_"SIZE".png"; \
      } \
      PROGRESS_DESC(-360, SIZE)

#define   PROGRESSING_DELAY    0.01

   group { name: "elm/progressbar/horizontal/process_large";
      images {
         image: "core_activity_Indicator_large.png" COMP;
      }
      parts {
         part { name: "access";
            type: RECT;
            description { state: "default" 0.0;
               fixed: 1 1;
               color: 0 0 0 0;
            }
         }
         part { name: "elm.background.progressbar";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
            }
         }
         part { name: "background";
            mouse_events: 0;
            scale: 1;
            clip_to: "elm.background.progressbar";
            description { state: "default" 0.0;
               min: PROCESS_LARGE_IMAGE_WIDTH_INC PROCESS_LARGE_IMAGE_HEIGHT_INC;
               max: PROCESS_LARGE_IMAGE_WIDTH_INC PROCESS_LARGE_IMAGE_HEIGHT_INC;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               color_class: "W157E2";
               image.normal: "core_activity_Indicator_large.png";
            }
            PROCESS_DESCS(PROCESS_LARGE_IMAGE_WIDTH_INC, PROCESS_LARGE_IMAGE_HEIGHT_INC, "large");
         }
      }
      script {
         public flag = 0;
      }
      programs {
         program { name: "continue_pulse";
            action: STATE_SET "default" 0.0;
            target: "background";
            transition: LINEAR 1.8;
            after: "start_pulse1";
         }
         program { name: "start_pulse";
            signal: "elm,state,pulse,start";
            source: "elm";
            script {
               if (get_int(flag) == 0) {
                  set_int(flag, 1);
                  run_program(PROGRAM:"start_pulse1");
               }
            }
         }
         program { name: "start_pulse1";
            action: STATE_SET "pulse" 0.0;
            in: PROGRESSING_DELAY 0.0;
            target: "background";
            after: "continue_pulse";
         }
         program { name: "stop_pulse";
            signal: "elm,state,pulse,stop";
            source: "elm";
            action: ACTION_STOP;
            target: "continue_pulse";
            target: "start_pulse1";
            after: "init_pulse";
            script {
               set_int(flag, 0);
            }
         }
         program { name: "init_pulse";
            action: STATE_SET "default" 0.0;
            target: "background";
            transition: LINEAR 1.8;
         }
      }
   }

   group { name: "elm/progressbar/horizontal/process_medium";
      images {
         image: "core_activity_Indicator_medium.png" COMP;
      }
      parts {
         part { name: "access";
            type: RECT;
            description { state: "default" 0.0;
               fixed: 1 1;
               color: 0 0 0 0;
            }
         }
         part { name: "elm.background.progressbar";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
            }
         }
         part { name: "background";
            mouse_events: 0;
            scale: 1;
            clip_to: "elm.background.progressbar";
            description { state: "default" 0.0;
               min: PROCESS_MEDIUM_IMAGE_WIDTH_INC PROCESS_MEDIUM_IMAGE_HEIGHT_INC;
               max: PROCESS_MEDIUM_IMAGE_WIDTH_INC PROCESS_MEDIUM_IMAGE_HEIGHT_INC;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               color_class: "W157E2";
               image.normal: "core_activity_Indicator_medium.png";
            }
            PROCESS_DESCS(PROCESS_MEDIUM_IMAGE_WIDTH_INC, PROCESS_MEDIUM_IMAGE_HEIGHT_INC, "medium");
         }
      }
      script {
         public flag = 0;
      }
      programs {
         program { name: "continue_pulse";
            action: STATE_SET "default" 0.0;
            target: "background";
            transition: LINEAR 1.8;
            after: "start_pulse1";
         }
         program { name: "start_pulse";
            signal: "elm,state,pulse,start";
            source: "elm";
            script {
               if (get_int(flag) == 0) {
                  set_int(flag, 1);
                  run_program(PROGRAM:"start_pulse1");
               }
            }
         }
         program { name: "start_pulse1";
            action: STATE_SET "pulse" 0.0;
            in: PROGRESSING_DELAY 0.0;
            target: "background";
            after: "continue_pulse";
         }
         program { name: "stop_pulse";
            signal: "elm,state,pulse,stop";
            source: "elm";
            action: ACTION_STOP;
            target: "continue_pulse";
            target: "start_pulse1";
            after: "init_pulse";
            script {
               set_int(flag, 0);
            }
         }
         program { name: "init_pulse";
            action: STATE_SET "default" 0.0;
            target: "background";
         }
      }
   }

   group { name: "elm/progressbar/horizontal/process_small";
      images {
         image: "core_activity_Indicator_small.png" COMP;
      }
      parts {
         part { name: "access";
            type: RECT;
            description { state: "default" 0.0;
               fixed: 1 1;
               color: 0 0 0 0;
            }
         }
         part { name: "elm.background.progressbar";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
            }
         }
         part { name: "background";
            mouse_events: 0;
            scale: 1;
            clip_to: "elm.background.progressbar";
            description { state: "default" 0.0;
               min: PROCESS_SMALL_IMAGE_WIDTH_INC PROCESS_SMALL_IMAGE_HEIGHT_INC;
               max: PROCESS_SMALL_IMAGE_WIDTH_INC PROCESS_SMALL_IMAGE_HEIGHT_INC;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               color_class: "W157E1";
               image.normal: "core_activity_Indicator_small.png";
            }
            PROCESS_DESCS(PROCESS_SMALL_IMAGE_WIDTH_INC, PROCESS_SMALL_IMAGE_HEIGHT_INC, "small");
         }
      }
      script {
         public flag = 0;
      }
      programs {
         program { name: "continue_pulse";
            action: STATE_SET "default" 0.0;
            target: "background";
            transition: LINEAR 1.8;
            after: "start_pulse1";
         }
         program { name: "start_pulse";
            signal: "elm,state,pulse,start";
            source: "elm";
            script {
               if (get_int(flag) == 0) {
                  set_int(flag, 1);
                  run_program(PROGRAM:"start_pulse1");
               }
            }
         }
         program { name: "start_pulse1";
            action: STATE_SET "pulse" 0.0;
            in: PROGRESSING_DELAY 0.0;
            target: "background";
            after: "continue_pulse";
         }
         program { name: "stop_pulse";
            signal: "elm,state,pulse,stop";
            source: "elm";
            action: ACTION_STOP;
            target: "continue_pulse";
            target: "start_pulse1";
            after: "init_pulse";
            script {
               set_int(flag, 0);
            }
         }
         program { name: "init_pulse";
            action: STATE_SET "default" 0.0;
            target: "background";
         }
      }
   }
