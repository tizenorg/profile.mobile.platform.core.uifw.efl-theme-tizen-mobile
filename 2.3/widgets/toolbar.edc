#define ITEM_STATE_ENABLED 0
#define ITEM_STATE_DISABLED 1
#define TAG \
      tag: "br" "\n"; \
      tag: "ps" "ps"; \
      tag: "hilight" "+ font_weight=Bold"; \
      tag: "b" "+ font_weight=Bold"; \
      tag: "tab" "\t";

#define TABBAR_ITEM_TEXT_STYLE(_font_size, _font_class) \
   style { name: "tabbar_item_text_style_"_font_class; \
      base: "font=Tizen:style=regular font_size="_font_size" align=center color=#FFFFFF wrap=word ellipsis=1 text_class=T111 color_class="_font_class" linegap=0"; \
      TAG \
   }

#define TABBAR_TEXT_STYLE(_font_size, _font_class) \
   style { name: "tabbar_text_style_"_font_class; \
      base: "font=Tizen:style=regular font_size="_font_size" align=center color=#FFFFFF wrap=word ellipsis=1 text_class=T111 color_class=T1117 linegap=0"; \
      TAG \
   }
styles{
   TABBAR_ITEM_TEXT_STYLE(14, "T111")
   TABBAR_ITEM_TEXT_STYLE(14, "T111P")
   TABBAR_ITEM_TEXT_STYLE(14, "T111S")
   TABBAR_ITEM_TEXT_STYLE(14, "T111D")
   TABBAR_TEXT_STYLE(18, "T1117")
   TABBAR_TEXT_STYLE(18, "T1117P")
   TABBAR_TEXT_STYLE(18, "T1117S")
   TABBAR_TEXT_STYLE(18, "T1117D")
}

group { name: "elm/toolbar/base/default";
   parts {
      part { name: "base";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
         }
      }
      part { name: "base_bg";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "base";
            rel2.to: "base";
            rel2.offset: -1 -1;
            color_class: "B012";
         }
      }
     part { name: "clipper";
         type: RECT;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "base";
            rel2.to: "base";
            rel2.offset: -1 -1;
         }
      }
      part { name: "elm.swallow.content";
         clip_to: "clipper";
         type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "base";
            rel2.to: "base";
            rel2.offset: -1 -1;
         }
      }
   }
}

group { name: "elm/toolbar/item/default";
   script {
      public selected = 0;
      public pressed = 0;
      public item_state = ITEM_STATE_ENABLED;
      public items_number = 0;
      public mouse_down = 0;
      public multi_down = 0;
   }
   parts {
      part { name: "bg";
         type: SPACER;
         scale: 1;
         mouse_events: 0;
         description { state: "default" 0.0;
         }
         description { state: "2items" 0.0;
            inherit: "default" 0.0;
            min: 160 0;
         }
         description { state: "3items" 0.0;
            inherit: "default" 0.0;
            min: 106 0;
         }
         description { state: "4items" 0.0;
            inherit: "default" 0.0;
            min: 80 0;
         }
         description { state: "scrollable" 0.0;
            inherit: "default" 0.0;
            min: 95 0;
         }
      }
      part { name: "selected_line";
         type: RECT;
         scale: 1;
         mouse_events: 0;
         description { state: "default" 0.0;
            rel1 {
                to: "elm.text";
                relative: 0.0 1.0;
            }
            rel2 {
                to: "elm.text";
                relative: 1.0 1.0;
            }
            fixed: 0 1;
            min: TABBAR_SELECTED_LINE_SIZE_INC;
            visible: 0;
            color_class: "B0514S";
            align: 0.5 0.0;
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "bg_cover";
         type: RECT;
         scale: 1;
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
            color_class: "B0514";
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            color_class: "B0514P";
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "padding_left_top";
         type: SPACER;
         scale: 1;
         mouse_events: 0;
         description { state: "default" 0.0;
            align: 0.0 0.0;
            rel2.relative: 0.0 0.0;
            min: 0 0;
            fixed: 1 1;
         }
         description { state: "text" 0.0;
            inherit: "default" 0.0;
            min: TABBAR_TEXT_LEFT_TOP_PADDING_SIZE_INC;
         }
      }
      part { name: "padding_right_bottom";
         type: SPACER;
         scale: 1;
         mouse_events: 0;
         description { state: "default" 0.0;
            align: 1.0 1.0;
            rel1.relative: 1.0 1.0;
            min: 0 0;
            fixed: 1 1;
         }
         description { state: "text" 0.0;
            inherit: "default" 0.0;
            min: TABBAR_TEXT_RIGHT_BOTTOM_PADDING_SIZE_INC;
         }
      }
      part { name: "elm.text";
         type: TEXTBLOCK;
         mouse_events: 0;
         scale: 1;
         clip_to: "elm.text.clipper";
         description { state: "default" 0.0;
            visible: 0;
         }
         description { state: "text" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            rel1 {
               to: "padding_left_top";
               relative: 1.0 1.0;
            }
            rel2 {
               to: "padding_right_bottom";
               relative: 0.0 0.0;
            }
            fixed: 1 1;
            max: TABBAR_TEXT_TEXT_SIZE_INC;
            text {
               style: "tabbar_text_style_T1117";
               min: 0 1;
               max: 1 0;
            }
         }
         description { state:"text_pressed" 0.0;
            inherit: "text" 0.0;
            text.style: "tabbar_text_style_T1117P";
         }
         description { state:"text_selected" 0.0;
            inherit: "text" 0.0;
            text.style: "tabbar_text_style_T1117S";
         }
         description { state:"text_disabled" 0.0;
            inherit: "text" 0.0;
            text.style: "tabbar_text_style_T1117D";
         }
      }
      part { name: "elm.text.clipper";
         type: RECT;
         description { state: "default" 0.0;
            color: 255 255 255 255;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
         }
      }
      part { name: "event";
         type: RECT;
         mouse_events: 1;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
   }
   programs {
      program { name: "go_active";
         signal:  "elm,state,selected";
         source:  "elm";
         action:  STATE_SET "selected" 0.0;
         target:  "selected_line";
         after: "selected_text";
      }
      program { name: "selected_text";
         script{
            set_int(selected, 1);
            set_state(PART:"elm.text", "text_selected", 0.0);
         }
      }
      program { name: "go_passive";
         signal:  "elm,state,unselected";
         source:  "elm";
         action:  STATE_SET "default" 0.0;
         target:  "selected_line";
         after: "unselected_text";
      }
      program { name: "unselected_text";
         script{
            set_int(selected, 0);
            set_state(PART:"elm.text", "text", 0.0);
         }
      }
      program { name: "key,pressed";
         signal: "elm,action,pressed";
         source: "elm";
         after: "pressed";
      }
      program { name: "pressed";
         signal:  "mouse,down,1";
         source:  "event";
         script {
            if ((get_int(item_state) != ITEM_STATE_DISABLED)
                && get_int(multi_down) == 0
                && get_int(mouse_down) == 0)
              {
                 set_int(mouse_down, 1);
                 set_state(PART:"bg_cover", "pressed", 0.0);
                 set_state(PART:"elm.text", "text_pressed", 0.0);
                 set_int(pressed, 1);
              }
         }
      }
      program { name: "key,unpressed";
         signal: "elm,action,unpressed";
         source: "elm";
         after: "unpressed";
      }
      program { name: "unpressed";
         signal:  "mouse,up,1";
         source:  "event";
         script {
            if ((get_int(item_state) != ITEM_STATE_DISABLED)
                && get_int(mouse_down) == 1)
              {
                set_int(mouse_down, 0);
                set_int(pressed, 0);
                set_state(PART:"bg_cover", "default", 0.0);
                if (get_int(selected))
                  {
                     set_state(PART:"elm.text", "text_selected", 0.0);
                  }
                else
                  {
                     set_state(PART:"elm.text", "text", 0.0);
                  }
              }
         }
      }
      program { name: "go";
         signal:  "mouse,clicked,1";
         source:  "event";
         script {
            if (get_int(multi_down) == 0) {
               emit("elm,action,click", "elm");
        //       if (get_int(item_state) != ITEM_STATE_DISABLED)
          //        run_program(PROGRAM:"play_sound");
            }
         }
      }
/*      program { name: "play_sound";
         action: PLAY_SAMPLE "touch_sound" 1.0;
      }*/
      program { name: "mouse,in";
         signal:  "mouse,in";
         source:  "event";
         script {
            if (get_int(multi_down) == 0)
              emit("elm,mouse,in", "elm");
         }
      }
      program { name: "mouse,out";
         signal:  "mouse,out";
         source:  "event";
         script {
            if ((get_int(multi_down) == 0) && (get_int(mouse_down) == 0))
              emit("elm,mouse,out", "elm");
         }
      }
      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         script {
            set_int(item_state, ITEM_STATE_ENABLED);
            set_state(PART:"bg_cover", "default", 0.0);
            set_state(PART:"elm.text", "text", 0.0);
            set_state(PART:"elm.text.clipper", "default", 0.0);
         }
      }
      program { name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         script {
            set_int(item_state, ITEM_STATE_DISABLED);
            set_state(PART:"bg_cover", "disabled", 0.0);
            set_state(PART:"elm.text", "text_disabled", 0.0);
            set_state(PART:"elm.text.clipper", "disabled", 0.0);
         }
      }
      program {name: "multi_down";
         signal: "elm,action,multi,down";
         source: "elm";
         script {
            set_int(multi_down, 1);
         }
      }
      program {name: "multi_up";
         signal: "elm,action,multi,cancel";
         source: "elm";
         script {
            set_int(multi_down, 0);
         }
      }
      program { name: "text_show";
         signal: "elm,state,text,visible";
         source: "elm";
         script {
              set_state(PART:"elm.text", "text", 0.0);
              set_state(PART:"padding_left_top", "text", 0.0);
              set_state(PART:"padding_right_bottom", "text", 0.0);
         }
      }
      program { name: "text_hide";
         signal: "elm,state,text,hidden";
         source: "elm";
         script {
            set_state(PART:"elm.text", "default", 0.0);
         }
      }
      program { name: "tab_item_2";
         signal: "elm,number,item,2";
         source: "elm";
         script {
            set_int(items_number, 2);
            set_state(PART:"bg", "2items", 0.0);
         }
      }
      program { name: "tab_item_3";
         signal: "elm,number,item,3";
         source: "elm";
         script {
            set_int(items_number, 3);
            set_state(PART:"bg", "3items", 0.0);
         }
      }
      program { name: "tab_item_4";
         signal: "elm,number,item,4";
         source: "elm";
         script {
            set_int(items_number, 4);
            set_state(PART:"bg", "4items", 0.0);
         }
      }
      program { name: "tab_item_5";
         signal: "elm,number,item,5";
         source: "elm";
         script {
            set_int(items_number, 5);
         }
         after: "tab_item_upper_5";
      }
      program { name: "tab_item_6";
         signal: "elm,number,item,6";
         source: "elm";
         script {
            set_int(items_number, 6);
         }
         after: "tab_item_upper_5";
      }
      program { name: "tab_item_7";
         signal: "elm,number,item,7";
         source: "elm";
         script {
            set_int(items_number, 7);
         }
         after: "tab_item_upper_5";
      }
      program { name: "tab_item_8";
         signal: "elm,number,item,8";
         source: "elm";
         script {
            set_int(items_number, 8);
         }
         after: "tab_item_upper_5";
      }
      program { name: "tab_item_9";
         signal: "elm,number,item,9";
         source: "elm";
         script {
            set_int(items_number, 9);
         }
         after: "tab_item_upper_5";
      }
      program { name: "tab_item_10";
         signal: "elm,number,item,10";
         source: "elm";
         script {
            set_int(items_number, 10);
         }
         after: "tab_item_upper_5";
      }
      program { name: "tab_item_upper_5";
         script {
            set_state(PART:"bg", "scrollable", 0.0);
         }
      }
   }
}

group { name: "elm/toolbar/base/icon_text";
   parts {
      part { name: "base";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
         }
      }
      part { name: "base_bg";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "base";
            rel2.to: "base";
            rel2.offset: -1 -1;
            color_class: "B012";
         }
      }
     part { name: "clipper";
         type: RECT;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "base";
            rel2.to: "base";
            rel2.offset: -1 -1;
         }
      }
      part { name: "elm.swallow.content";
         clip_to: "clipper";
         type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "base";
            rel2.to: "base";
            rel2.offset: -1 -1;
         }
      }
   }
}

group { name: "elm/toolbar/item/icon_text";
   script {
      public selected = 0;
      public pressed = 0;
      public item_state = ITEM_STATE_ENABLED;
      public items_number = 0;
      public mouse_down = 0;
      public multi_down = 0;
   }
   parts {
      part { name: "bg";
         type: SPACER;
         scale: 1;
         mouse_events: 0;
         description { state: "default" 0.0;
         }
         description { state: "2items" 0.0;
            inherit: "default" 0.0;
            min: 160 0;
         }
         description { state: "3items" 0.0;
            inherit: "default" 0.0;
            min: 106 0;
         }
         description { state: "4items" 0.0;
            inherit: "default" 0.0;
            min: 80 0;
         }
         description { state: "scrollable" 0.0;
            inherit: "default" 0.0;
            min: 95 0;
         }
      }
      part { name: "selected_line";
         type: RECT;
         scale: 1;
         mouse_events: 0;
         description { state: "default" 0.0;
            rel1 {
                to: "elm.text";
                relative: 0.0 1.0;
            }
            rel2 {
                to: "elm.text";
                relative: 1.0 1.0;
            }
            fixed: 0 1;
            min: TABBAR_SELECTED_LINE_SIZE_INC;
            visible: 0;
            color_class: "B0514S";
            align: 0.5 0.0;
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "bg_cover";
         type: RECT;
         scale: 1;
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
            color_class: "B0514";
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            color_class: "B0514P";
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "padding_left_top";
         type: SPACER;
         scale: 1;
         mouse_events: 0;
         description { state: "default" 0.0;
            align: 0.0 0.0;
            rel2.relative: 0.0 0.0;
            min: 0 0;
            fixed: 1 1;
         }
         description { state: "icon_text" 0.0;
            inherit: "default" 0.0;
            min: TABBAR_ICON_TEXT_LEFT_TOP_PADDING_SIZE_INC;
         }
      }
      part { name: "padding_right_bottom";
         type: SPACER;
         scale: 1;
         mouse_events: 0;
         description { state: "default" 0.0;
            align: 1.0 1.0;
            rel1.relative: 1.0 1.0;
            min: 0 0;
            fixed: 1 1;
         }
         description { state: "icon_text" 0.0;
            inherit: "default" 0.0;
            min: TABBAR_ICON_TEXT_RIGHT_BOTTOM_PADDING_SIZE_INC;
         }
      }
      part {
         name: "icon_rect";
         type: SPACER;
         scale: 1;
         mouse_events: 0;
         description { state: "default" 0.0;
            min: 0 0;
            fixed: 0 1;
            rel2 {
               relative: 1.0 0.0;
            }
            align: 0.5 0.0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            min: TABBAR_ICON_SIZE_INC;
         }
      }
      part { name: "elm.swallow.icon";
         type: SWALLOW;
         scale: 1;
         clip_to: "elm.icon.clipper";
         description { state: "default" 0.0;
            visible: 0;
            min: TABBAR_ICON_SIZE_INC;
            max: TABBAR_ICON_SIZE_INC;
            aspect: 1.0 1.0;
            aspect_preference: HORIZONTAL;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            align: 0.5 1.0;
            fixed: 1 1;
            rel1 {
               to_y: "elm.text";
               relative: 0.0 0.0;
            }
            rel2 {
               to_y: "elm.text";
               relative: 1.0 0.0;
            }
         }
      }
      part { name: "elm.text";
         type: TEXTBLOCK;
         mouse_events: 0;
         scale: 1;
         clip_to: "elm.text.clipper";
         description { state: "default" 0.0;
            visible: 0;
         }
         description { state: "icon_text" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            rel1 {
               to_x: "padding_left_top";
               to_y: "icon_rect";
               relative: 1.0 1.0;
            }
            rel2 {
               to: "padding_right_bottom";
               relative: 0.0 0.0;
            }
            fixed: 1 1;
            max: TABBAR_ICON_TEXT_TEXT_SIZE_INC;
            text {
               style: "tabbar_item_text_style_T111";
               min: 0 1;
               max: 1 0;
            }
         }
         description { state:"icon_text_pressed" 0.0;
            inherit: "icon_text" 0.0;
            text.style: "tabbar_icon_text_style_T111P";
         }
         description { state:"icon_text_selected" 0.0;
            inherit: "icon_text" 0.0;
            text.style: "tabbar_icon_text_style_T111S";
         }
         description { state:"icon_text_disabled" 0.0;
            inherit: "icon_text" 0.0;
            text.style: "tabbar_icon_text_style_T111D";
         }

      }
      part { name: "elm.icon.clipper";
         type: RECT;
         description { state: "default" 0.0;
            color_class: "B052L6";
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            color_class: "B052L6S";
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            color_class: "B052L6P";
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color_class: "B052L6D";
         }
      }
      part { name: "elm.text.clipper";
         type: RECT;
         description { state: "default" 0.0;
            color: 255 255 255 255;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
         }
      }
      part { name: "event";
         type: RECT;
         mouse_events: 1;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
   }
   programs {
      program { name: "go_active";
         signal:  "elm,state,selected";
         source:  "elm";
         action:  STATE_SET "selected" 0.0;
         target:  "elm.icon.clipper";
         target:  "selected_line";
         after: "selected_text";
      }
      program { name: "selected_text";
         script{
            set_int(selected, 1);
            set_state(PART:"elm.text", "icon_text_selected", 0.0);
         }
      }
      program { name: "go_passive";
         signal:  "elm,state,unselected";
         source:  "elm";
         action:  STATE_SET "default" 0.0;
         target:  "elm.icon.clipper";
         target:  "selected_line";
         after: "unselected_text";
      }
      program { name: "unselected_text";
         script{
            set_int(selected, 0);
            set_state(PART:"elm.text", "icon_text", 0.0);
         }
      }
      program { name: "key,pressed";
         signal: "elm,action,pressed";
         source: "elm";
         after: "pressed";
      }
      program { name: "pressed";
         signal:  "mouse,down,1";
         source:  "event";
         script {
            if ((get_int(item_state) != ITEM_STATE_DISABLED)
                && get_int(multi_down) == 0
                && get_int(mouse_down) == 0)
              {
                 set_int(mouse_down, 1);
                 set_state(PART:"bg_cover", "pressed", 0.0);
                 set_state(PART:"elm.text", "icon_text_pressed", 0.0);
                 set_state(PART:"elm.icon.clipper", "pressed", 0.0);
                 set_int(pressed, 1);
              }
         }
      }
      program { name: "key,unpressed";
         signal: "elm,action,unpressed";
         source: "elm";
         after: "unpressed";
      }
      program { name: "unpressed";
         signal:  "mouse,up,1";
         source:  "event";
         script {
            if ((get_int(item_state) != ITEM_STATE_DISABLED)
                && get_int(mouse_down) == 1)
              {
                set_int(mouse_down, 0);
                set_int(pressed, 0);
                set_state(PART:"bg_cover", "default", 0.0);
                if (get_int(selected))
                  {
                     set_state(PART:"elm.text", "icon_text_selected", 0.0);
                     set_state(PART:"elm.icon.clipper", "selected", 0.0);
                  }
                else
                  {
                     set_state(PART:"elm.text", "icon_text", 0.0);
                     set_state(PART:"elm.icon.clipper", "default", 0.0);
                  }
              }
         }
      }
      program { name: "go";
         signal:  "mouse,clicked,1";
         source:  "event";
         script {
            if (get_int(multi_down) == 0) {
               emit("elm,action,click", "elm");
        //       if (get_int(item_state) != ITEM_STATE_DISABLED)
          //        run_program(PROGRAM:"play_sound");
            }
         }
      }
/*      program { name: "play_sound";
         action: PLAY_SAMPLE "touch_sound" 1.0;
      }*/
      program { name: "mouse,in";
         signal:  "mouse,in";
         source:  "event";
         script {
            if (get_int(multi_down) == 0)
              emit("elm,mouse,in", "elm");
         }
      }
      program { name: "mouse,out";
         signal:  "mouse,out";
         source:  "event";
         script {
            if ((get_int(multi_down) == 0) && (get_int(mouse_down) == 0))
              emit("elm,mouse,out", "elm");
         }
      }
      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         script {
            set_int(item_state, ITEM_STATE_ENABLED);
            set_state(PART:"bg_cover", "default", 0.0);
            set_state(PART:"elm.text", "icon_text", 0.0);
            set_state(PART:"elm.text.clipper", "default", 0.0);
            set_state(PART:"elm.icon.clipper", "default", 0.0);
         }
      }
      program { name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         script {
            set_int(item_state, ITEM_STATE_DISABLED);
            set_state(PART:"bg_cover", "disabled", 0.0);
            set_state(PART:"elm.text", "icon_text_disabled", 0.0);
            set_state(PART:"elm.text.clipper", "disabled", 0.0);
            set_state(PART:"elm.icon.clipper", "disabled", 0.0);
         }
      }
      program {name: "multi_down";
         signal: "elm,action,multi,down";
         source: "elm";
         script {
            set_int(multi_down, 1);
         }
      }
      program {name: "multi_up";
         signal: "elm,action,multi,cancel";
         source: "elm";
         script {
            set_int(multi_down, 0);
         }
      }
      program { name: "text_show";
         signal: "elm,state,text,visible";
         source: "elm";
      }
      program { name: "text_hide";
         signal: "elm,state,text,hidden";
         source: "elm";
         script {
            set_state(PART:"elm.text", "default", 0.0);
         }
      }
      program { name: "icon_show";
         signal: "elm,state,icon,visible";
         source: "elm";
         script {
            set_state(PART:"elm.swallow.icon", "visible", 0.0);
            set_state(PART:"icon_rect", "visible", 0.0);
            set_state(PART:"elm.text", "icon_text", 0.0);
            set_state(PART:"padding_left_top", "icon_text", 0.0);
            set_state(PART:"padding_right_bottom", "icon_text", 0.0);
         }
      }
      program { name: "icon_hide";
         signal: "elm,state,icon,hidden";
         source: "elm";
         script {
            set_state(PART:"elm.swallow.icon", "default", 0.0);
         }
      }
      program { name: "tab_item_2";
         signal: "elm,number,item,2";
         source: "elm";
         script {
            set_int(items_number, 2);
            set_state(PART:"bg", "2items", 0.0);
         }
      }
      program { name: "tab_item_3";
         signal: "elm,number,item,3";
         source: "elm";
         script {
            set_int(items_number, 3);
            set_state(PART:"bg", "3items", 0.0);
         }
      }
      program { name: "tab_item_4";
         signal: "elm,number,item,4";
         source: "elm";
         script {
            set_int(items_number, 4);
            set_state(PART:"bg", "4items", 0.0);
         }
      }
      program { name: "tab_item_5";
         signal: "elm,number,item,5";
         source: "elm";
         script {
            set_int(items_number, 5);
         }
         after: "tab_item_upper_5";
      }
      program { name: "tab_item_6";
         signal: "elm,number,item,6";
         source: "elm";
         script {
            set_int(items_number, 6);
         }
         after: "tab_item_upper_5";
      }
      program { name: "tab_item_7";
         signal: "elm,number,item,7";
         source: "elm";
         script {
            set_int(items_number, 7);
         }
         after: "tab_item_upper_5";
      }
      program { name: "tab_item_8";
         signal: "elm,number,item,8";
         source: "elm";
         script {
            set_int(items_number, 8);
         }
         after: "tab_item_upper_5";
      }
      program { name: "tab_item_9";
         signal: "elm,number,item,9";
         source: "elm";
         script {
            set_int(items_number, 9);
         }
         after: "tab_item_upper_5";
      }
      program { name: "tab_item_10";
         signal: "elm,number,item,10";
         source: "elm";
         script {
            set_int(items_number, 10);
         }
         after: "tab_item_upper_5";
      }
      program { name: "tab_item_upper_5";
         script {
            set_state(PART:"bg", "scrollable", 0.0);
         }
      }
   }
}
