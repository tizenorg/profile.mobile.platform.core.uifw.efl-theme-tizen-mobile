group { name: "elm/spinner/base/default";
   images {
      image: "whitetheme/spinner_bg.png" COMP;
      image: "whitetheme/btn_style_nor.png" COMP;
      image: "whitetheme/btn_style_sel.png" COMP;
      image: "whitetheme/btn_arrow_left_nor.png" COMP;
      image: "whitetheme/btn_arrow_left_sel.png" COMP;
      image: "whitetheme/btn_arrow_right_nor.png" COMP;
      image: "whitetheme/btn_arrow_right_sel.png" COMP;
   }
   parts {
      part { name: "bg";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            min: 0 SPINNER_NORMAL_BUTTON_MIN_HEIGHT_INC+10;
            color: 255 255 255 0;
         }
      }
      part { name: "conf_over";
         mouse_events:  0;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "bg";
            rel2.to: "bg";
            image {
               normal: "whitetheme/spinner_bg.png";
               border: SPINNER_BG_BORDER_INC;
               border_scale: 1;
            }
         }
      }
      part { name: "elm.padding.left";
         type: SPACER;
         scale:1 ;
         description { state: "default" 0.0;
            align: 0 0;
            min: 5 0;
            fixed: 1 0;
            rel1 {
               to: "bg";
               relative: 0 0;
            } 
            rel2 {
               to: "bg";
               relative: 0 1;
            }
         }
      }
      part { name: "left_bt";
         mouse_events:  1;
         scale: 1;
         description { state: "default" 0.0;
            rel1 {
               to: "elm.padding.left";
               relative: 1 0;
            }
            rel2 {
               to: "elm.padding.left";
               relative: 1 1;
            }
            align: 0.0 0.5;
            min: SPINNER_NORMAL_BUTTON_MIN_WIDTH_INC SPINNER_NORMAL_BUTTON_MIN_HEIGHT_INC;
            max: SPINNER_NORMAL_BUTTON_MIN_WIDTH_INC SPINNER_NORMAL_BUTTON_MIN_HEIGHT_INC;
            aspect: 1.0 1.0;
            aspect_preference: VERTICAL;
            image {
               normal: "whitetheme/btn_style_nor.png";
               border: SPINNER_NORMAL_BUTTON_BORDER_INC;
               border_scale: 1;
            }
         }
         description { state: "clicked" 0.0;
            inherit: "default" 0.0;
            image {
               normal: "whitetheme/btn_style_sel.png";
               border: SPINNER_NORMAL_BUTTON_BORDER_INC;
               border_scale: 1;
            }
         }
         description { state: "disabled" 0.0;
            inherit:  "default" 0.0;
            image {
               normal: "whitetheme/btn_style_nor.png";
               border: SPINNER_NORMAL_BUTTON_BORDER_INC;
               border_scale: 1;
            }
         }
      }
      part { name: "left_bt_icon";
         repeat_events: 1;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "left_bt";
            rel2.to: "left_bt";
            align: 0.5 0.5;
            min: SPINNER_NORMAL_ARROW_WIDTH_INC SPINNER_NORMAL_ARROW_HEIGHT_INC;
            max: SPINNER_NORMAL_ARROW_WIDTH_INC SPINNER_NORMAL_ARROW_HEIGHT_INC;
            aspect: 1.0 1.0;
            aspect_preference: BOTH;
            image.normal: "whitetheme/btn_arrow_left_nor.png";
         }
         description { state: "clicked" 0.0;
            inherit: "default" 0.0;
            image.normal: "whitetheme/btn_arrow_left_sel.png";
         }
         description { state: "rtl" 0.0;
            inherit: "default" 0.0;
            image.normal: "whitetheme/btn_arrow_right_nor.png";
         }
         description { state: "disabled" 0.0;
            inherit:  "default" 0.0;
            color: 255 255 255 63;
         }
      }
      part { name: "elm.padding.right";
         type: RECT;
         scale:1 ;
         description { state: "default" 0.0;
            color: 255 0 0 0;
            align: 1 0;
            min: 5 0;
            fixed: 1 0;
            rel1 {
               to: "bg";
               relative: 1 0;
            } 
            rel2 {
               to: "bg";
               relative: 1 1;
            }
         }
      }
      part { name: "right_bt";
         mouse_events:  1;
         scale: 1;
         description { state: "default" 0.0;
            rel1 { to: "elm.padding.right";
               relative: 0 0;
            }
            rel2 { to: "elm.padding.right";
               relative: 0 1;
            }
            align: 1.0 0.5;
            min: SPINNER_NORMAL_BUTTON_MIN_WIDTH_INC SPINNER_NORMAL_BUTTON_MIN_HEIGHT_INC;
            max: SPINNER_NORMAL_BUTTON_MIN_WIDTH_INC SPINNER_NORMAL_BUTTON_MIN_HEIGHT_INC;
            aspect: 1.0 1.0;
            aspect_preference: VERTICAL;
            image {
               normal: "whitetheme/btn_style_nor.png";
               border: SPINNER_NORMAL_BUTTON_BORDER_INC;
               border_scale: 1;
            }
         }
         description { state: "clicked" 0.0;
            inherit: "default" 0.0;
            image {
               normal: "whitetheme/btn_style_sel.png";
               border: SPINNER_NORMAL_BUTTON_BORDER_INC;
               border_scale: 1;
            }
         }
         description { state: "disabled" 0.0;
            inherit:  "default" 0.0;
            image {
               normal: "whitetheme/btn_style_nor.png";
               border: SPINNER_NORMAL_BUTTON_BORDER_INC;
               border_scale: 1;
            }
         }
      }
      part { name: "right_bt_icon";
         repeat_events: 1;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "right_bt";
            rel2.to: "right_bt";
            align: 0.5 0.5;
            min: SPINNER_NORMAL_ARROW_WIDTH_INC SPINNER_NORMAL_ARROW_HEIGHT_INC;
            max: SPINNER_NORMAL_ARROW_WIDTH_INC SPINNER_NORMAL_ARROW_HEIGHT_INC;
            aspect: 1.0 1.0;
            aspect_preference: BOTH;
            image.normal: "whitetheme/btn_arrow_right_nor.png";
         }
         description { state: "clicked" 0.0;
            inherit: "default" 0.0;
            image.normal: "whitetheme/btn_arrow_right_sel.png";
         }
         description { state: "rtl" 0.0;
            inherit: "default" 0.0;
            image.normal: "whitetheme/btn_arrow_left_nor.png";
         }
         description { state: "disabled" 0.0;
            inherit:  "default" 0.0;
            color: 255 255 255 63;
         }
      }
      part { name: "elm.text";
         type: TEXT;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            visible: 1;
            align: 0.0 0.5;
            rel1 { relative: 1.1 0.0;
               to_x: "left_bt";
               to_y: "bg";
            }
            rel2 { relative: -0.1 1.0;
               to_x: "right_bt";
               to_y: "bg";
            }
            color: 0 0 0 255;
            text {
               font: "SLP:style=Medium";
               size: SPINNER_FONT_SIZE_INC;
               min: 0 1;
               align: 0.5 0.5;
            }
         }
         description { state: "active" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
         description { state: "disabled_active" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 63;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 63;
         }
      }
      part { name: "elm.dragable.slider";
         type: RECT;
         mouse_events: 0;
         scale: 1;
         dragable {
            x: 1 1 0;
            y: 0 0 0;
         }
         description { state: "default" 0.0;
            rel1.to: "bg";
            rel2.to: "bg";
            fixed: 1 1;
            color: 0 0 0 0;
         }
      }
      part { name: "button_events";
         type: RECT;
         dragable {
            events: "elm.dragable.slider";
         }
         mouse_events: 1;
         description { state: "default" 0.0;
            rel1.to: "elm.text";
            rel2.to: "elm.text";
            color: 0 0 0 0;
         }
      }
      part { name: "elm.swallow.entry";
         type: SWALLOW;
         description { state: "default" 0.0;
            visible: 0;
            align: 0.5 0.5;
            rel1 {
               relative: 1.0 0.5;
               to_x: "left_bt";
               to_y: "bg";
            }
            rel2 {
               relative: 0.0 0.5;
               to_x: "right_bt";
               to_y: "bg";
            }
            fixed: 1 1;
            color: 0 0 0 0;
         }
         description { state: "active" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            color: 255 255 255 255;
         }
         description { state: "disabled_active" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "disabler";
         type: RECT;
         description { state: "default" 0.0;
            color: 0 0 0 0;
            visible: 0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
   }
   programs {
      program { name: "dec";
         signal: "mouse,down,1*";
         source: "left_bt";
         action: SIGNAL_EMIT "elm,action,decrement,start" "";
      }
      program { name: "dec2";
         signal: "mouse,up,1";
         source: "left_bt";
         action: SIGNAL_EMIT "elm,action,decrement,stop" "";
      }
      program { name: "inc";
         signal: "mouse,down,1*";
         source: "right_bt";
         action: SIGNAL_EMIT "elm,action,increment,start" "";
      }
      program { name: "inc2";
         signal: "mouse,up,1";
         source: "right_bt";
         action: SIGNAL_EMIT "elm,action,increment,stop" "";
      }
      program { name:   "left_bt_click";
         signal: "mouse,down,1*";
         source: "left_bt";
         action: STATE_SET "clicked" 0.0;
         target: "left_bt";
         target: "left_bt_icon";
      }
      program { name:   "left_bt_unclick";
         signal: "mouse,up,1";
         source: "left_bt";
         action: STATE_SET "default" 0.0;
         target: "left_bt";
         target: "left_bt_icon";
      }
      program { name:   "left_bt_click2";
         signal: "mouse,down,1*";
         source: "left_bt";
         action: STATE_SET "clicked" 0.0;
         target: "left_bt";
      }
      program { name:   "left_bt_unclick2";
         signal: "mouse,up,1";
         source: "left_bt";
         action: STATE_SET "default" 0.0;
         transition: DECELERATE 0.5;
         target: "left_bt";
      }
      program { name:   "left_bt_unclick3";
         signal: "mouse,up,1";
         source: "left_bt";
         action: SIGNAL_EMIT "elm,action,click" "";
      }
      program { name:   "left_bt_pressed_anim";
         signal: "elm,left,anim,activate";
         source: "elm";
         action: STATE_SET "clicked" 0.0;
         target: "left_bt";
         //target: "left_over3";
         after: "left_bt_unpressed_anim";
      }
      program {
         name:   "left_bt_unpressed_anim";
         action: STATE_SET "default" 0.0;
         transition: DECELERATE 0.5;
         target: "left_bt";
         //target: "left_over3";
      }
      program { name:   "right_bt_click";
         signal: "mouse,down,1*";
         source: "right_bt";
         action: STATE_SET "clicked" 0.0;
         target: "right_bt";
         target: "right_bt_icon";
      }
      program { name:   "right_bt_unclick";
         signal: "mouse,up,1";
         source: "right_bt";
         action: STATE_SET "default" 0.0;
         target: "right_bt";
         target: "right_bt_icon";
      }
      program { name:   "right_bt_click2";
         signal: "mouse,down,1*";
         source: "right_bt";
         action: STATE_SET "clicked" 0.0;
         target: "right_bt";
      }
      program { name:   "right_bt_unclick2";
         signal: "mouse,up,1";
         source: "right_bt";
         action: STATE_SET "default" 0.0;
         transition: DECELERATE 0.5;
         target: "right_bt";
      }
      program { name:   "right_bt_unclick3";
         signal: "mouse,up,1";
         source: "right_bt";
         action: SIGNAL_EMIT "elm,action,click" "";
      }
      program { name:   "right_bt_pressed_anim";
         signal: "elm,right,anim,activate";
         source: "elm";
         action: STATE_SET "clicked" 0.0;
         target: "right_bt";
         after: "right_bt_unpressed_anim";
      }
      program { name:   "right_bt_unpressed_anim";
         action: STATE_SET "default" 0.0;
         transition: DECELERATE 0.5;
         target: "right_bt";
      }
      program { name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "left_bt";
         target: "right_bt";
         target: "left_bt_icon";
         target: "right_bt_icon";
         target: "disabler";
         after: "disable_text";
      }
      program { name: "disable_text";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.text", st, 30, vl);
            if (!strcmp(st, "active"))
            set_state(PART:"elm.text", "disabled_active", 0.0);
            else
            set_state(PART:"elm.text", "disabled", 0.0);

            get_state(PART:"elm.swallow.entry", st, 30, vl);
            if (!strcmp(st, "active"))
            set_state(PART:"elm.swallow.entry", "disabled_active", 0.0);
            else
            set_state(PART:"elm.swallow.entry", "disabled", 0.0);
         }
      }
      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "left_bt";
         target: "right_bt";
         target: "disabler";
         after: "enable_text";
      }
      program { name: "enable_text";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.text", st, 30, vl);
            if (!strcmp(st, "disabled_active"))
            set_state(PART:"elm.text", "active", 0.0);
            else
            set_state(PART:"elm.text", "default", 0.0);

            get_state(PART:"elm.swallow.entry", st, 30, vl);
            if (!strcmp(st, "disabled_active"))
            set_state(PART:"elm.swallow.entry", "active", 0.0);
            else
            set_state(PART:"elm.swallow.entry", "default", 0.0);
         }
      }
      program { name: "active";
         signal: "elm,state,active";
         source: "elm";
         action: STATE_SET "active" 0.0;
         target: "elm.text";
         target: "elm.swallow.entry";
      }
      program { name: "inactive";
         signal: "elm,state,inactive";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.text";
         target: "elm.swallow.entry";
      }
      program { name: "toggle_text";
         signal: "mouse,up,1";
         source: "button_events";
         action: SIGNAL_EMIT "elm,action,entry,toggle" "";
      }
      program { name: "to_rtl";
         signal: "edje,state,rtl";
         source: "edje";
         action: STATE_SET "rtl" 0.0;
         target: "right_bt_icon";
         target: "left_bt_icon";
      }
      program { name: "to_ltr";
         signal: "edje,state,ltr";
         source: "edje";
         action: STATE_SET "default" 0.0;
         target: "right_bt_icon";
         target: "left_bt_icon";
      }
   }
}

///////////////////////////////////////////////////////////////////////////////
group { name: "elm/spinner/base/vertical";
   images {
      image: "whitetheme/spinner_bg.png" COMP;
      image: "whitetheme/btn_style_nor.png" COMP;
      image: "whitetheme/btn_style_sel.png" COMP;
      image: "whitetheme/btn_arrow_bottom_nor.png" COMP;
      image: "whitetheme/btn_arrow_bottom_sel.png" COMP;
      image: "whitetheme/btn_arrow_top_nor.png" COMP;
      image: "whitetheme/btn_arrow_top_sel.png" COMP;
   }
   parts {
      part { name: "bg";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            min: 0 100+10;
            rel1.offset: 1 1;
            rel2.offset: -2 -2;
            color: 255 255 255 0;
         }
      }
      part { name: "conf_over";
         mouse_events:  0;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "bg";
            rel2.to: "bg";
            image {
               normal: "whitetheme/spinner_bg.png";
               border: SPINNER_BG_BORDER_INC;
               border_scale: 1;
            }
         }
      }
      part { name: "elm.padding.right";
         type: SPACER;
         scale:1 ;
         description { state: "default" 0.0;
            align: 1 0;
            min: 5 0;
            fixed: 1 0;
            rel1 {
               to: "bg";
               relative: 1 0;
            } 
            rel2 {
               to: "bg";
               relative: 1 1;
            }
         }
      }
      part { name: "down_bt";
         mouse_events:  1;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1 { to: "up_bt";
               relative: 0 1;
            }
            rel2 { to: "up_bt";
               relative: 0 1;
            }
            align: 0 0;
            min: SPINNER_VERTICAL_BUTTON_MIN_WIDTH_INC SPINNER_VERTICAL_BUTTON_MIN_HEIGHT_INC;
            max: SPINNER_VERTICAL_BUTTON_MIN_WIDTH_INC SPINNER_VERTICAL_BUTTON_MIN_HEIGHT_INC;
            image {
               normal: "whitetheme/btn_style_nor.png";
               border: SPINNER_NORMAL_BUTTON_BORDER_INC;
               border_scale: 1;
            }
         }
         description { state: "clicked" 0.0;
            inherit: "default" 0.0;
            image {
               normal: "whitetheme/btn_style_sel.png";
               border: SPINNER_NORMAL_BUTTON_BORDER_INC;
               border_scale: 1;
            }
         }
         description { state: "disabled" 0.0;
            inherit:  "default" 0.0;
            image {
               normal: "whitetheme/btn_style_nor.png";
               border: SPINNER_NORMAL_BUTTON_BORDER_INC;
               border_scale: 1;
            }
         }
      }
      part { name: "down_bt_icon";
         repeat_events: 1;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "down_bt";
            rel2.to: "down_bt";
            align: 0.5 0.5;
            min: SPINNER_NORMAL_ARROW_WIDTH_INC SPINNER_NORMAL_ARROW_HEIGHT_INC;
            max: SPINNER_NORMAL_ARROW_WIDTH_INC SPINNER_NORMAL_ARROW_HEIGHT_INC;
            aspect: 1.0 1.0;
            aspect_preference: BOTH;
            image.normal: "whitetheme/btn_arrow_bottom_nor.png";
         }
         description { state: "clicked" 0.0;
            inherit: "default" 0.0;
            image.normal: "whitetheme/btn_arrow_bottom_sel.png";
         }
         description { state: "disabled" 0.0;
            inherit:  "default" 0.0;
            color: 255 255 255 63;
         }
      }
      part { name: "up_bt";
         mouse_events:  1;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1 { to: "elm.padding.right";
               relative: 0 0.05;
            }
            rel2 { to: "elm.padding.right";
               relative: 0 0.05;
            }
            align: 1.0 0;
            min: SPINNER_VERTICAL_BUTTON_MIN_WIDTH_INC SPINNER_VERTICAL_BUTTON_MIN_HEIGHT_INC;
            max: SPINNER_VERTICAL_BUTTON_MIN_WIDTH_INC SPINNER_VERTICAL_BUTTON_MIN_HEIGHT_INC;
            image {
               normal: "whitetheme/btn_style_nor.png";
               border: SPINNER_NORMAL_BUTTON_BORDER_INC;
               border_scale: 1;
            }
         }
         description { state: "clicked" 0.0;
            inherit: "default" 0.0;
            image {
               normal: "whitetheme/btn_style_sel.png";
               border: SPINNER_NORMAL_BUTTON_BORDER_INC;
               border_scale: 1;
            }
         }
         description { state: "disabled" 0.0;
            inherit:  "default" 0.0;
            image {
               normal: "whitetheme/btn_style_nor.png";
               border: SPINNER_NORMAL_BUTTON_BORDER_INC;
               border_scale: 1;
            }
         }
      }
      part { name: "up_bt_icon";
         repeat_events: 1;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "up_bt";
            rel2.to: "up_bt";
            align: 0.5 0.5;
            min: SPINNER_NORMAL_ARROW_WIDTH_INC SPINNER_NORMAL_ARROW_HEIGHT_INC;
            max: SPINNER_NORMAL_ARROW_WIDTH_INC SPINNER_NORMAL_ARROW_HEIGHT_INC;
            aspect: 1.0 1.0;
            aspect_preference: BOTH;
            image.normal: "whitetheme/btn_arrow_top_nor.png";
         }
         description { state: "clicked" 0.0;
            inherit: "default" 0.0;
            image.normal: "whitetheme/btn_arrow_top_sel.png";
         }
         description { state: "disabled" 0.0;
            inherit:  "default" 0.0;
            color: 255 255 255 63;
         }
      }
      part { name: "elm.text";
         type: TEXT;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            visible: 1;
            align: 0.0 0.5;
            rel1 { relative: 0.0 0.0;
               offset: 3 2;
               to_x: "bg";
               to_y: "bg";
            }
            rel2 { relative: 0.0 1.0;
               offset: -3 -2;
               to_x: "down_bt";
               to_y: "bg";
            }
            color: 0 0 0 255;
            text {
               font: "SLP:style=Medium";
               size: SPINNER_FONT_SIZE_INC;
               min: 0 1;
               align: 0.5 0.5;
            }
         }
         description { state: "active" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
         description { state: "disabled_active" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 63;
            color3: 0 0 0 0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 63;
            color3: 0 0 0 0;
         }
      }
      part { name: "elm.dragable.slider";
         type: RECT;
         mouse_events: 0;
         scale: 1;
         dragable {
            x: 1 1 0;
            y: 0 0 0;
         }
         description { state: "default" 0.0;
            rel1.to: "bg";
            rel2.to: "bg";
            fixed: 1 1;
            color: 0 0 0 0;
         }
      }
      part { name: "button_events";
         type: RECT;
         dragable {
            events: "elm.dragable.slider";
         }
         mouse_events: 1;
         description { state: "default" 0.0;
            rel1.to: "elm.text";
            rel2.to: "elm.text";
            fixed: 1 1;
            color: 0 0 0 0;
         }
      }
      part { name: "elm.swallow.entry";
         type: SWALLOW;
         description { state: "default" 0.0;
            visible: 0;
            align: 0.5 0.5;
            rel1 { relative: 0.0 0.5;
               offset: 3 2;
               to: "elm.text";
            }
            rel2 { relative: 1.0 0.5;
               offset: -3 -2;
               to: "elm.text";
            }
            fixed: 1 1;
            color: 0 0 0 0;
         }
         description { state: "active" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            color: 255 255 255 255;
         }
         description { state: "disabled_active" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "disabler";
         type: RECT;
         description { state: "default" 0.0;
            color: 0 0 0 0;
            visible: 0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
   }
   programs {
      program { name: "dec";
         signal: "mouse,down,1*";
         source: "down_bt";
         action: SIGNAL_EMIT "elm,action,decrement,start" "";
      }
      program { name: "dec2";
         signal: "mouse,up,1";
         source: "down_bt";
         action: SIGNAL_EMIT "elm,action,decrement,stop" "";
      }
      program { name: "inc";
         signal: "mouse,down,1*";
         source: "up_bt";
         action: SIGNAL_EMIT "elm,action,increment,start" "";
      }
      program { name: "inc2";
         signal: "mouse,up,1";
         source: "up_bt";
         action: SIGNAL_EMIT "elm,action,increment,stop" "";
      }
      program { name:   "down_bt_click2";
         signal: "mouse,down,1*";
         source: "down_bt";
         action: STATE_SET "clicked" 0.0;
         target: "down_bt";
         target: "down_bt_icon";
      }
      program { name:   "down_bt_unclick2";
         signal: "mouse,up,1";
         source: "down_bt";
         action: STATE_SET "default" 0.0;
         target: "down_bt";
         target: "down_bt_icon";
      }
      program { name:   "up_bt_click2";
         signal: "mouse,down,1*";
         source: "up_bt";
         action: STATE_SET "clicked" 0.0;
         target: "up_bt";
         target: "up_bt_icon";
      }
      program { name:   "up_bt_unclick2";
         signal: "mouse,up,1";
         source: "up_bt";
         action: STATE_SET "default" 0.0;
         target: "up_bt";
         target: "up_bt_icon";
      }
      program { name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "down_bt";
         target: "up_bt";
         target: "down_bt";
         target: "down_bt_icon";
         target: "up_bt";
         target: "up_bt_icon";
         target: "disabler";
         after: "disable_text";
      }
      program { name: "disable_text";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.text", st, 30, vl);
            if (!strcmp(st, "active"))
            set_state(PART:"elm.text", "disabled_active", 0.0);
            else
            set_state(PART:"elm.text", "disabled", 0.0);

            get_state(PART:"elm.swallow.entry", st, 30, vl);
            if (!strcmp(st, "active"))
            set_state(PART:"elm.swallow.entry", "disabled_active", 0.0);
            else
            set_state(PART:"elm.swallow.entry", "disabled", 0.0);
         }
      }
      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "down_bt";
         target: "up_bt";
         target: "disabler";
         after: "enable_text";
      }
      program { name: "enable_text";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.text", st, 30, vl);
            if (!strcmp(st, "disabled_active"))
            set_state(PART:"elm.text", "active", 0.0);
            else
            set_state(PART:"elm.text", "default", 0.0);

            get_state(PART:"elm.swallow.entry", st, 30, vl);
            if (!strcmp(st, "disabled_active"))
            set_state(PART:"elm.swallow.entry", "active", 0.0);
            else
            set_state(PART:"elm.swallow.entry", "default", 0.0);
         }
      }
      program { name: "active";
         signal: "elm,state,active";
         source: "elm";
         action: STATE_SET "active" 0.0;
         target: "elm.text";
         target: "elm.swallow.entry";
      }
      program { name: "inactive";
         signal: "elm,state,inactive";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.text";
         target: "elm.swallow.entry";
      }
      program { name: "toggle_text";
         signal: "mouse,up,1";
         source: "button_events";
         action: SIGNAL_EMIT "elm,action,entry,toggle" "";
      }
   }
}


///////////////////////////////////////////////////////////////////////////////
