/*
 * Copyright (c) 2010 Samsung Electronics Co., Ltd All Rights Reserved
 *
 * BSD 2-Clause License (http://www.opensource.org/licenses/bsd-license.php)
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *   1. Redistributions of source code must retain the above copyright notice, this
 *      list of conditions and the following disclaimer.
 *   2. Redistributions in binary form must reproduce the above copyright notice,
 *      this list of conditions and the following disclaimer in the documentation
 *      and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

group {
   name: "elm/ctxpopup/layout/default";
   alias: "elm/ctxpopup/layout/copypaste";

   data.item: "visible_maxw" CTXPOPUP_WIDTH;
   data.item: "visible_maxh" (CTXPOPUP_ITEM_HEIGHT_MIN*6);
   parts {
      part {
         name:"top_padding";
         type: SPACER;
         scale: 1;
         description {
            state: "default" 0.0;
            min: 0 CTXPOPUP_MOVE_PAD;
            fixed: 0 1;
            align: 0.5 0.0;
            rel1.relative: 0.0 0.0;
            rel2.relative: 1.0 0.0;
         }
         description {
            state: "show_up" 0.0;
            inherit: "default" 0.0;
         }
         description {
            state: "visible" 0.0;
            inherit: "default" 0.0;
            min: 0 0;
         }
      }
      part {
         name:"bottom_padding";
         type: SPACER;
         scale: 1;
         description {
            state: "default" 0.0;
            min: 0 CTXPOPUP_MOVE_PAD;
            fixed: 0 1;
            align: 0.5 1.0;
            rel1.relative: 0.0 1.0;
            rel2.relative: 1.0 1.0;
         }
         description {
            state: "show_down" 0.0;
            inherit: "default" 0.0;
         }
         description {
            state: "visible" 0.0;
            inherit: "default" 0.0;
            min: 0 0;
         }
      }
      part {
         name:"left_padding";
         type: SPACER;
         scale: 1;
         description {
            state: "default" 0.0;
            min: CTXPOPUP_MOVE_PAD 0;
            fixed: 1 0;
            align: 0.0 0.5;
            rel1.relative: 0.0 0.0;
            rel2.relative: 0.0 1.0;
         }
         description {
            state: "show_left" 0.0;
            inherit: "default" 0.0;
         }
         description {
            state: "visible" 0.0;
            inherit: "default" 0.0;
            min: 0 0;
         }
      }
      part {
         name:"right_padding";
         type: SPACER;
         scale: 1;
         description {
            state: "default" 0.0;
            min: CTXPOPUP_MOVE_PAD 0;
            fixed: 1 0;
            align: 1 0.5;
            rel1.relative: 1.0 0.0;
            rel2.relative: 1.0 1.0;
         }
         description {
            state: "show_right" 0.0;
            inherit: "default" 0.0;
         }
         description {
            state: "visible" 0.0;
            inherit: "default" 0.0;
            min: 0 0;
         }
      }
      part {
         name: "swallow";
         type: SWALLOW;
         clip_to: "layout_clip";
         scale: 1;
         description {
            state: "default" 0.0;
            visible: 0;
         }
         description {
            state: "show_up" 0.0;
            rel1 {to_x:"left_padding"; to_y:"top_padding"; relative: 1.0 1.0;}
            rel2 {to_x:"right_padding"; to_y:"top_padding"; relative: 0.0 1.0;}
            align: 0.5 0.0;
         }
         description {
            state: "show_down" 0.0;
            rel1 {to_x:"left_padding"; to_y:"bottom_padding"; relative: 1.0 0.0;}
            rel2 {to_x:"right_padding"; to_y:"bottom_padding"; relative: 0.0 0.0;}
            align: 0.5 1.0;
         }
         description {
            state: "show_left" 0.0;
            rel1 {to_x:"left_padding"; to_y:"top_padding"; relative: 1.0 1.0;}
            rel2 {to_x:"left_padding"; to_y:"bottom_padding"; relative: 1.0 0.0;}
            align: 0.0 0.5;
         }
         description {
            state: "show_right" 0.0;
            rel1 {to_x:"right_padding"; to_y:"top_padding"; relative: 0.0 1.0;}
            rel2 {to_x:"right_padding"; to_y:"bottom_padding"; relative: 0.0 0.0;}
            align: 1.0 0.5;
         }
      }
      part {
         name: "event_blocker";
         type: RECT;
         scale: 1;
         description {
            state: "default" 0.0;
            visible: 1;
            color: 0 0 0 0;
         }
         description {
            state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part {
         name: "layout_clip";
         type: RECT;
         scale: 1;
         description {
            state: "default" 0.0;
            color: 255 255 255 0;
            rel1 {to: "swallow"; relative: -0.2 -0.2; }
            rel2 {to: "swallow"; relative: 1.2 1.2;}
         }
         description {
            state: "visible" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
         }
      }
   }
   programs {
      program {
         name:   "showup";
         signal: "elm,state,show,up";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"swallow", st, 30, vl);
            if (strcmp(st, "show_up")) {
              set_state(PART:"swallow", "show_up", 0.0);
              set_state(PART:"top_padding", "show_up", 0.0);
            }
         }
         after: "showupend";
      }
      program {
         name:   "showdown";
         signal: "elm,state,show,down";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"swallow", st, 30, vl);
            if (strcmp(st, "show_down")) {
              set_state(PART:"swallow", "show_down", 0.0);
              set_state(PART:"bottom_padding", "show_down", 0.0);
            }
         }
         after: "showdownend";
      }
      program {
         name:   "showleft";
         signal: "elm,state,show,left";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"swallow", st, 30, vl);
            if (strcmp(st, "show_left")) {
              set_state(PART:"swallow", "show_left", 0.0);
              set_state(PART:"left_padding", "show_left", 0.0);
            }
         }
         after: "showleftend";
      }
      program {
         name:   "showright";
         signal: "elm,state,show,right";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"swallow", st, 30, vl);
            if (strcmp(st, "show_right")) {
              set_state(PART:"swallow", "show_right", 0.0);
              set_state(PART:"right_padding", "show_right", 0.0);
            }
         }
         after: "showrightend";
      }
      program {
         name: "show_clip_blocker";
         signal: "elm,state,show,*";
         source: "elm";
         action: STATE_SET "visible" 0.0;
         transition: SIN_FAC 0.25 0.5;
         target: "layout_clip";
         target: "event_blocker";
      }
      program {
         name:   "showupend";
         action: STATE_SET "visible" 0.0;
         transition: SIN_FAC 0.25 1.7;
         target: "top_padding";
      }
      program {
         name:   "showdownend";
         action: STATE_SET "visible" 0.0;
         transition: SIN_FAC 0.25 1.7;
         target: "bottom_padding";
      }
      program {
         name:   "showleftend";
         action: STATE_SET "visible" 0.0;
         transition: SIN_FAC 0.25 1.7;
         target: "left_padding";
      }
      program {
         name:   "showrightend";
         action: STATE_SET "visible" 0.0;
         transition: SIN_FAC 0.25 1.7;
         target: "right_padding";
      }
      program {
         name:   "hideup";
         signal: "elm,state,hide,up";
         source: "elm";
         action: STATE_SET "show_up" 0.0;
         target: "swallow";
         target: "top_padding";
         transition: SIN_FAC 0.13 1.1;
         after: "be_default";
      }
      program {
         name:   "hidedown";
         signal: "elm,state,hide,down";
         source: "elm";
         action: STATE_SET "show_down" 0.0;
         target: "swallow";
         target: "bottom_padding";
         transition: SIN_FAC 0.13 1.1;
         after: "be_default";
      }
      program {
         name:   "hideleft";
         signal: "elm,state,hide,left";
         source: "elm";
         action: STATE_SET "show_left" 0.0;
         target: "swallow";
         target: "left_padding";
         transition: SIN_FAC 0.13 1.1;
         after: "be_default";
      }
      program {
         name:   "hideright";
         signal: "elm,state,hide,right";
         source: "elm";
         action: STATE_SET "show_right" 0.0;
         target: "swallow";
         target: "right_padding";
         transition: SIN_FAC 0.13 1.1;
         after: "be_default";
      }
      program {
         name:   "hide_clip";
         signal: "elm,state,hide,*";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "layout_clip";
         transition: SIN_FAC 0.13 0.5;
         after: "be_default";
      }
      program {
         name: "hide_event_blocker";
         signal: "elm,state,hide,*";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "event_blocker";
      }
      program {
         name: "be_default";
         action: STATE_SET "default" 0.0;
         target: "swallow";
         target: "top_padding";
         target: "bottom_padding";
         target: "left_padding";
         target: "right_padding";
         after: "hidefinished";
      }
      program {
         name: "hidefinished";
         action: SIGNAL_EMIT "elm,action,hide,finished" "";
      }
   }
}
///////////////////////////////////////////////////////////////////////////////
group {
   name: "elm/ctxpopup/layout/landscape/default";
   inherit: "elm/ctxpopup/layout/default";

   data.item: "visible_maxw" CTXPOPUP_WIDTH;
   data.item: "visible_maxh" (CTXPOPUP_ITEM_HEIGHT_MIN*4);
}
///////////////////////////////////////////////////////////////////////////////
group {
   name: "elm/ctxpopup/layout/landscape/copypaste";
   inherit: "elm/ctxpopup/layout/default";

   data.item: "visible_maxw" (CTXPOPUP_COPYPASTE_WIDTH_MAX_INC+CTXPOPUP_SHADOW_LEFT_PADDING+CTXPOPUP_SHADOW_RIGHT_PADDING);
   data.item: "visible_maxh" (CTXPOPUP_COPYPASTE_ITEM_HEIGHT_MIN_INC*2);
}
///////////////////////////////////////////////////////////////////////////////
group {
   name: "elm/ctxpopup/layout/more/default";

   data.item: "visible_maxw" CTXPOPUP_WIDTH;
   data.item: "visible_maxh" (CTXPOPUP_ITEM_HEIGHT_MIN*6);

   parts {
      part {
         name: "swallow";
         type: SWALLOW;
         scale: 1;
         description {
            state: "default" 0.0;
            visible: 0;
         }
         description {
            state: "show_up" 0.0;
            rel1.relative: 0.0 1.0;
            align: 0.5 0.0;
         }
         description {
            state: "visible" 0.0;
         }
      }
      part {
         name: "event_blocker";
         type: RECT;
         scale: 1;
         description {
            state: "default" 0.0;
            visible: 0;
            color: 0 0 0 0;
         }
         description {
            state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
   }
   programs {
      program {
         name: "transition_finished";
         action: STATE_SET "default" 0.0;
         target: "event_blocker";
         }
      program {
         name: "showup";
         signal: "elm,state,show,up";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"swallow", st, 30, vl);
            if (strcmp(st, "show_up")) {
              set_state(PART:"swallow", "show_up", 0.0);
            }
         }
         after: "showupend";
      }
      program {
         name: "show_clip_blocker";
         signal: "elm,state,show,*";
         source: "elm";
         action: STATE_SET "visible" 0.0;
         target: "event_blocker";
      }
      program {
         name: "showupend";
         action: STATE_SET "visible" 0.0;
         transition: SIN_FAC 0.3 1.7;
         target: "swallow";
         after:"transition_finished";
      }
      program {
         name: "hideup";
         signal: "elm,state,hide,up";
         source: "elm";
         action: STATE_SET "show_up" 0.0;
         target: "swallow";
         transition: SIN_FAC 0.1 1.1;
         after: "be_default";
      }
      program {
         name: "hide_event_blocker";
         signal: "elm,state,hide,*";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "event_blocker";
      }
      program {
         name: "be_default";
         action: STATE_SET "default" 0.0;
         target: "swallow";
         after: "hidefinished";
      }
      program {
         name: "hidefinished";
         action: SIGNAL_EMIT "elm,action,hide,finished" "";
      }
   }
}
///////////////////////////////////////////////////////////////////////////////
group {
   name: "elm/ctxpopup/layout/landscape/more/default";
   inherit: "elm/ctxpopup/layout/more/default";

   data.item: "visible_maxw" CTXPOPUP_WIDTH;
   data.item: "visible_maxh" (CTXPOPUP_ITEM_HEIGHT_MIN*4);

}
///////////////////////////////////////////////////////////////////////////////
group {
   name: "elm/ctxpopup/bg/more/default";
   parts {
      part {
         name: "bg";
         type: RECT;
         scale: 1;
         mouse_events: 1;
         description {
            state: "default" 0.0;
            visible: 0;
         }
         description {
            state: "visible" 0.0;
            color_class: "B016";
            align: 0.0 0.0;
            visible: 1;
         }
      }
      part {
         name: "event_blocker";
         type: RECT;
         description {
            state: "default" 0.0;
            color: 0 0 0 0;
            rel1.to: "bg";
            rel2.to: "bg";
            visible: 1;
         }
         description {
            state: "visible" 0.0;
            visible: 0;
         }
      }
   }
   programs {
      program {
         name: "transition_finished";
         in: 0.5 0.0;
         action: STATE_SET "visible" 0.0;
         target: "event_blocker";
      }
      program {
         name: "clicked_event";
         signal: "mouse,clicked,1";
         source: "bg";
         action: SIGNAL_EMIT "elm,action,click" "";
      }
      program {
         name: "show";
         signal: "elm,state,show";
         source: "elm";
         action: STATE_SET "visible" 0.0;
         target: "bg";
         after:"transition_finished";
      }
      program {
         name: "hide";
         signal: "elm,state,hide";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "bg";
      }
   }
}
///////////////////////////////////////////////////////////////////////////////
group {
   name: "elm/ctxpopup/bg/copypaste";
   parts {
      part {
         name: "bg";
         type: RECT;
         scale: 1;
         mouse_events: 1;
         repeat_events: 1;
         description {
            state: "default" 0.0;
            visible: 0;
         }
         description {
            state: "visible" 0.0;
            color: 0 0 0 0;
            align: 0.0 0.0;
            visible: 1;
         }
      }
   }
   programs {
      program {
         name: "clicked";
         signal: "mouse,clicked,1";
         source: "bg";
         action: SIGNAL_EMIT "elm,action,click" "";
      }
      program {
         name: "show";
         signal: "elm,state,show";
         source: "elm";
         action: STATE_SET "visible" 0.0;
         target: "bg";
      }
      program {
         name: "hide";
         signal: "elm,state,hide";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "bg";
      }
   }
}
///////////////////////////////////////////////////////////////////////////////
group {
   name: "elm/ctxpopup/bg/default";
   alias: "elm/ctxpopup/bg/dropdown/list";
   alias: "elm/ctxpopup/bg/dropdown/label";

   parts {
      part {
         name: "bg";
         type: RECT;
         scale: 1;
         mouse_events: 1;
         description {
            state: "default" 0.0;
            visible: 0;
         }
         description {
            state: "visible" 0.0;
            color: 0 0 0 0;
            align: 0.0 0.0;
            visible: 1;
         }
      }
   }
   programs {
      program {
         name: "clicked";
         signal: "mouse,clicked,1";
         source: "bg";
         action: SIGNAL_EMIT "elm,action,click" "";
      }
      program {
         name: "show";
         signal: "elm,state,show";
         source: "elm";
         action: STATE_SET "visible" 0.0;
         target: "bg";
      }
      program {
         name: "hide";
         signal: "elm,state,hide";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "bg";
      }
   }
}
///////////////////////////////////////////////////////////////////////////////
group {
   name: "elm/ctxpopup/base/default";
   parts {
      part {
         name:"frame_shadow_left_top_padding";
         type: SPACER;
         scale: 1;
         description {
            state: "default" 0.0;
            min: CTXPOPUP_SHADOW_LEFT_PADDING CTXPOPUP_SHADOW_TOP_PADDING;
            max: CTXPOPUP_SHADOW_LEFT_PADDING CTXPOPUP_SHADOW_TOP_PADDING;
            rel2.relative: 0 0;
            align: 0 0;
            fixed: 1 1;
         }
      }
      part {
         name:"frame_shadow_right_bottom_padding";
         type: SPACER;
         scale: 1;
         description {
            state: "default" 0.0;
            min: CTXPOPUP_SHADOW_RIGHT_PADDING CTXPOPUP_SHADOW_BOTTOM_PADDING;
            max: CTXPOPUP_SHADOW_RIGHT_PADDING CTXPOPUP_SHADOW_BOTTOM_PADDING;
            rel1.relative: 1 1;
            align: 1 1;
            fixed: 1 1;
         }
      }
      part {
         name: "frame_bg";
         type: RECT;
         scale: 1;
         mouse_events: 0;
         description {
            state: "default" 0.0;
            rel1.to:"frame_shadow_left_top_padding";
            rel2.to:"frame_shadow_right_bottom_padding";
            color_class: "B066";
         }
      }
      part {
         name: "frame_top_line";
         type: RECT;
         scale: 1;
         description {
            state: "default" 0.0;
            rel1.to: "frame_bg";
            rel2 {to: "frame_bg"; relative: 1.0 0.0;}
            min: 0 CTXPOPUP_OUTLINE_SIZE;
            max: -1 CTXPOPUP_OUTLINE_SIZE;
            color_class: "B067";
            align: 0.5 0.0;
            fixed: 0 1;
         }
      }
      part {
         name: "frame_bottom_line";
         type: RECT;
         scale: 1;
         description {
            state: "default" 0.0;
            rel1 {to: "frame_bg"; relative: 0.0 1.0;}
            rel2.to: "frame_bg";
            min: 0 CTXPOPUP_OUTLINE_SIZE;
            max: -1 CTXPOPUP_OUTLINE_SIZE;
            color_class: "B067";
            align: 0.5 1.0;
            fixed: 0 1;
         }
      }
      part {
         name: "frame_left_line";
         type: RECT;
         scale: 1;
         description {
            state: "default" 0.0;
            rel1.to: "frame_bg";
            rel2 {to: "frame_bg"; relative: 0.0 1.0;}
            min: CTXPOPUP_OUTLINE_SIZE 0;
            max: CTXPOPUP_OUTLINE_SIZE -1;
            color_class: "B067";
            align: 0.0 0.5;
            fixed: 1 0;
         }
      }
      part {
         name: "frame_right_line";
         type: RECT;
         scale: 1;
         description {
            state: "default" 0.0;
            rel1 {to: "frame_bg"; relative: 1.0 0.0;}
            rel2.to: "frame_bg";
            min: CTXPOPUP_OUTLINE_SIZE 0;
            max: CTXPOPUP_OUTLINE_SIZE -1;
            color_class: "B067";
            align: 1.0 0.5;
            fixed: 1 0;
         }
      }
      part {
         name: "content_left_top_padding";
         type: SPACER;
         scale: 1;
         description {
            state: "default" 0.0;
            min: CTXPOPUP_CONTENT_PADDING CTXPOPUP_CONTENT_PADDING;
            max: CTXPOPUP_CONTENT_PADDING CTXPOPUP_CONTENT_PADDING;
            rel1.to: "frame_bg";
            rel2 {to: "frame_bg"; relative: 0.0 0.0;}
            align: 0.0 0.0;
            fixed: 1 1;
         }
      }
      part {
         name: "content_right_bottom_padding";
         type: SPACER;
         scale: 1;
         description {
            state: "default" 0.0;
            min: CTXPOPUP_CONTENT_PADDING CTXPOPUP_CONTENT_PADDING;
            max: CTXPOPUP_CONTENT_PADDING CTXPOPUP_CONTENT_PADDING;
            rel1 {to: "frame_bg"; relative: 1.0 1.0;}
            rel2.to: "frame_bg";
            align: 1.0 1.0;
            fixed: 1 1;
         }
      }
      part { name: "access.outline";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1.to: "frame_bg";
            rel2.to: "frame_bg";
            color: 0 0 0 0;
         }
      }
      part {
         name: "elm.swallow.content";
         type: SWALLOW;
         scale: 1;
         description {
            state: "default" 0.0;
            align: 0 0;
            rel1 {to: "content_left_top_padding"; relative: 1.0 1.0;}
            rel2 {to: "content_right_bottom_padding"; relative: 0.0 0.0;}
         }
      }
   }
}
///////////////////////////////////////////////////////////////////////////////
group {
   name: "elm/ctxpopup/base/more/default";
   parts {
      part {
         name: "frame_bg";
         type: RECT;
         scale: 1;
         mouse_events: 0;
         description {
            state: "default" 0.0;
            min: CTXPOPUP_WIDTH 0;
            color_class: "B061L41";
         }
      }
      part { name: "access.outline";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1.to: "frame_bg";
            rel2.to: "frame_bg";
            color: 0 0 0 0;
         }
      }
      part {
         name: "elm.swallow.content";
         type: SWALLOW;
         scale: 1;
         description {
            state: "default" 0.0;
            align: 0 0;
            rel1.to: "frame_bg";
            rel2.to: "frame_bg";
         }
      }
   }
}
///////////////////////////////////////////////////////////////////////////////
group {
   name: "elm/ctxpopup/base/copypaste";
   images {
      image: "copy&paste_popup_bg_line.#.png" COMP;
      set {
         name: "copy&paste_popup_bg_ef.#";
         image {
            image: SMALL"images/Copy_Paste/copy&paste_popup_bg_ef.#.png" COMP;
         }
         image {
            image: MEDIUM"images/Copy_Paste/copy&paste_popup_bg_ef.#.png" COMP;
         }
      }
   }
   parts {
      part {
         name:"frame_shadow_left_top_padding";
         type: SPACER;
         scale: 1;
         description {
            state: "default" 0.0;
            min: CTXPOPUP_SHADOW_LEFT_PADDING CTXPOPUP_SHADOW_TOP_PADDING;
            max: CTXPOPUP_SHADOW_LEFT_PADDING CTXPOPUP_SHADOW_TOP_PADDING;
            rel2 { relative: 0 0; }
            align: 0 0;
            fixed: 1 1;
         }
      }
      part {
         name:"frame_shadow_right_bottom_padding";
         type: SPACER;
         scale: 1;
         description {
            state: "default" 0.0;
            min: CTXPOPUP_SHADOW_RIGHT_PADDING CTXPOPUP_SHADOW_BOTTOM_PADDING;
            max: CTXPOPUP_SHADOW_RIGHT_PADDING CTXPOPUP_SHADOW_BOTTOM_PADDING;
            rel1{relative: 1 1;}
            align: 1 1;
            fixed: 1 1;
         }
      }
      part {
         name: "frame_bg";
         type: RECT;
         scale: 1;
         mouse_events: 0;
         description {
            state: "default" 0.0;
            rel1 {to: "content_left_top_padding"; relative: 1.0 1.0; }
            rel2 {to: "content_right_bottom_padding"; relative: 0.0 0.0; }
            min: CTXPOPUP_COPYPASTE_ITEM_HORIZONTAL_WIDTH_MIN_INC 0;
            color_class: "B061L41"; //FIXME change color code
         }
      }
      part {
         name: "frame_line_bg";
         scale: 1;
         mouse_events: 0;
         description {
            state: "default" 0.0;
            rel1 {to:"frame_shadow_left_top_padding"; relative: 1.0 1.0;}
            rel2 {to:"frame_shadow_right_bottom_padding"; relative: 0.0 0.0;}
            image.normal: "copy&paste_popup_bg_line.#.png";
            color_class: "B067";
         }
      }
      part {
         name: "frame_effect_bg";
         scale: 1;
         mouse_events: 0;
         description {
            state: "default" 0.0;
            rel1.to: "frame_line_bg";
            rel2.to: "frame_line_bg";
            image.normal: "copy&paste_popup_bg_ef.#";
         }
      }
      part { name: "access.outline";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1.to: "frame_bg";
            rel2.to: "frame_bg";
            color: 0 0 0 0;
         }
      }
      part { name: "arrow_area_left";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            min: CTXPOPUP_ARROW_SIZE_INC;
            fixed: 1 1;
            align: 1 0.5;
            rel1 {
               relative: 1 1;
               to_x:"arrow_left_top_padding";
               to_y: "ctxpopup_frame_left_top";
            }
            rel2 {
               relative: 1 0;
               to_x:"arrow_left_top_padding";
               to_y:"ctxpopup_frame_right_bottom";
            }
         }
      }
      part { name: "arrow_area_right";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            min: CTXPOPUP_ARROW_SIZE_INC;
            fixed: 1 1;
            align: 0 0.5;
            rel1 {
               relative: 0 1;
               to_x:"arrow_right_bottom_padding";
               to_y:"ctxpopup_frame_left_top";
            }
            rel2 {
               relative: 0 0;
               to_x:"arrow_right_bottom_padding";
               to_y: "ctxpopup_frame_right_bottom";
            }
         }
      }
      part { name: "arrow_area_up";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            min: CTXPOPUP_ARROW_SIZE_INC;
            fixed: 1 1;
            align: 0.5 1;
            rel1 {
               relative: 1 1;
               to_x: "ctxpopup_frame_left_top";
               to_y: "arrow_left_top_padding";
            }
            rel2 {
               relative: 0 1;
               to_x:"ctxpopup_frame_right_bottom";
               to_y: "arrow_left_top_padding";
            }
         }
      }
      part { name: "arrow_area_down";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            min: CTXPOPUP_ARROW_SIZE_INC;
            fixed: 1 1;
            align: 0.5 0;
            rel1 {
               relative: 1 0;
               to_x:"ctxpopup_frame_left_top";
               to_y:"arrow_right_bottom_padding";
            }
            rel2 {
               relative: 0 0;
               to_x: "ctxpopup_frame_right_bottom";
               to_y:"arrow_right_bottom_padding";
            }
         }
      }
      part { name: "elm.swallow.arrow_up";
         type: SWALLOW;
         mouse_events: 0;
         scale: 1;
         dragable {
            x: 1 1 0;
            y: 1 1 0;
            confine: "arrow_area_up";
         }
         description {
            state: "default" 0.0;
            min: CTXPOPUP_ARROW_SIZE_INC;
            fixed: 1 1;
            visible: 1;
         }
      }
      part { name: "elm.swallow.arrow_down";
         type: SWALLOW;
         mouse_events: 0;
         scale: 1;
         dragable {
            x: 1 1 0;
            y: 1 1 0;
            confine: "arrow_area_down";
         }
         description {
            state: "default" 0.0;
            min: CTXPOPUP_ARROW_SIZE_INC;
            fixed: 1 1;
            visible: 1;
         }
      }
      part { name: "elm.swallow.arrow_left";
         type: SWALLOW;
         mouse_events: 0;
         scale: 1;
         dragable {
            x: 1 1 0;
            y: 1 1 0;
            confine: "arrow_area_left";
         }
         description {
            state: "default" 0.0;
            min: CTXPOPUP_ARROW_SIZE_INC;
            fixed: 1 1;
            visible: 1;
         }
      }
      part { name: "elm.swallow.arrow_right";
         type: SWALLOW;
         mouse_events: 0;
         scale: 1;
         dragable {
            x: 1 1 0;
            y: 1 1 0;
            confine: "arrow_area_right";
         }
         description {
            state: "default" 0.0;
            min: CTXPOPUP_ARROW_SIZE_INC;
            fixed: 1 1;
            visible: 1;
         }
      }
      part {
         name: "ctxpopup_frame_left_top";
         type: SPACER;
         scale: 1;
         description {
            state: "default" 0.0;
            align: 0 0;
            fixed: 1 1;
            min: CTXPOPUP_FRAME_CORNER_ARROW_PADDING CTXPOPUP_FRAME_CORNER_ARROW_PADDING;
            max: CTXPOPUP_FRAME_CORNER_ARROW_PADDING CTXPOPUP_FRAME_CORNER_ARROW_PADDING;
            rel1 {relative: 1 1; to: "frame_shadow_left_top_padding";}
         }
      }
      part {
         name: "ctxpopup_frame_right_bottom";
         type: SPACER;
         scale: 1;
         description {
            state: "default" 0.0;
            align: 1 1;
            fixed: 1 1;
            min: CTXPOPUP_FRAME_CORNER_ARROW_PADDING CTXPOPUP_FRAME_CORNER_ARROW_PADDING;
            max: CTXPOPUP_FRAME_CORNER_ARROW_PADDING CTXPOPUP_FRAME_CORNER_ARROW_PADDING;
            rel2 {relative: 0 0; to: "frame_shadow_right_bottom_padding";}
         }
      }
      part {
         name:"content_left_top_padding";
         type: SPACER;
         scale: 1;
         description {
            state: "default" 0.0;
            min: CTXPOPUP_CONTENT_LEFT_PADDING CTXPOPUP_CONTENT_TOP_PADDING;
            max: CTXPOPUP_CONTENT_LEFT_PADDING CTXPOPUP_CONTENT_TOP_PADDING;
            rel1 {to:"frame_shadow_left_top_padding";  relative: 1.0 1.0;}
            align: 0 0;
            fixed: 1 1;
         }
      }
      part {
         name:"content_right_bottom_padding";
         type: SPACER;
         scale: 1;
         description {
            state: "default" 0.0;
            min: CTXPOPUP_CONTENT_RIGHT_PADDING CTXPOPUP_CONTENT_BOTTOM_PADDING;
            max: CTXPOPUP_CONTENT_RIGHT_PADDING CTXPOPUP_CONTENT_BOTTOM_PADDING;
            rel2 {to:"frame_shadow_right_bottom_padding";  relative: 0.0 0.0;}
            align: 1 1;
            fixed: 1 1;
         }
      }
      part {
         name: "arrow_left_top_padding";
         type: SPACER;
         scale: 1;
         description {
            state: "default" 0.0;
            min: CTXPOPUP_ARROW_PADDING CTXPOPUP_ARROW_PADDING;
            max: CTXPOPUP_ARROW_PADDING CTXPOPUP_ARROW_PADDING;
            rel1 {to:"frame_shadow_left_top_padding";  relative: 1.0 1.0;}
            align: 0 0;
         }
      }
      part {
         name: "arrow_right_bottom_padding";
         type: SPACER;
         scale: 1;
         description {
            state: "default" 0.0;
            min: CTXPOPUP_ARROW_PADDING CTXPOPUP_ARROW_PADDING;
            max: CTXPOPUP_ARROW_PADDING CTXPOPUP_ARROW_PADDING;
            rel2 {to:"frame_shadow_right_bottom_padding";  relative: 0.0 0.0;}
            align: 1 1;
         }
      }
      part {
         name: "elm.swallow.content";
         type: SWALLOW;
         scale: 1;
         description {
            state: "default" 0.0;
            align: 0 0;
            rel1 {to:"content_left_top_padding";  relative: 1.0 1.0;}
            rel2 {to:"content_right_bottom_padding";  relative: 0.0 0.0;}
         }
      }
   }
}

///////////////////////////////////////////////////////////////////////////////
group {
   name: "elm/ctxpopup/arrow/copypaste";
   parts {
      part {
         name: "ctxpopup_arrow";
         type: SPACER;
         scale: 1;
         description {
            state: "default" 0.0;
            min: CTXPOPUP_ARROW_SIZE_INC;
            max: CTXPOPUP_ARROW_SIZE_INC;
            fixed: 1 1;
            align: 0.5 0.5;
         }
         description {
            state: "bottom" 0.0;
            min: CTXPOPUP_ARROW_SIZE_INC;
            max: CTXPOPUP_ARROW_SIZE_INC;
            fixed: 1 1;
            align: 0.5 0.0;
         }
         description {
            state: "top" 0.0;
            min: CTXPOPUP_ARROW_SIZE_INC;
            max: CTXPOPUP_ARROW_SIZE_INC;
            fixed: 1 1;
            align: 0.5 1.0;
         }
      }
   }
   programs {
      program {
         name: "enable_bottom_arrow";
         signal: "elm,state,bottom";
         source: "elm";
         action: STATE_SET "bottom" 0.0;
         target: "ctxpopup_arrow";
      }
      program {
         name: "enable_top_arrow";
         signal: "elm,state,top";
         source: "elm";
         action: STATE_SET "top" 0.0;
         target: "ctxpopup_arrow";
      }
   }
}
///////////////////////////////////////////////////////////////////////////////
group {
   name: "elm/ctxpopup/arrow/default";
   alias: "elm/ctxpopup/arrow/more/default";
   }
//////////////////////////////////////////////////////////////////////////////
group {
   name: "elm/ctxpopup/text_style_item/default";
   alias: "elm/ctxpopup/text_style_item/more/default";

   script {
      public mouse_down = 0;
      public multi_down = 0;
   }

   data.item: "item_max_size" CTXPOPUP_TEXT_MAX;
   parts {
      part {
         name: "event_blocker";
         type: RECT;
         mouse_events: 1;
         description {
            state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
      part {
         name: "bg";
         mouse_events: 0;
         type: RECT;
         scale: 1;
         description {
            state: "default" 0.0;
            min: CTXPOPUP_WIDTH 1;
            max: CTXPOPUP_WIDTH CTXPOPUP_ITEM_HEIGHT_MAX;
            color_class: "B061L41";
         }
         description {
            state: "clicked" 0.0;
            inherit: "default" 0.0;
            color_class: "B061L41P";
         }
      }
      part {
         name: "left_top_padding";
         type: SPACER;
         scale: 1;
         description {
            state: "default" 0.0;
            min: CTXPOPUP_ITEM_TEXT_LR_PADDING CTXPOPUP_ITEM_TEXT_TB_PADDING;
            max: CTXPOPUP_ITEM_TEXT_LR_PADDING CTXPOPUP_ITEM_TEXT_TB_PADDING;
            rel1.to: "bg";
            rel2.to: "bg";
            align: 0 0;
            fixed: 1 1;
         }
      }
      part {
         name: "elm.text";
         type: TEXT;
         mouse_events: 0;
         scale: 1;
         description {
            state: "default" 0.0;
            min: 1 CTXPOPUP_ITEM_TEXT_HEIGHT_MIN;
            max: CTXPOPUP_TEXT_MAX (CTXPOPUP_ITEM_HEIGHT_MAX-CTXPOPUP_ITEM_TEXT_TB_PADDING*2);
            align: 0.5 0.5;
            rel1 {relative: 1.0 1.0; to: "left_top_padding";}
            rel2 {relative: 0.0 0.0; to: "right_bottom_padding";}
            color_class: "T126";
            text {
               text_class: "T126";
               size_range: CTXPOPUP_ITEM_TEXT_SIZE CTXPOPUP_ITEM_TEXT_MAX_SIZE;
               align: 0 0.5;
               min: 1 1;
            }
         }
         description {
            state: "clicked" 0.0;
            inherit: "default" 0.0;
            text.text_class: "T126P";
            color_class: "T126P";
         }
         description {
            state: "disabled" 0.0;
            inherit: "default" 0.0;
            text.text_class: "T126D";
            color_class: "T126D";
         }
         description {
            state: "ellipsis" 0.0;
            inherit: "default" 0.0;
            min: CTXPOPUP_TEXT_MAX CTXPOPUP_ITEM_TEXT_HEIGHT_MIN;
            text.min: 0 1;
         }
         description {
            state: "ellipsis_clicked" 0.0;
            inherit: "ellipsis" 0.0;
            text.text_class: "T126P";
            color_class: "T126P";
         }
         description {
            state: "ellipsis_disabled" 0.0;
            inherit: "ellipsis" 0.0;
            text.text_class: "T126D";
            color_class: "T126D";
         }
      }
      part {
         name: "right_bottom_padding";
         type: SPACER;
         scale: 1;
         description {
            state: "default" 0.0;
            min: CTXPOPUP_ITEM_TEXT_LR_PADDING CTXPOPUP_ITEM_TEXT_TB_PADDING;
            max: CTXPOPUP_ITEM_TEXT_LR_PADDING CTXPOPUP_ITEM_TEXT_TB_PADDING;
            fixed: 1 1;
            align: 1.0 1.0;
         }
      }
      part {
         name: "events";
         type: RECT;
         mouse_events: 1;
         repeat_events: 1;
         description {
            state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
      part {
         name: "disclip";
         type: RECT;
         description {
            state: "default" 0.0;
            visible: 0;
         }
         description {
            state: "disabled" 0.0;
            visible: 1;
            color: 0 0 0 0;
         }
      }
      part {
         name: "bottom_line";
         type: RECT;
         description {
            state: "default" 0.0;
            min: 1 1;
            max: -1 1;
            align: 0.5 1.0;
            color: 192 213 222 255;
            rel1.relative: 0.0 1.0;
         }
      }
   }
   programs {
      program {
         name: "text_default";
         signal: "elm,state,text,default";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.text", st, 30, vl);
            if (!strcmp(st, "disabled") || !strcmp(st, "ellipsis_disabled"))
              set_state(PART:"elm.text", "disabled", 0.0);
            else
              set_state(PART:"elm.text", "default", 0.0);
         }
      }
      program {
         name: "text_ellipsis";
         signal: "elm,state,text,ellipsis";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.text", st, 30, vl);
            if (!strcmp(st, "disabled") || !strcmp(st, "elipsis_disabled"))
              set_state(PART:"elm.text", "ellipsis_disabled", 0.0);
            else
              set_state(PART:"elm.text", "ellipsis", 0.0);
         }
      }
      program {
         name: "item_clicked";
         signal: "mouse,clicked,1";
         source: "events";
         script {
            if (get_int(multi_down) == 0) {
               emit("elm,action,click", "");
               run_program(PROGRAM:"touch_sound");
            }
         }
      }
      program { name: "touch_sound";
         action: RUN_PLUGIN "touch_sound";
      }
      program {
         name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.text", st, 30, vl);
            if ((!strcmp(st, "ellipsis")) || (!strcmp(st, "ellipsis_disabled")))
              set_state(PART:"elm.text", "ellipsis_disabled", 0.0);
            else
              set_state(PART:"elm.text", "disabled", 0.0);
            set_state(PART:"disclip", "disabled", 0.0);
         }
      }
      program {
         name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.text", st, 30, vl);
            if ((!strcmp(st, "ellipsis")) || (!strcmp(st, "ellipsis_disabled")))
              set_state(PART:"elm.text", "ellipsis", 0.0);
            else
              set_state(PART:"elm.text", "default", 0.0);
            set_state(PART:"disclip", "default", 0.0);
         }
      }
      program {
         name: "item_pressed";
         signal: "mouse,down,1";
         source: "events";
         script {
            if (get_int(multi_down) == 0 && get_int(mouse_down) == 0) {
               set_int(mouse_down, 1);
               set_state(PART:"bg", "clicked", 0.0);
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "default"))
                 set_state(PART:"elm.text", "clicked", 0.0);
               else
                 set_state(PART:"elm.text", "ellipsis_clicked", 0.0);
            }
         }
      }
      program { name: "item,unpressed";
         signal: "elm,action,unpressed";
         source: "elm";
         after: "item_released";
      }
      program {
         name: "item_released";
         signal: "mouse,up,1";
         source: "events";
         script {
            if (get_int(mouse_down) == 1) {
               set_int(mouse_down, 0);
               set_state(PART:"bg", "default", 0.0);
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "default") || !strcmp(st, "clicked"))
                 set_state(PART:"elm.text", "default", 0.0);
               else
                 set_state(PART:"elm.text", "ellipsis", 0.0);
            }
         }
      }
      program {
         name: "multi_down";
         signal: "elm,action,multi,down";
         source: "elm";
         script {
            set_int(multi_down, 1);
         }
      }
      program {
         name: "multi_up";
         signal: "elm,action,multi,up";
         source: "elm";
         script {
            set_int(multi_down, 0);
         }
      }
   }
}
///////////////////////////////////////////////////////////////////////////////
group {
   name: "elm/ctxpopup/text_style_item_horizontal/default";

   script {
      public mouse_down = 0;
      public multi_down = 0;
   }

   parts {
      part {
         name: "bg";
         mouse_events: 0;
         type: RECT;
         scale: 1;
         description {
            state: "default" 0.0;
            visible: 0;
            min: (CTXPOPUP_ITEM_HORIZONTAL_WIDTH_MIN_INC-1) CTXPOPUP_ITEM_HORIZONTAL_HEIGHT_INC;
            rel1 {to: "separator"; relative: 1.0 0.0;}
         }
         description {
            state: "clicked" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            color_class: "B066P";
         }
      }
      part {
         name: "separator";
         mouse_events: 0;
         type: RECT;
         scale: 1;
         description {
            state: "default" 0.0;
            color_class: "B069";
            align: 0 0.5;
            min: 0 0;
            max: 0 -1;
            visible: 0;
         }
         description {
            state: "visible" 0.0;
            inherit: "default" 0.0;
            min: CTXPOPUP_SEPARATOR_MIN_SIZE_INC;
            max: CTXPOPUP_SEPARATOR_MAX_SIZE_INC;
            visible: 1;
         }
      }
      part {
         name: "left_padding";
         type: SPACER;
         scale: 1;
         description {
            state: "default" 0.0;
            min: CTXPOPUP_ITEM_TEXT_HORIZONTAL_PADDING_INC 1;
            max: CTXPOPUP_ITEM_TEXT_HORIZONTAL_PADDING_INC 1;
            align: 0 0;
         }
      }
      part {
         name: "elm.text";
         type: TEXT;
         mouse_events: 0;
         scale: 1;
         description {
            state: "default" 0.0;
            min: (CTXPOPUP_ITEM_HORIZONTAL_WIDTH_MIN_INC-CTXPOPUP_ITEM_TEXT_HORIZONTAL_PADDING_INC*2) CTXPOPUP_ITEM_HORIZONTAL_TEXT_HEIGHT_MIN;
            rel1 {relative: 1.0 0.0; to: "left_padding";}
            rel2 {relative: 0.0 1.0; to: "right_padding";}
            text {
               text_class: "T130";
               min: 1 1;
            }
            color_class: "T130";
         }
      }
      part {
         name: "right_padding";
         type: SPACER;
         scale: 1;
         description {
            state: "default" 0.0;
            min: CTXPOPUP_ITEM_TEXT_HORIZONTAL_PADDING_INC 1;
            max: CTXPOPUP_ITEM_TEXT_HORIZONTAL_PADDING_INC 1;
            align: 1 1;
         }
      }
      part {
         name: "events";
         type: RECT;
         mouse_events: 1;
         repeat_events: 1;
         description {
            state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
      part {
         name: "disclip";
         type: RECT;
         description {
            state: "default" 0.0;
            visible: 0;
         }
         description {
            state: "disabled" 0.0;
            visible: 1;
            color: CTXPOPUP_ITEM_DISABLED_COLOR;
         }
      }
      part {
         name: "bottom_line";
         type: RECT;
         description {
            state: "default" 0.0;
            min: 1 1;
            max: -1 1;
            align: 0.5 1.0;
            color: 192 213 222 255;
            rel1.relative: 0.0 1.0;
         }
      }
   }
   programs {
      program {
         name: "item_click";
         signal: "mouse,clicked,1";
         source: "events";
         script {
            if (get_int(multi_down) == 0) {
               emit("elm,action,click", "");
               run_program(PROGRAM:"touch_snd");
            }
         }
      }
      program {
         name: "touch_snd";
         action: RUN_PLUGIN "touch_sound";
      }
      program {
         name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         script {
            set_state(PART:"disclip", "disabled", 0.0);
         }
      }
      program {
         name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         script {
            set_state(PART:"disclip", "default", 0.0);
         }
      }
      program {
         name: "hide_separator";
         signal: "elm,state,default";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "separator";
      }
      program {
         name: "show_separator";
         signal: "elm,state,separator";
         source: "elm";
         action: STATE_SET "visible" 0.0;
         target: "separator";
      }
      program {
         name: "item_pressed";
         signal: "mouse,down,1";
         source: "events";
         script {
            if (get_int(multi_down) == 0 && get_int(mouse_down) == 0) {
               set_int(mouse_down, 1);
               set_state(PART:"bg", "clicked", 0.0);
            }
         }
      }
      program { name: "item,unpressed";
         signal: "elm,action,unpressed";
         source: "elm";
         after: "item_released";
      }
      program {
         name: "item_released";
         signal: "mouse,up,1";
         source: "events";
         script {
            if (get_int(mouse_down) == 1) {
               set_int(mouse_down, 0);
               set_state(PART:"bg", "default", 0.0);
            }
         }
      }
      program {
         name: "multi_down";
         signal: "elm,action,multi,down";
         source: "elm";
         script {
            set_int(multi_down, 1);
         }
      }
      program {
         name: "multi_up";
         signal: "elm,action,multi,up";
         source: "elm";
         script {
            set_int(multi_down, 0);
         }
      }
   }
}
///////////////////////////////////////////////////////////////////////////////
group {
   name: "elm/ctxpopup/icon_style_item/default";

   script {
      public mouse_down = 0;
      public multi_down = 0;
   }

   parts {
      part {
         name: "bg";
         scale: 1;
         mouse_events: 0;
         type: RECT;
         description {
            state: "default" 0.0;
            visible: 0;
            min: (CTXPOPUP_ITEM_ICON_HORIZONTAL_WIDTH_INC-1) CTXPOPUP_ITEM_HORIZONTAL_HEIGHT_INC;
            rel1 {to: "separator"; relative: 1.0 0.0;}
         }
         description {
            state: "clicked" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            color_class: "B066P";
         }
      }
      part {
         name: "top_padding";
         type: SPACER;
         scale: 1;
         description {
            state: "default" 0.0;
            min: 0 CTXPOPUP_ITEM_TEXT_TOP_PADDING_INC;
            max: 0 CTXPOPUP_ITEM_TEXT_TOP_PADDING_INC;
            align: 0.5 0.0;
         }
      }
      part {
         name: "separator";
         mouse_events: 0;
         type: RECT;
         scale: 1;
         description {
            state: "default" 0.0;
            color_class: "B069";
            align: 0 0.5;
            min: 0 0;
            max: 0 -1;
            visible: 0;
         }
         description {
            state: "visible" 0.0;
            inherit: "default" 0.0;
            min: CTXPOPUP_SEPARATOR_MIN_SIZE_INC;
            max: CTXPOPUP_SEPARATOR_MAX_SIZE_INC;
            visible: 1;
         }
      }
      part {
         name: "elm.swallow.icon";
         type: SWALLOW;
         clip_to: "icon_clip";
         scale: 1;
         description {
            state: "default" 0.0;
            min: CTXPOPUP_ICON_WIDTH_INC CTXPOPUP_ICON_HEIGHT_INC;
            max: CTXPOPUP_ICON_WIDTH_INC CTXPOPUP_ICON_HEIGHT_INC;
            aspect: 1.0 1.0;
            rel1 { relative: 1 1; to: "top_padding"; }
            rel2 { relative: 0 0; to: "bottom_padding"; }
         }
      }
      part {
         name: "icon_clip";
         type: RECT;
         scale: 1;
         description {
            state: "default" 0.0;
            rel1.to: "elm.swallow.icon";
            rel2.to: "elm.swallow.icon";
            color_class: "B068";
         }
      }
      part {
         name: "bottom_padding";
         type: SPACER;
         scale: 1;
         description {
            state: "default" 0.0;
            min: 0 CTXPOPUP_ITEM_BOTTOM_PADDING_INC;
            max: 0 CTXPOPUP_ITEM_BOTTOM_PADDING_INC;
            align: 0.5 1.0;
         }
      }
      part {
         name: "events";
         type: RECT;
         mouse_events: 1;
         repeat_events: 1;
         description {
            state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
      part {
         name: "disclip";
         type: RECT;
         description {
            state: "default" 0.0;
            visible: 0;
         }
         description {
            state: "disabled" 0.0;
            visible: 1;
            color: CTXPOPUP_ITEM_DISABLED_COLOR;
         }
      }
      part {
         name: "bottom_line";
         type: RECT;
         description {
            state: "default" 0.0;
            min: 1 1;
            max: -1 1;
            align: 0.5 1.0;
            color: 192 213 222 255;
            rel1.relative: 0.0 1.0;
         }
      }
   }
   programs {
      program {
         name: "hide_separator";
         signal: "elm,state,default";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "separator";
      }
      program {
         name: "show_separator";
         signal: "elm,state,separator";
         source: "elm";
         action: STATE_SET "visible" 0.0;
         target: "separator";
      }
      program {
         name: "item_click";
         signal: "mouse,clicked,1";
         source: "events";
         script {
            if (get_int(multi_down) == 0) {
               emit("elm,action,click", "");
               run_program(PROGRAM:"touch_snd");
            }
         }
      }
      program {
         name: "touch_snd";
         action: RUN_PLUGIN "touch_sound";
      }
      program {
         name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "disclip";
      }
      program {
         name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "disclip";
      }
      program {
         name: "item_pressed";
         signal: "mouse,down,1";
         source: "events";
         script {
            if (get_int(multi_down) == 0 && get_int(mouse_down) == 0) {
               set_int(mouse_down, 1);
               set_state(PART:"bg", "clicked", 0.0);
            }
         }
      }
      program { name: "item,unpressed";
         signal: "elm,action,unpressed";
         source: "elm";
         after: "item_released";
      }
      program {
         name: "item_released";
         signal: "mouse,up,1";
         source: "events";
         script {
            if (get_int(mouse_down) == 1) {
               set_int(mouse_down, 0);
               set_state(PART:"bg", "default", 0.0);
            }
         }
      }
      program {
         name: "multi_down";
         signal: "elm,action,multi,down";
         source: "elm";
         script {
            set_int(multi_down, 1);
         }
      }
      program {
         name: "multi_up";
         signal: "elm,action,multi,up";
         source: "elm";
         script {
            set_int(multi_down, 0);
         }
      }
   }
}
///////////////////////////////////////////////////////////////////////////////
group {
   name: "elm/ctxpopup/icon_text_style_item/default";

   script {
      public mouse_down = 0;
      public multi_down = 0;
   }

   parts {
      part {
         name: "bg";
         mouse_events: 0;
         type: RECT;
         scale: 1;
         description {
            state: "default" 0.0;
            visible: 0;
            min: (CTXPOPUP_ITEM_HORIZONTAL_WIDTH_MIN_INC-1) CTXPOPUP_ITEM_HORIZONTAL_HEIGHT_INC;
            rel1 {to: "separator"; relative: 1.0 0.0;}
         }
         description {
            state: "clicked" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            color_class: "B066P";
         }
      }
      part {
         name: "separator";
         mouse_events: 0;
         type: RECT;
         scale: 1;
         description {
            state: "default" 0.0;
            color_class: "B069";
            align: 0 0.5;
            min: 0 0;
            max: 0 -1;
            visible: 0;
         }
         description {
            state: "visible" 0.0;
            inherit: "default" 0.0;
            min: CTXPOPUP_SEPARATOR_MIN_SIZE_INC;
            max: CTXPOPUP_SEPARATOR_MAX_SIZE_INC;
            visible: 1;
         }
      }
      part {
         name: "icon_top_padding";
         scale: 1;
         type: SPACER;
         description {
            state: "default" 0.0;
            min: 1 CTXPOPUP_ITEM_TOP_PADDING_INC;
            max: 1 CTXPOPUP_ITEM_TOP_PADDING_INC;
            align: 0.5 0.0;
         }
      }
      part {
         name: "elm.swallow.icon";
         type: SWALLOW;
         clip_to: "icon_clip";
         scale: 1;
         description {
            state: "default" 0.0;
            min: CTXPOPUP_ICON_WIDTH_INC CTXPOPUP_ICON_HEIGHT_INC;
            max: CTXPOPUP_ICON_WIDTH_INC CTXPOPUP_ICON_HEIGHT_INC;
            align: 0.5 0.0;
            aspect: 1.0 1.0;
            rel1 { relative: 0.0 1.0; to_y:"icon_top_padding"; }
         }
      }
      part {
         name: "icon_clip";
         type: RECT;
         scale: 1;
         description {
            state: "default" 0.0;
            rel1.to: "elm.swallow.icon";
            rel2.to: "elm.swallow.icon";
            color_class: "B068";
         }
      }
      part {
         name: "icon_bottom_padding";
         scale: 1;
         type: SPACER;
         description {
            state: "default" 0.0;
            min: 1 CTXPOPUP_ITEM_ICON_BOTTOM_PADDING_INC;
            max: 1 CTXPOPUP_ITEM_ICON_BOTTOM_PADDING_INC;
            align: 0.5 0.0;
            rel1 { relative: 0.0 1.0; to_y:"elm.swallow.icon"; }
         }
      }
      part {
         name: "elm.text";
         type:  TEXT;
         mouse_events:  0;
         scale: 1;
         description {
            state: "default" 0.0;
            min: (CTXPOPUP_ITEM_HORIZONTAL_WIDTH_MIN_INC-CTXPOPUP_ITEM_TEXT_HORIZONTAL_PADDING_INC*2) (CTXPOPUP_ITEM_HEIGHT_INC-CTXPOPUP_ICON_HEIGHT_INC-CTXPOPUP_ITEM_TOP_PADDING_INC-CTXPOPUP_ITEM_ICON_BOTTOM_PADDING_INC-CTXPOPUP_ITEM_BOTTOM_PADDING_INC);
            align: 0.5 0.0;
            rel1 {relative: 1.0 1.0; to_x: "text_left_padding"; to_y: "icon_bottom_padding";}
            rel2 {relative: 0.0 0.0; to_x: "text_right_padding"; to_y:"text_bottom_padding";}
            color_class: "T130";
            text {
               text_class: "T130";
               min: 1 1;
            }
         }
      }
      part {
         name: "text_left_padding";
         type: SPACER;
         scale: 1;
         description {
            state: "default" 0.0;
            min: CTXPOPUP_ITEM_TEXT_HORIZONTAL_PADDING_INC 1;
            max: CTXPOPUP_ITEM_TEXT_HORIZONTAL_PADDING_INC 1;
            align: 0.0 0.5;
         }
      }
      part {
         name: "text_right_padding";
         type: SPACER;
         scale: 1;
         description {
            state: "default" 0.0;
            min: CTXPOPUP_ITEM_TEXT_HORIZONTAL_PADDING_INC 1;
            max: CTXPOPUP_ITEM_TEXT_HORIZONTAL_PADDING_INC 1;
            align: 1.0 0.5;
         }
      }
      part {
         name: "text_bottom_padding";
         type: SPACER;
         scale: 1;
         description {
            state: "default" 0.0;
            min: CTXPOPUP_ICON_WIDTH_INC CTXPOPUP_ITEM_BOTTOM_PADDING_INC;
            max: CTXPOPUP_ICON_WIDTH_INC CTXPOPUP_ITEM_BOTTOM_PADDING_INC;
            align: 0.5 1.0;
         }
      }
      part {
         name: "events";
         type: RECT;
         mouse_events: 1;
         repeat_events: 1;
         description {
            state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
      part {
         name: "disclip";
         type: RECT;
         description {
            state: "default" 0.0;
            visible: 0;
         }
         description {
            state: "disabled" 0.0;
            visible: 1;
            color: CTXPOPUP_ITEM_DISABLED_COLOR;
         }
      }
      part {
         name: "bottom_line";
         type: RECT;
         description {
            state: "default" 0.0;
            min: 1 1;
            max: -1 1;
            align: 0.5 1.0;
            color: 192 213 222 255;
            rel1.relative: 0.0 1.0;
         }
      }
   }
   programs {
      program {
         name: "item_click";
         signal: "mouse,clicked,1";
         source: "events";
         script {
            if (get_int(multi_down) == 0) {
               emit("elm,action,click", "");
               run_program(PROGRAM:"touch_snd");
            }
         }
      }
      program {
         name: "touch_snd";
         action: RUN_PLUGIN "touch_sound";
      }
      program {
         name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "disclip";
      }
      program {
         name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "disclip";
      }
      program {
         name: "hide_separator";
         signal: "elm,state,default";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "separator";
      }
      program {
         name: "show_separator";
         signal: "elm,state,separator";
         source: "elm";
         action: STATE_SET "visible" 0.0;
         target: "separator";
      }
      program {
         name: "item_pressed";
         signal: "mouse,down,1";
         source: "events";
         script {
            if (get_int(multi_down) == 0 && get_int(mouse_down) == 0) {
               set_int(mouse_down, 1);
               set_state(PART:"bg", "clicked", 0.0);
            }
         }
      }
      program { name: "item,unpressed";
         signal: "elm,action,unpressed";
         source: "elm";
         after: "item_released";
      }
      program {
         name: "item_released";
         signal: "mouse,up,1";
         source: "events";
         script {
            if (get_int(mouse_down) == 1) {
               set_int(mouse_down, 0);
               set_state(PART:"bg", "default", 0.0);
            }
         }
      }
      program {
         name: "multi_down";
         signal: "elm,action,multi,down";
         source: "elm";
         script {
            set_int(multi_down, 1);
         }
      }
      program {
         name: "multi_up";
         signal: "elm,action,multi,up";
         source: "elm";
         script {
            set_int(multi_down, 0);
         }
      }
   }
}
///////////////////////////////////////////////////////////////////////////////
group {
   name: "elm/ctxpopup/text_style_item_horizontal/copypaste";
   alias: "elm/ctxpopup/icon_text_style_item/copypaste";
   alias: "elm/ctxpopup/text_style_item/copypaste";
   alias: "elm/ctxpopup/icon_style_item/copypaste";

   script {
      public mouse_down = 0;
      public multi_down = 0;
   }

   data.item: "item_max_size" (CTXPOPUP_COPYPASTE_ITEM_HORIZONTAL_WIDTH_MAX_INC-CTXPOPUP_ITEM_TEXT_LR_PADDING*2);

   parts {
      part {
         name: "event_blocker";
         type: RECT;
         mouse_events: 1;
         description {
            state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
      part {
         name: "bg";
         mouse_events: 0;
         type: RECT;
         scale: 1;
         description {
            state: "default" 0.0;
            visible: 0;
            min: (CTXPOPUP_COPYPASTE_ITEM_HORIZONTAL_WIDTH_MIN_INC-1) CTXPOPUP_COPYPASTE_ITEM_HEIGHT_MIN_INC;
            rel1 {to: "separator"; relative: 1.0 0.0;}
            color_class: "B061L41P";
         }
         description {
            state: "clicked" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part {
         name: "separator";
         mouse_events: 0;
         type: RECT;
         scale: 1;
         description {
            state: "default" 0.0;
            color_class: "B069";
            align: 0 0.5;
            min: 0 0;
            max: 0 -1;
            visible: 0;
         }
         description {
            state: "visible" 0.0;
            inherit: "default" 0.0;
            min: CTXPOPUP_COPYPASTE_SEPARATOR_MIN_SIZE_INC;
            max: CTXPOPUP_COPYPASTE_SEPARATOR_MAX_SIZE_INC;
            visible: 1;
         }
      }
      part {
         name: "text_top_padding";
         scale: 1;
         type: SPACER;
         description {
            state: "default" 0.0;
            min: 1 CTXPOPUP_COPYPASTE_ITEM_TEXT_TOP_PADDING_INC;
            max: 1 CTXPOPUP_COPYPASTE_ITEM_TEXT_TOP_PADDING_INC;
            align: 0.5 0.0;
            fixed: 1 1;
         }
      }
      part {
         name: "elm.text";
         type:  TEXT;
         mouse_events:  0;
         scale: 1;
         description {
            state: "default" 0.0;
            min: (CTXPOPUP_COPYPASTE_ITEM_HORIZONTAL_WIDTH_MIN_INC-CTXPOPUP_ITEM_TEXT_LR_PADDING_INC*2) (CTXPOPUP_COPYPASTE_ITEM_HEIGHT_MIN_INC-CTXPOPUP_COPYPASTE_ITEM_TEXT_TOP_PADDING_INC-CTXPOPUP_COPYPASTE_ITEM_TEXT_BOTTOM_PADDING_INC);
            align: 0.5 0.0;
            rel1 {relative: 1.0 1.0; to_x: "text_left_padding"; to_y: "text_top_padding";}
            rel2 {relative: 0.0 0.0; to_x: "text_right_padding"; to_y:"text_bottom_padding";}
            color_class: "T130";
            text {
               size_range: CTXPOPUP_COPYPASTE_TEXT_SIZE_INC CTXPOPUP_COPYPASTE_TEXT_SIZE_INC;
               align: 0.5 0.5;
               min: 1 1;
               text_class: "T130";
            }
         }
         description {
            state: "clicked" 0.0;
            inherit: "default" 0.0;
            text {
               min: 0 1;
               text_class: "T130";
            }
            color_class: "T130";
         }
         description {
            state: "disabled" 0.0;
            inherit: "default" 0.0;
            color_class: "T130";
            text.text_class: "T130";
         }
         description {
            state: "ellipsis" 0.0;
            inherit: "default" 0.0;
            min: (CTXPOPUP_COPYPASTE_ITEM_HORIZONTAL_WIDTH_MAX_INC-CTXPOPUP_COPYPASTE_ITEM_TEXT_PADDING_INC*2) (CTXPOPUP_COPYPASTE_ITEM_HEIGHT_MIN_INC-CTXPOPUP_COPYPASTE_ITEM_TEXT_TOP_PADDING_INC-CTXPOPUP_COPYPASTE_ITEM_TEXT_BOTTOM_PADDING_INC);
            text.min: 0 1;
         }
         description {
            state: "ellipsis_clicked" 0.0;
            inherit: "ellipsis" 0.0;
            text.text_class: "T130";
            color_class: "T130";
         }
         description {
            state: "ellipsis_disabled" 0.0;
            inherit: "ellipsis" 0.0;
            color_class: "T130";
            text.text_class: "T130";
         }
      }
      part {
         name: "text_left_padding";
         type: SPACER;
         scale: 1;
         description {
            state: "default" 0.0;
            min: CTXPOPUP_COPYPASTE_ITEM_TEXT_PADDING_INC 1;
            max: CTXPOPUP_COPYPASTE_ITEM_TEXT_PADDING_INC 1;
            fixed: 1 0;
            align: 0.0 0.5;
         }
      }
      part {
         name: "text_right_padding";
         type: SPACER;
         scale: 1;
         description {
            state: "default" 0.0;
            min: CTXPOPUP_COPYPASTE_ITEM_TEXT_PADDING_INC 1;
            max: CTXPOPUP_COPYPASTE_ITEM_TEXT_PADDING_INC 1;
            fixed: 1 0;
            align: 1.0 0.5;
         }
      }
      part {
         name: "text_bottom_padding";
         type: SPACER;
         scale: 1;
         description {
            state: "default" 0.0;
            min: 1 CTXPOPUP_COPYPASTE_ITEM_TEXT_BOTTOM_PADDING_INC;
            max: 1 CTXPOPUP_COPYPASTE_ITEM_TEXT_BOTTOM_PADDING_INC;
            fixed: 1 1;
            align: 0.5 1.0;
         }
      }
      part {
         name: "events";
         type: RECT;
         mouse_events: 1;
         repeat_events: 1;
         description {
            state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
      part {
         name: "disclip";
         type: RECT;
         description {
            state: "default" 0.0;
            visible: 0;
         }
         description {
            state: "disabled" 0.0;
            visible: 1;
            color: CTXPOPUP_ITEM_DISABLED_COLOR;
         }
      }
      part {
         name: "bottom_line";
         type: RECT;
         description {
            state: "default" 0.0;
            min: 1 1;
            max: -1 1;
            align: 0.5 1.0;
            color: 192 213 222 255;
            rel1.relative: 0.0 1.0;
         }
      }
   }
   programs {
      program {
         name: "text_default";
         signal: "elm,state,text,default";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.text", st, 30, vl);
            if ((!strcmp(st, "disabled")) || (!strcmp(st, "ellipsis_disabled")))
              set_state(PART:"elm.text", "disabled", 0.0);
            else
              set_state(PART:"elm.text", "default", 0.0);
         }
      }
      program {
         name: "text_ellipsis";
         signal: "elm,state,text,ellipsis";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.text", st, 30, vl);
            if (!strcmp(st, "disabled") || !strcmp(st, "ellipsis_disabled"))
              set_state(PART:"elm.text", "ellipsis_disabled", 0.0);
            else
              set_state(PART:"elm.text", "ellipsis", 0.0);
         }
      }
      program {
         name: "item_click";
         signal: "mouse,clicked,1";
         source: "events";
         script {
            if (get_int(multi_down) == 0) {
               emit("elm,action,click", "");
               run_program(PROGRAM:"touch_snd");
            }
         }
      }
      program {
         name: "touch_snd";
         action: RUN_PLUGIN "touch_sound";
      }
      program {
         name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.text", st, 30, vl);
            if ((!strcmp(st, "ellipsis")) || (!strcmp(st, "ellipsis_disabled")))
              set_state(PART:"elm.text", "ellipsis_disabled", 0.0);
            else
              set_state(PART:"elm.text", "disabled", 0.0);
            set_state(PART:"disclip", "disabled", 0.0);
         }
      }
      program {
         name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.text", st, 30, vl);
            if ((!strcmp(st, "ellipsis")) || (!strcmp(st, "ellipsis_disabled")))
              set_state(PART:"elm.text", "ellipsis", 0.0);
            else
              set_state(PART:"elm.text", "default", 0.0);
            set_state(PART:"disclip", "default", 0.0);
         }
      }
      program {
         name: "hide_separator";
         signal: "elm,state,default";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "separator";
      }
      program {
         name: "show_separator";
         signal: "elm,state,separator";
         source: "elm";
         action: STATE_SET "visible" 0.0;
         target: "separator";
      }
      program {
         name: "item_pressed";
         signal: "mouse,down,1";
         source: "events";
         script {
            if (get_int(multi_down) == 0 && get_int(mouse_down) == 0) {
               set_int(mouse_down, 1);
               set_state(PART:"bg", "clicked", 0.0);
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "default"))
                 set_state(PART:"elm.text", "clicked", 0.0);
               else
                 set_state(PART:"elm.text", "ellipsis_clicked", 0.0);
            }
         }
      }
      program { name: "item,unpressed";
         signal: "elm,action,unpressed";
         source: "elm";
         after: "item_released";
      }
      program {
         name: "item_released";
         signal: "mouse,up,1";
         source: "events";
         script {
            if (get_int(mouse_down) == 1) {
               set_int(mouse_down, 0);
               set_state(PART:"bg", "default", 0.0);
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "default") || !strcmp(st, "clicked"))
                 set_state(PART:"elm.text", "default", 0.0);
               else
                 set_state(PART:"elm.text", "ellipsis", 0.0);
            }
         }
      }
      program {
         name: "multi_down";
         signal: "elm,action,multi,down";
         source: "elm";
         script {
            set_int(multi_down, 1);
         }
      }
      program {
         name: "multi_up";
         signal: "elm,action,multi,up";
         source: "elm";
         script {
            set_int(multi_down, 0);
         }
      }
   }
}

///////////////////////////////////////////////////////////////////////////////
group {
   name: "elm/ctxpopup/layout/dropdown/list";
   alias: "elm/ctxpopup/layout/dropdown/label";

   data.item: "visible_maxw" CTXPOPUP_DROPDOWN_WIDTH;
   data.item: "visible_maxh" (CTXPOPUP_DROPDOWN_ITEM_HEIGHT_MIN*5+CTXPOPUP_DROPDOWN_SEPARATOR_HEIGHT*4);

   parts {
      part {
         name:"top_padding";
         type: SPACER;
         scale: 1;
         description {
            state: "default" 0.0;
            fixed: 0 1;
            align: 0.5 0.0;
            rel1.relative: 0.0 0.0;
            rel2.relative: 1.0 1.0;
         }
         description {
            state: "show_up" 0.0;
            inherit: "default" 0.0;
         }
         description {
            state: "visible" 0.0;
            inherit: "default" 0.0;
            max: -1 0;
         }
      }
      part {
         name:"bottom_padding";
         type: SPACER;
         scale: 1;
         description {
            state: "default" 0.0;
            fixed: 0 1;
            align: 0.5 1.0;
            rel1.relative: 0.0 0.0;
            rel2.relative: 1.0 1.0;
         }
         description {
            state: "show_down" 0.0;
            inherit: "default" 0.0;
         }
         description {
            state: "visible" 0.0;
            inherit: "default" 0.0;
            max: -1 0;
         }
      }
      part {
         name: "swallow";
         type: SWALLOW;
         clip_to: "layout_clip";
         scale: 1;
         description {
            state: "default" 0.0;
            visible: 0;
         }
         description {
            state: "show_up" 0.0;
            rel1 {to_y:"top_padding"; relative: 1.0 1.0;}
            rel2 {to_y:"top_padding"; relative: 0.0 1.0;}
            align: 0.5 0.0;
         }
         description {
            state: "show_down" 0.0;
            rel1 {to_y: "bottom_padding"; relative: 1.0 0.0;}
            rel2 {to_y: "bottom_padding"; relative: 0.0 0.0;}
            align: 0.5 1.0;
         }
      }
      part {
         name: "event_blocker";
         type: RECT;
         scale: 1;
         description {
            state: "default" 0.0;
            visible: 1;
            color: 0 0 0 0;
         }
         description {
            state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part {
         name: "layout_clip";
         type: RECT;
         scale: 1;
         description {
            state: "default" 0.0;
            color: 255 255 255 0;
         }
         description {
            state: "visible" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
         }
      }
   }
   programs {
      program {
         name:   "showup";
         signal: "elm,state,show,up";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"swallow", st, 30, vl);
            if (strcmp(st, "show_up")) {
              set_state(PART:"swallow", "show_up", 0.0);
              set_state(PART:"top_padding", "show_up", 0.0);
            }
         }
         after: "showupend";
      }
      program {
         name:   "showdown";
         signal: "elm,state,show,down";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"swallow", st, 30, vl);
            if (strcmp(st, "show_down")) {
              set_state(PART:"swallow", "show_down", 0.0);
              set_state(PART:"bottom_padding", "show_down", 0.0);
            }
         }
         after: "showdownend";
      }
      program {
         name: "show_clip_blocker";
         signal: "elm,state,show,*";
         source: "elm";
         action: STATE_SET "visible" 0.0;
         transition: SIN_FAC 0.5 1.7;
         target: "layout_clip";
         target: "event_blocker";
      }
      program {
         name:   "showupend";
         action: STATE_SET "visible" 0.0;
         transition: SIN_FAC 0.5 1.7;
         target: "top_padding";
      }
      program {
         name:   "showdownend";
         action: STATE_SET "visible" 0.0;
         transition: SIN_FAC 0.5 1.7;
         target: "bottom_padding";
      }
      program {
         name:   "hideup";
         signal: "elm,state,hide,up";
         source: "elm";
         action: STATE_SET "show_up" 0.0;
         target: "swallow";
         target: "top_padding";
         transition: SIN_FAC 0.5 1.7;
         after: "be_default";
      }
      program {
         name:   "hidedown";
         signal: "elm,state,hide,down";
         source: "elm";
         action: STATE_SET "show_down" 0.0;
         target: "swallow";
         target: "bottom_padding";
         transition: SIN_FAC 0.5 1.7;
         after: "be_default";
      }
      program {
         name:   "hide_clip";
         signal: "elm,state,hide,*";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "layout_clip";
         transition: SIN_FAC 0.5 1.7;
         after: "be_default";
      }
      program {
         name: "hide_event_blocker";
         signal: "elm,state,hide,*";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "event_blocker";
      }
      program {
         name: "be_default";
         action: STATE_SET "default" 0.0;
         target: "swallow";
         target: "top_padding";
         target: "bottom_padding";
         after: "hidefinished";
      }
      program {
         name: "hidefinished";
         action: SIGNAL_EMIT "elm,action,hide,finished" "";
      }
   }
}
///////////////////////////////////////////////////////////////////////////////
group {
   name: "elm/ctxpopup/layout/landscape/dropdown/list";
   inherit: "elm/ctxpopup/layout/dropdown/list";
   alias: "elm/ctxpopup/layout/landscape/dropdown/label";

   data.item: "visible_maxw" CTXPOPUP_DROPDOWN_WIDTH;
   data.item: "visible_maxh" (CTXPOPUP_DROPDOWN_ITEM_HEIGHT_MIN*5+CTXPOPUP_DROPDOWN_SEPARATOR_HEIGHT*4);
}
///////////////////////////////////////////////////////////////////////////////
group {
   name: "elm/ctxpopup/base/dropdown/list";
   alias: "elm/ctxpopup/base/dropdown/label";

   parts {
      part {
         name: "frame_bg";
         type: RECT;
         scale: 1;
         mouse_events: 0;
         description {
            state: "default" 0.0;
            min: 100 0;
            color_class: "B0733";
         }
      }
      part {
         name: "frame_bg_outline_left";
         type: RECT;
         scale: 1;
         description {
            state: "default" 0.0;
            min: CTXPOPUP_OUTLINE_SIZE 0;
            max: CTXPOPUP_OUTLINE_SIZE -1;
            rel1.to: "frame_bg";
            rel2 {to: "frame_bg"; relative: 0.0 1.0;}
            fixed: 1 0;
            align: 0.0 0.5;
            color_class: "B0733L1";
         }
      }
      part {
         name: "frame_bg_outline_right";
         type: RECT;
         scale: 1;
         description {
            state: "default" 0.0;
            min: CTXPOPUP_OUTLINE_SIZE 0;
            max: CTXPOPUP_OUTLINE_SIZE -1;
            rel1 {to: "frame_bg"; relative: 1.0 0.0;}
            rel2.to: "frame_bg";
            fixed: 1 0;
            align: 1.0 0.5;
            color_class: "B0733L1";
         }
      }
      part {
         name: "frame_bg_outline_top";
         type: RECT;
         scale: 1;
         description {
            state: "default" 0.0;
            min: 0 CTXPOPUP_OUTLINE_SIZE;
            max: -1 CTXPOPUP_OUTLINE_SIZE;
            rel1.to: "frame_bg";
            rel2 {to: "frame_bg"; relative: 1.0 0.0;}
            fixed: 0 1;
            align: 0.5 0.0;
            color_class: "B0733L1";
         }
      }
      part {
         name: "frame_bg_outline_bottom";
         type: RECT;
         scale: 1;
         description {
            state: "default" 0.0;
            min: 0 CTXPOPUP_OUTLINE_SIZE;
            max: -1 CTXPOPUP_OUTLINE_SIZE;
            rel1 {to: "frame_bg"; relative: 0.0 1.0;}
            rel2.to: "frame_bg";
            fixed: 0 1;
            align: 0.5 1.0;
            color_class: "B0733L1";
         }
      }
      part {
         name: "content_left_top_padding";
         type: SPACER;
         scale: 1;
         description {
            state: "default" 0.0;
            min: CTXPOPUP_DROPDOWN_CONTENT_LR_PADDING CTXPOPUP_DROPDOWN_CONTENT_TB_PADDING;
            max: CTXPOPUP_DROPDOWN_CONTENT_LR_PADDING CTXPOPUP_DROPDOWN_CONTENT_TB_PADDING;
            rel1.to: "frame_bg";
            rel2 {to: "frame_bg"; relative: 0.0 0.0;}
            align: 0.0 0.0;
            fixed: 1 1;
         }
      }
      part {
         name: "content_right_bottom_padding";
         type: SPACER;
         scale: 1;
         description {
            state: "default" 0.0;
            min: CTXPOPUP_DROPDOWN_CONTENT_LR_PADDING CTXPOPUP_DROPDOWN_CONTENT_TB_PADDING;
            max: CTXPOPUP_DROPDOWN_CONTENT_LR_PADDING CTXPOPUP_DROPDOWN_CONTENT_TB_PADDING;
            rel1 {to: "frame_bg"; relative: 1.0 1.0;}
            rel2.to: "frame_bg";
            align: 1.0 1.0;
            fixed: 1 1;
         }
      }
      part { name: "access.outline";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1.to: "frame_bg";
            rel2.to: "frame_bg";
            color: 0 0 0 0;
         }
      }
      part {
         name: "elm.swallow.content";
         type: SWALLOW;
         scale: 1;
         description {
            state: "default" 0.0;
            align: 0 0;
            rel1 {to: "content_left_top_padding"; relative: 1.0 1.0;}
            rel2 {to: "content_right_bottom_padding"; relative: 0.0 0.0;}
         }
      }
   }
}
///////////////////////////////////////////////////////////////////////////////
group {
   name: "elm/ctxpopup/text_style_item/dropdown/list";

   script {
      public mouse_down = 0;
      public multi_down = 0;
   }

   data.item: "item_max_size" CTXPOPUP_DROPDOWN_TEXT_MAX;

   parts {
      part {
         name: "event_blocker";
         type: RECT;
         mouse_events: 1;
         description {
            state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
      part {
         name: "bg";
         mouse_events: 0;
         type: RECT;
         scale: 1;
         description {
            state: "default" 0.0;
            visible: 0;
            min: (CTXPOPUP_DROPDOWN_WIDTH-CTXPOPUP_DROPDOWN_CONTENT_LR_PADDING*2) 1;
            max: (CTXPOPUP_DROPDOWN_WIDTH-CTXPOPUP_DROPDOWN_CONTENT_LR_PADDING*2) CTXPOPUP_DROPDOWN_ITEM_HEIGHT_MAX;
            color_class: "B0733P";
         }
         description {
            state: "clicked" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
         description {
            state: "clicked_separator" 0.0;
            inherit: "default" 0.0;
            rel1 {to_y: "separator"; relative: 0.0 1.0;}
            visible: 1;
         }
      }
      part {
         name: "left_top_padding";
         type: SPACER;
         scale: 1;
         description {
            state: "default" 0.0;
            min: CTXPOPUP_DROPDOWN_ITEM_TEXT_LR_PADDING 0;
            max: CTXPOPUP_DROPDOWN_ITEM_TEXT_LR_PADDING 0;
            align: 0 0;
            fixed: 1 1;
         }
      }
      part {
         name: "separator";
         type: RECT;
         scale: 1;
         description {
            state: "default" 0.0;
            min: 0 CTXPOPUP_DROPDOWN_SEPARATOR_HEIGHT;
            max: -1 CTXPOPUP_DROPDOWN_SEPARATOR_HEIGHT;
            rel1 {to: "left_top_padding"; relative: 1.0 0.0;}
            rel2 {to: "right_bottom_padding"; relative: 0.0 0.0;}
            align: 0.5 0.0;
            color_class: "B0733L2";
            visible: 0;
         }
         description {
            state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part {
         name: "elm.text";
         type: TEXT;
         mouse_events: 0;
         scale: 1;
         description {
            state: "default" 0.0;
            min: 1 CTXPOPUP_DROPDOWN_ITEM_HEIGHT_MIN;
            max: CTXPOPUP_DROPDOWN_TEXT_MAX CTXPOPUP_DROPDOWN_ITEM_HEIGHT_MAX;
            align: 0.5 0.5;
            rel1 {relative: 1.0 1.0; to: "left_top_padding";}
            rel2 {relative: 0.0 0.0; to: "right_bottom_padding";}
            color_class: "T12351";
            text {
               text_class: "T12351";
               size_range: CTXPOPUP_DROPDOWN_ITEM_TEXT_SIZE CTXPOPUP_DROPDOWN_ITEM_TEXT_MAX_SIZE;
               align: 0 0.5;
               min: 1 1;
            }
         }
         description {
            state: "clicked" 0.0;
            inherit: "default" 0.0;
            text.text_class: "T12351P";
            color_class: "T12351P";
         }
         description {
            state: "disabled" 0.0;
            inherit: "default" 0.0;
            text.text_class: "T12351D";
            color_class: "T12351D";
         }
         description {
            state: "ellipsis" 0.0;
            inherit: "default" 0.0;
            min: CTXPOPUP_DROPDOWN_TEXT_MAX CTXPOPUP_DROPDOWN_ITEM_HEIGHT_MIN;
            text.min: 0 1;
         }
         description {
            state: "ellipsis_clicked" 0.0;
            inherit: "ellipsis" 0.0;
            text.text_class: "T12351P";
            color_class: "T12351P";
         }
         description {
            state: "ellipsis_disabled" 0.0;
            inherit: "ellipsis" 0.0;
            text.text_class: "T12351D";
            color_class: "T12351D";
         }
      }
      part {
         name: "right_bottom_padding";
         type: SPACER;
         scale: 1;
         description {
            state: "default" 0.0;
            min: CTXPOPUP_DROPDOWN_ITEM_TEXT_LR_PADDING 0;
            max: CTXPOPUP_DROPDOWN_ITEM_TEXT_LR_PADDING 0;
            fixed: 1 1;
            align: 1.0 1.0;
         }
      }
      part {
         name: "events";
         type: RECT;
         mouse_events: 1;
         repeat_events: 1;
         description {
            state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
      part {
         name: "disclip";
         type: RECT;
         description {
            state: "default" 0.0;
            visible: 0;
         }
         description {
            state: "disabled" 0.0;
            visible: 1;
            color: 0 0 0 0;
         }
      }
      part {
         name: "bottom_line";
         type: RECT;
         description {
            state: "default" 0.0;
            min: 1 1;
            max: -1 1;
            align: 0.5 1.0;
            color: 192 213 222 255;
            rel1.relative: 0.0 1.0;
         }
      }
   }
   programs {
      program {
         name: "hide_separator";
         signal: "elm,state,default";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "separator";
      }
      program {
         name: "show_separator";
         signal: "elm,state,separator";
         source: "elm";
         action: STATE_SET "visible" 0.0;
         target: "separator";
      }
      program {
         name: "text_default";
         signal: "elm,state,text,default";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.text", st, 30, vl);
            if (!strcmp(st, "disabled") || !strcmp(st, "ellipsis_disabled"))
              set_state(PART:"elm.text", "disabled", 0.0);
            else
              set_state(PART:"elm.text", "default", 0.0);
         }
      }
      program {
         name: "text_ellipsis";
         signal: "elm,state,text,ellipsis";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.text", st, 30, vl);
            if (!strcmp(st, "disabled") || !strcmp(st, "elipsis_disabled"))
              set_state(PART:"elm.text", "ellipsis_disabled", 0.0);
            else
              set_state(PART:"elm.text", "ellipsis", 0.0);
         }
      }
      program {
         name: "item_clicked";
         signal: "mouse,clicked,1";
         source: "events";
         script {
            if (get_int(multi_down) == 0) {
               emit("elm,action,click", "");
               run_program(PROGRAM:"touch_sound");
            }
         }
      }
      program { name: "touch_sound";
         action: RUN_PLUGIN "touch_sound";
      }
      program {
         name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.text", st, 30, vl);
            if ((!strcmp(st, "ellipsis")) || (!strcmp(st, "ellipsis_disabled")))
              set_state(PART:"elm.text", "ellipsis_disabled", 0.0);
            else
              set_state(PART:"elm.text", "disabled", 0.0);
            set_state(PART:"disclip", "disabled", 0.0);
         }
      }
      program {
         name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.text", st, 30, vl);
            if ((!strcmp(st, "ellipsis")) || (!strcmp(st, "ellipsis_disabled")))
              set_state(PART:"elm.text", "ellipsis", 0.0);
            else
              set_state(PART:"elm.text", "default", 0.0);
            set_state(PART:"disclip", "default", 0.0);
         }
      }
      program {
         name: "item_pressed";
         signal: "mouse,down,1";
         source: "events";
         script {
            new st[31];
            new Float:vl;
            if (get_int(multi_down) == 0 && get_int(mouse_down) == 0) {
               set_int(mouse_down, 1);
               get_state(PART:"separator", st, 30, vl);
               if (!strcmp(st, "visible"))
                 set_state(PART:"bg", "clicked_separator", 0.0);
               else
                 set_state(PART:"bg", "clicked", 0.0);
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "default"))
                 set_state(PART:"elm.text", "clicked", 0.0);
               else
                 set_state(PART:"elm.text", "ellipsis_clicked", 0.0);
            }
         }
      }
      program { name: "item,unpressed";
         signal: "elm,action,unpressed";
         source: "elm";
         after: "item_released";
      }
      program {
         name: "item_released";
         signal: "mouse,up,1";
         source: "events";
         script {
            if (get_int(mouse_down) == 1) {
               set_int(mouse_down, 0);
               set_state(PART:"bg", "default", 0.0);
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "default") || !strcmp(st, "clicked"))
                 set_state(PART:"elm.text", "default", 0.0);
               else
                 set_state(PART:"elm.text", "ellipsis", 0.0);
            }
         }
      }
      program {
         name: "multi_down";
         signal: "elm,action,multi,down";
         source: "elm";
         script {
            set_int(multi_down, 1);
         }
      }
      program {
         name: "multi_up";
         signal: "elm,action,multi,up";
         source: "elm";
         script {
            set_int(multi_down, 0);
         }
      }
   }
}
///////////////////////////////////////////////////////////////////////////////
group {
   name: "elm/ctxpopup/text_style_item/dropdown/label";

   script {
      public mouse_down = 0;
      public multi_down = 0;
   }

   data.item: "item_max_size" CTXPOPUP_DROPDOWN_TEXT_MAX;

   parts {
      part {
         name: "event_blocker";
         type: RECT;
         mouse_events: 1;
         description {
            state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
      part {
         name: "bg";
         mouse_events: 0;
         type: RECT;
         scale: 1;
         description {
            state: "default" 0.0;
            visible: 0;
            min: 0 1;
            max: CTXPOPUP_DROPDOWN_WIDTH CTXPOPUP_DROPDOWN_ITEM_HEIGHT_MAX;
            color_class: "B0733P";
         }
         description {
            state: "clicked" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
         description {
            state: "clicked_separator" 0.0;
            inherit: "default" 0.0;
            rel1 {to_y: "separator"; relative: 0.0 1.0;}
            visible: 1;
         }
      }
      part {
         name: "left_top_padding";
         type: SPACER;
         scale: 1;
         description {
            state: "default" 0.0;
            min: CTXPOPUP_DROPDOWN_ITEM_TEXT_LR_PADDING 0;
            max: CTXPOPUP_DROPDOWN_ITEM_TEXT_LR_PADDING 0;
            align: 0 0;
            fixed: 1 1;
         }
      }
      part {
         name: "separator";
         type: RECT;
         scale: 1;
         description {
            state: "default" 0.0;
            min: 0 CTXPOPUP_DROPDOWN_SEPARATOR_HEIGHT;
            max: -1 CTXPOPUP_DROPDOWN_SEPARATOR_HEIGHT;
            rel1 {to: "left_top_padding"; relative: 1.0 0.0;}
            rel2 {to: "right_bottom_padding"; relative: 0.0 0.0;}
            align: 0.5 0.0;
            color_class: "B0733L2";
            visible: 0;
         }
         description {
            state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part {
         name: "elm.text";
         type: TEXT;
         mouse_events: 0;
         scale: 1;
         description {
            state: "default" 0.0;
            min: 1 CTXPOPUP_DROPDOWN_ITEM_HEIGHT_MIN;
            max: CTXPOPUP_DROPDOWN_TEXT_MAX CTXPOPUP_DROPDOWN_ITEM_HEIGHT_MAX;
            align: 0.5 0.5;
            rel1 {relative: 1.0 1.0; to: "left_top_padding";}
            rel2 {relative: 0.0 0.0; to: "right_bottom_padding";}
            color_class: "T12351";
            text {
               text_class: "T12351";
               size_range: CTXPOPUP_DROPDOWN_ITEM_TEXT_SIZE CTXPOPUP_DROPDOWN_ITEM_TEXT_MAX_SIZE;
               align: 0 0.5;
               min: 1 1;
            }
         }
         description {
            state: "clicked" 0.0;
            inherit: "default" 0.0;
            text.text_class: "T12351P";
            color_class: "T12351P";
         }
         description {
            state: "disabled" 0.0;
            inherit: "default" 0.0;
            text.text_class: "T12351D";
            color_class: "T12351D";
         }
         description {
            state: "ellipsis" 0.0;
            inherit: "default" 0.0;
            min: CTXPOPUP_DROPDOWN_TEXT_MAX CTXPOPUP_DROPDOWN_ITEM_HEIGHT_MIN;
            text.min: 0 1;
         }
         description {
            state: "ellipsis_clicked" 0.0;
            inherit: "ellipsis" 0.0;
            text.text_class: "T12351P";
            color_class: "T12351P";
         }
         description {
            state: "ellipsis_disabled" 0.0;
            inherit: "ellipsis" 0.0;
            text.text_class: "T12351D";
            color_class: "T12351D";
         }
      }
      part {
         name: "right_bottom_padding";
         type: SPACER;
         scale: 1;
         description {
            state: "default" 0.0;
            min: CTXPOPUP_DROPDOWN_ITEM_TEXT_LR_PADDING 0;
            max: CTXPOPUP_DROPDOWN_ITEM_TEXT_LR_PADDING 0;
            fixed: 1 1;
            align: 1.0 1.0;
         }
      }
      part {
         name: "events";
         type: RECT;
         mouse_events: 1;
         repeat_events: 1;
         description {
            state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
      part {
         name: "disclip";
         type: RECT;
         description {
            state: "default" 0.0;
            visible: 0;
         }
         description {
            state: "disabled" 0.0;
            visible: 1;
            color: 0 0 0 0;
         }
      }
      part {
         name: "bottom_line";
         type: RECT;
         description {
            state: "default" 0.0;
            min: 1 1;
            max: -1 1;
            align: 0.5 1.0;
            color: 192 213 222 255;
            rel1.relative: 0.0 1.0;
         }
      }
   }
   programs {
      program {
         name: "hide_separator";
         signal: "elm,state,default";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "separator";
      }
      program {
         name: "show_separator";
         signal: "elm,state,separator";
         source: "elm";
         action: STATE_SET "visible" 0.0;
         target: "separator";
      }
      program {
         name: "text_default";
         signal: "elm,state,text,default";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.text", st, 30, vl);
            if (!strcmp(st, "disabled") || !strcmp(st, "ellipsis_disabled"))
              set_state(PART:"elm.text", "disabled", 0.0);
            else
              set_state(PART:"elm.text", "default", 0.0);
         }
      }
      program {
         name: "text_ellipsis";
         signal: "elm,state,text,ellipsis";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.text", st, 30, vl);
            if (!strcmp(st, "disabled") || !strcmp(st, "elipsis_disabled"))
              set_state(PART:"elm.text", "ellipsis_disabled", 0.0);
            else
              set_state(PART:"elm.text", "ellipsis", 0.0);
         }
      }
      program {
         name: "item_clicked";
         signal: "mouse,clicked,1";
         source: "events";
         script {
            if (get_int(multi_down) == 0) {
               emit("elm,action,click", "");
               run_program(PROGRAM:"touch_sound");
            }
         }
      }
      program { name: "touch_sound";
         action: RUN_PLUGIN "touch_sound";
      }
      program {
         name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.text", st, 30, vl);
            if ((!strcmp(st, "ellipsis")) || (!strcmp(st, "ellipsis_disabled")))
              set_state(PART:"elm.text", "ellipsis_disabled", 0.0);
            else
              set_state(PART:"elm.text", "disabled", 0.0);
            set_state(PART:"disclip", "disabled", 0.0);
         }
      }
      program {
         name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.text", st, 30, vl);
            if ((!strcmp(st, "ellipsis")) || (!strcmp(st, "ellipsis_disabled")))
              set_state(PART:"elm.text", "ellipsis", 0.0);
            else
              set_state(PART:"elm.text", "default", 0.0);
            set_state(PART:"disclip", "default", 0.0);
         }
      }
      program {
         name: "item_pressed";
         signal: "mouse,down,1";
         source: "events";
         script {
            new st[31];
            new Float:vl;
            if (get_int(multi_down) == 0 && get_int(mouse_down) == 0) {
               set_int(mouse_down, 1);
               get_state(PART:"separator", st, 30, vl);
               if (!strcmp(st, "visible"))
                 set_state(PART:"bg", "clicked_separator", 0.0);
               else
                 set_state(PART:"bg", "clicked", 0.0);
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "default"))
                 set_state(PART:"elm.text", "clicked", 0.0);
               else
                 set_state(PART:"elm.text", "ellipsis_clicked", 0.0);
            }
         }
      }
      program { name: "item,unpressed";
         signal: "elm,action,unpressed";
         source: "elm";
         after: "item_released";
      }
      program {
         name: "item_released";
         signal: "mouse,up,1";
         source: "events";
         script {
            if (get_int(mouse_down) == 1) {
               set_int(mouse_down, 0);
               set_state(PART:"bg", "default", 0.0);
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "default") || !strcmp(st, "clicked"))
                 set_state(PART:"elm.text", "default", 0.0);
               else
                 set_state(PART:"elm.text", "ellipsis", 0.0);
            }
         }
      }
      program {
         name: "multi_down";
         signal: "elm,action,multi,down";
         source: "elm";
         script {
            set_int(multi_down, 1);
         }
      }
      program {
         name: "multi_up";
         signal: "elm,action,multi,up";
         source: "elm";
         script {
            set_int(multi_down, 0);
         }
      }
   }
}
