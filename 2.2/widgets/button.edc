/*
 * Copyright (c) 2010 Samsung Electronics Co., Ltd All Rights Reserved
 *
 * BSD 2-Clause License (http://www.opensource.org/licenses/bsd-license.php)
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *   1. Redistributions of source code must retain the above copyright notice, this
 *      list of conditions and the following disclaimer.
 *   2. Redistributions in binary form must reproduce the above copyright notice,
 *      this list of conditions and the following disclaimer in the documentation
 *      and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#define BUTTON_STATE_ENABLED 0
#define BUTTON_STATE_DISABLED 1
#define BUTTON_LANDSCAPE_DISABLED 0
#define BUTTON_LANDSCAPE_ENABLED 1

///////////////////////////////////////////////////////////////////////////////////////
   group { name: "elm/button/base/style1";
      alias: "elm/button/base/default";
      data {
         item: "focus_highlight" "on";
      }
      images {
         image: "00_button_01_bg_dim_ef.#.png" COMP;
         image: "00_button_01_bg_ef.#.png" COMP;
         image: "00_button_01_bg_focus.#.png" COMP;
      }
      styles{
         style { name: "btn_base_style1";
            base: "font=Tizen:style=Regular font_size="BUTTON_TEXT_STYLE1_FONT_SIZE_INC" align=center color=#FFFFFF color_class=T051 ellipsis=1.0 wrap=none text_class=T051";
            tag: "br" "\n";
            tag: "ps" "ps";
            tag: "tab" "\t";
         }
         style { name: "btn_base_style1_pressed";
            base: "font=Tizen:style=Regular font_size="BUTTON_TEXT_STYLE1_FONT_SIZE_INC" align=center color=#FFFFFF color_class=T051P ellipsis=1.0 wrap=none text_class=T051P";
            tag: "br" "\n";
            tag: "ps" "ps";
            tag: "tab" "\t";
         }
         style { name: "btn_base_style1_dim";
            base: "font=Tizen:style=Regular font_size="BUTTON_TEXT_STYLE1_FONT_SIZE_INC" align=center color=#FFFFFF color_class=T051D ellipsis=1.0 wrap=none text_class=T051D";
            tag: "br" "\n";
            tag: "ps" "ps";
            tag: "tab" "\t";
         }
         style { name: "btn_base_style1_focus";
            base: "font=Tizen:style=Regular font_size="BUTTON_TEXT_STYLE1_FONT_SIZE_INC" align=center color=#FFFFFF color_class=T051S ellipsis=1.0 wrap=none text_class=T051S";
            tag: "br" "\n";
            tag: "ps" "ps";
            tag: "tab" "\t";
         }
      }
      script {
         public button_state = BUTTON_STATE_ENABLED;
         public mouse_down = 0;
         public multi_down = 0;
      }
      parts {
         part { name: "left_top_padding";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               min: BUTTON_TEXT_STYLE1_BG_PADDING;
               max: BUTTON_TEXT_STYLE1_BG_PADDING;
               align: 0.0 0.0;
               fixed: 1 1;
            }
         }
         part { name: "right_bottom_padding";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               min: BUTTON_TEXT_STYLE1_BG_PADDING;
               max: BUTTON_TEXT_STYLE1_BG_PADDING;
               align: 1.0 1.0;
               fixed: 1 1;
            }
         }
         part { name: "button_image";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               rel1.to: "left_top_padding";
               rel1.relative: 1.0 1.0;
               rel2.to: "right_bottom_padding";
               rel2.relative: 0.0 0.0;
               color_class: "W011";
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               color_class: "B042";
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color_class: "W011D";
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
            }
         }
         part { name: "button_effect_image";
            scale: 1;
            description { state: "default" 0.0;
               image {
                  normal: "00_button_01_bg_ef.#.png";
               }
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               image.normal: "00_button_01_bg_dim_ef.#.png";
            }
         }
         part { name: "focus_image";
            scale: 1;
            mouse_events: 0;
            repeat_events: 1;
            description { state: "default" 0.0;
               visible: 0;
               rel1.to : "button_image";
               rel2.to : "button_image";
               image {
                  normal: "00_button_01_bg_focus.#.png";
               }
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color_class: "W161";
            }
         }
         part { name: "padding_left_top";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               align: 0.0 0.0;
               rel2.relative: 0.0 0.0;
               min: BUTTON_TEXT_STYLE1_PADDING_MIN_INC;
               fixed: 1 1;
            }
         }
         part { name: "bg";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               min: BUTTON_TEXT_STYLE1_BG_MIN_INC;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               min: BUTTON_TEXT_STYLE1_VISIBLE_BG_MIN_INC;
            }
            description { state: "icononly" 0.0;
               inherit: "default" 0.0;
               min: BUTTON_TEXT_STYLE1_ICONONLY_BG_MIN_INC;
            }
         }
         part { name: "padding_right_bottom";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               align: 1.0 1.0;
               rel1.relative: 1.0 1.0;
               min: BUTTON_TEXT_STYLE1_PADDING_MIN_INC;
               fixed: 1 1;
            }
         }
         part { name: "icon_rect";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               min: 0 0;
               fixed: 1 0;
               rel1 {
                  relative: 1.0 1.0;
                  to: "padding_left_top";
               }
               rel2 {
                  relative: 1.0 0.0;
                  to_x: "padding_left_top";
                  to_y: "padding_right_bottom";
               }
               align: 0.0 0.5;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               min: BUTTON_TEXT_STYLE1_VISIBLE_ICON_RECT_MIN_MAX_INC;
               max: BUTTON_TEXT_STYLE1_VISIBLE_ICON_RECT_MIN_MAX_INC;
            }
            description { state: "icononly" 0.0;
               inherit: "default" 0.0;
            }
         }
         part { name: "padding_after_icon";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0; //when only icon or no icon is there
               align: 0.0 0.0;
               rel1 {
                  relative: 1.0 0.0;
                  to: "icon_rect";
               }
               rel2.to: "icon_rect";
               fixed: 1 0;
               min: 0 0;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               min: BUTTON_TEXT_STYLE1_VISIBLE_PADDING_ICON_TEXT_MIN_INC;
            }
            description { state: "icononly" 0.0;
               inherit: "default" 0.0;
            }
         }
         part { name: "padding_before_text";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0; //when only icon or no icon is there
               align: 1.0 0.5;
               rel1 {
                  relative: 0.0 1.0;
                  to_x: "elm.text";
                  to_y: "padding_left_top";
               }
               rel2 {
                  relative: 0.0 0.0;
                  to_x: "elm.text";
                  to_y: "padding_right_bottom";
               }
               fixed: 1 0;
               min: BUTTON_TEXT_STYLE1_VISIBLE_PADDING_ICON_TEXT_MIN_INC;
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            clip_to: "icon_clipper";
            description { state: "default" 0.0;
               visible: 0;
               align: 0.0 0.5;
               rel1 {
                  relative: 1.0 1.0;
                  to: "padding_left_top";
               }
               rel2 {
                  relative: 1.0 0.0;
                  to_x: "padding_left_top";
                  to_y: "padding_right_bottom";
               }
               fixed: 1 0;
            }
            description { state: "visible" 0.0;
               fixed: 1 0;
               min: BUTTON_TEXT_STYLE1_VISIBLE_ICON_MIN_MAX_INC;
               max: BUTTON_TEXT_STYLE1_VISIBLE_ICON_MIN_MAX_INC;
               align: 1.0 0.5;
               rel1 {
                  relative: 0.0 1.0;
                  to_x: "padding_before_text";
                  to_y: "padding_left_top";
               }
               rel2 {
                  relative: 0.0 0.0;
                  to_x: "padding_before_text";
                  to_y: "padding_right_bottom";
               }
            }
            description { state: "icononly" 0.0;
               min: BUTTON_TEXT_STYLE1_ICONONLY_ICON_MIN_MAX_INC;
               max: BUTTON_TEXT_STYLE1_ICONONLY_ICON_MIN_MAX_INC;
            }
         }
         part { name: "icon_clipper";
            scale: 1;
            type: RECT;
            description { state: "default" 0.0;
               color_class: "F031L1";
            }
            description { state: "pressed" 0.0;
               color_class: "F031L1P";
            }
            description { state: "disabled" 0.0;
               color_class: "F031L1D";
            }
         }
         part { name: "elm.text";
            type: TEXTBLOCK;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               fixed: 1 1;
               rel1 {
                  relative: 1.0 1.0;
                  to_x: "padding_after_icon";
                  to_y: "padding_left_top";
               }
               rel2 {
                  relative: 0.0 0.0;
                  to: "padding_right_bottom";
               }
               text {
                  style: "btn_base_style1";
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
            description { state: "pressed" 0.0;
               inherit: "visible" 0.0;
               text {
                  style: "btn_base_style1_pressed";
               }
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
            }
            description { state: "disabled_visible" 0.0;
               inherit: "visible" 0.0;
               text {
                  style: "btn_base_style1_dim";
               }
            }
            description { state: "focused" 0.0;
               inherit: "visible" 0.0;
               text {
                  style: "btn_base_style1_focus";
               }
            }
         }
         part { name: "over2";
            type: RECT;
            repeat_events: 1;
            ignore_flags: ON_HOLD;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part { name: "over3";
            type: RECT;
            repeat_events: 1;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part { name: "disabler";
            type: RECT;
            description { state: "default" 0.0;
               color: 0 0 0 0;
               visible: 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
      }
      programs {
         program { name: "button_press";
            signal: "mouse,down,1*";
            source: "over2";
            script {
               if ((get_int(multi_down) == 0) && (get_int(mouse_down) == 0))
                 {
                     set_int(mouse_down, 1);
                     run_program(PROGRAM:"button_press2");
                 }
            }
         }
         program { name: "button_press2";
            action: SIGNAL_EMIT "elm,action,press" "";
            after: "button_press_anim";
         }
         program { name: "button_press_anim";
            action: STATE_SET "pressed" 0.0;
            target: "button_image";
            target: "button_effect_image";
            target: "icon_clipper";
            after: "text_press";
         }
         program { name: "text_press";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "visible"))
                 set_state(PART:"elm.text", "pressed", 0.0);
            }
         }
         program { name: "button_unpress";
            signal: "mouse,up,1*";
            source: "over3";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.swallow.content", st, 30, vl);
               if (get_int(mouse_down) == 1)
                 {
                    set_int(mouse_down, 0);
                    if (strcmp(st, "icononly"))
                      {
                         emit("elm,action,default,text,set", "");
                         set_state(PART:"elm.text", "visible", 0.0);
                      }
                    if (get_int(button_state) != BUTTON_STATE_DISABLED)
                      {
                         set_state(PART:"button_image", "default", 0.0);
                         set_state(PART:"button_effect_image", "default", 0.0);
                      }
                    set_state(PART:"icon_clipper", "default", 0.0);
                    run_program(PROGRAM:"button_unpress2");
                 }
            }
         }
         program { name: "button_unpress2";
            action: SIGNAL_EMIT "elm,action,unpress" "";
         }
         program { name: "button_click";
            signal: "mouse,clicked,1";
            source: "over2";
            script {
               if (get_int(multi_down) == 0) {
                 run_program(PROGRAM:"play_sound");
                 run_program(PROGRAM:"button_click2");
               }
            }
         }
         program { name: "play_sound";
            action: RUN_PLUGIN "touch_sound";
         }
         program { name: "button_click2";
            action: SIGNAL_EMIT "elm,action,click" "";
         }
         program { name: "text_show";
            signal: "elm,state,text,visible";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.swallow.content", st, 30, vl);
               if (!strcmp(st, "icononly"))
                 {
                    set_state(PART:"elm.swallow.content", "visible", 0.0);
                    set_state(PART:"icon_rect", "visible", 0.0);
                    set_state(PART:"padding_after_icon", "visible", 0.0);
                    set_state(PART:"bg", "visible", 0.0);
                 }
               if (get_int(button_state) != BUTTON_STATE_DISABLED)
                 set_state(PART:"elm.text", "visible", 0.0);
               else
                 set_state(PART:"elm.text", "disabled_visible", 0.0);
            }
         }
         program { name: "text_hide";
            signal: "elm,state,text,hidden";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.swallow.content", st, 30, vl);
               if (!strcmp(st, "visible"))
                 {
                    set_state(PART:"elm.swallow.content", "icononly", 0.0);
                    set_state(PART:"icon_rect", "icononly", 0.0);
                    set_state(PART:"padding_after_icon", "icononly", 0.0);
                    set_state(PART:"bg", "icononly", 0.0);
                 }
               set_state(PART:"elm.text", "default", 0.0);
            }
         }
         program { name: "icon_show";
            signal: "elm,state,icon,visible";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "visible"))
                 {
                    set_state(PART:"elm.swallow.content", "visible", 0.0);
                    set_state(PART:"icon_rect", "visible", 0.0);
                    set_state(PART:"padding_after_icon", "visible", 0.0);
                    set_state(PART:"bg", "visible", 0.0);
                 }
               else
                 {
                    set_state(PART:"elm.swallow.content", "icononly", 0.0);
                    set_state(PART:"icon_rect", "icononly", 0.0);
                    set_state(PART:"padding_after_icon", "icononly", 0.0);
                    set_state(PART:"bg", "icononly", 0.0);
                 }
            }
         }
         program { name: "icon_hide";
            signal: "elm,state,icon,hidden";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "elm.swallow.content";
            target: "padding_after_icon";
            target: "icon_rect";
            target: "bg";
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "button_image";
            target: "button_effect_image";
            target: "disabler";
            target: "icon_clipper";
            after: "disable_text";
         }
         program { name: "disable_text";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "visible"))
                 set_state(PART:"elm.text", "disabled_visible", 0.0);
               else
                 set_state(PART:"elm.text", "disabled", 0.0);
               set_int(button_state, BUTTON_STATE_DISABLED);
            }
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "button_image";
            target: "button_effect_image";
            target: "icon_clipper";
            target: "disabler";
            after: "enable_text";
         }
         program { name: "enable_text";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "disabled_visible"))
                 set_state(PART:"elm.text", "visible", 0.0);
               else
                 set_state(PART:"elm.text", "default", 0.0);
               set_int(button_state, BUTTON_STATE_ENABLED);
            }
         }
         program { name: "key_press";
            signal: "elm,action,pressed";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               set_state(PART:"button_image", "pressed", 0.0);
               set_state(PART:"button_effect_image", "pressed", 0.0);
               set_state(PART:"icon_clipper", "pressed", 0.0);
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "visible"))
                 set_state(PART:"elm.text", "pressed", 0.0);
            }
         }
         program { name: "key_unpress";
            signal: "elm,action,unpressed";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               set_state(PART:"button_image", "default", 0.0);
               set_state(PART:"button_effect_image", "default", 0.0);
               set_state(PART:"icon_clipper", "default", 0.0);
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "pressed"))
                 set_state(PART:"elm.text", "visible", 0.0);
            }
         }
         program { name: "action_focus";
            signal: "elm,action,focus_highlight,show";
            source: "elm";
            action: STATE_SET "focused" 0.0;
            target: "focus_image";
         }
         program { name: "action_unfocus";
            signal: "elm,action,focus_highlight,hide";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "focus_image";
         }
         program {
            name: "multi_down";
            signal: "elm,action,multi,down";
            source: "elm";
            script {
               set_int(multi_down, 1);
            }
         }
         program {
            name: "multi_up";
            signal: "elm,action,multi,up";
            source: "elm";
            script {
               set_int(multi_down, 0);
            }
         }
      }
   }

//////////////////////////////////////////////////////////////
   group { name: "elm/button/base/style1/auto_expand";
      inherit: "elm/button/base/style1";
      parts {
         part { name: "elm.text";
            type: TEXTBLOCK;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               fixed: 0 0;
               rel1 {
                  relative: 1.0 1.0;
                  to_x: "padding_after_icon";
                  to_y: "padding_left_top";
               }
               rel2 {
                  relative: 0.0 0.0;
                  to: "padding_right_bottom";
               }
               text {
                  style: "btn_base_style1";
                  min: 1 0;
                  max: 1 0;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
            description { state: "pressed" 0.0;
               inherit: "visible" 0.0;
               text {
                  style: "btn_base_style1_pressed";
               }
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
            }
            description { state: "disabled_visible" 0.0;
               inherit: "visible" 0.0;
               text {
                  style: "btn_base_style1_dim";
               }
            }
            description { state: "focused" 0.0;
               inherit: "visible" 0.0;
               text {
                  style: "btn_base_style1_focus";
               }
            }
         }
      }
   }

//////////////////////////////////////////////////////////////////////////////////////
   group { name: "elm/button/base/datetime/ampm";
      alias: "elm/button/base/datetime_ampm";
      inherit: "elm/button/base/style1/auto_expand";
      styles{
         style { name: "btn_base_ampm";
            base: "font=Tizen:style=Regular font_size="BUTTON_DATETIME_AMPM_TEXT_FONT_SIZE_INC" align=center color=#FFFFFF color_class=T1232 ellipsis=1.0 wrap=none text_class=T1232";
            tag: "br" "\n";
            tag: "ps" "ps";
            tag: "tab" "\t";
         }
         style { name: "btn_base_ampm_pressed";
            base: "font=Tizen:style=Regular font_size="BUTTON_DATETIME_AMPM_TEXT_FONT_SIZE_INC" align=center color=#FFFFFF color_class=T1232P ellipsis=1.0 wrap=none text_class=T1232";
            tag: "br" "\n";
            tag: "ps" "ps";
            tag: "tab" "\t";
         }
         style { name: "btn_base_ampm_dim";
            base: "font=Tizen:style=Regular font_size="BUTTON_DATETIME_AMPM_TEXT_FONT_SIZE_INC" align=center color=#FFFFFF color_class=T1232D ellipsis=1.0 wrap=none text_class=T1232";
            tag: "br" "\n";
            tag: "ps" "ps";
            tag: "tab" "\t";
         }
         style { name: "btn_base_ampm_focus";
            base: "font=Tizen:style=Regular font_size="BUTTON_DATETIME_AMPM_TEXT_FONT_SIZE_INC" align=center color=#FFFFFF color_class=T1232F ellipsis=1.0 wrap=none text_class=T1232";
            tag: "br" "\n";
            tag: "ps" "ps";
            tag: "tab" "\t";
         }
      }
      parts {
         part { name: "button_image";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               min: BUTTON_DATETIME_AMPM_BG_MIN_INC;
               max: BUTTON_DATETIME_AMPM_BG_MIN_INC;
               color_class: "W011";
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               color_class: "B042";
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color_class: "W011D";
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
            }
         }
         part { name: "button_effect_image";
            scale: 1;
            description { state: "default" 0.0;
               image {
                  normal: "00_button_01_bg_ef.#.png";
               }
               min: BUTTON_DATETIME_AMPM_BG_MIN_INC;
               max: BUTTON_DATETIME_AMPM_BG_MIN_INC;
               visible: 0;
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               image.normal: "00_button_01_bg_dim_ef.#.png";
            }
         }
         part { name: "focus_image";
            scale: 1;
            mouse_events: 0;
            repeat_events: 1;
            description { state: "default" 0.0;
               visible: 0;
               rel1.to : "button_image";
               rel2.to : "button_image";
               image {
                  normal: "00_button_01_bg_focus.#.png";
               }
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color_class: "W161";
            }
         }
         part { name: "bg";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               min: 0 0;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               min: BUTTON_DATETIME_AMPM_BG_MIN_INC;
            }
            description { state: "icononly" 0.0;
               inherit: "default" 0.0;
            }
         }
         part { name: "elm.text";
            type: TEXTBLOCK;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               fixed: 1 1;
               text {
                  style: "btn_base_ampm";
                  min: 1 1;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
            description { state: "pressed" 0.0;
               inherit: "visible" 0.0;
               text {
                  style: "btn_base_ampm_pressed";
               }
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
            }
            description { state: "disabled_visible" 0.0;
               inherit: "visible" 0.0;
               text {
                  style: "btn_base_ampm_dim";
               }
            }
            description { state: "focused" 0.0;
               inherit: "visible" 0.0;
               text {
                  style: "btn_base_ampm_focus";
               }
            }
         }
      }
}

//////////////////////////////////////////////////////////////////////////////////////
   group { name: "elm/button/base/sweep";
      inherit: "elm/button/base/style1";
      styles{
         style { name: "btn_base_sweep";
            base: "font=Tizen:style=Regular font_size="BUTTON_TEXT_STYLE1_FONT_SIZE_INC" align=center color=#FFFFFF color_class=T051 ellipsis=1.0 wrap=none text_class=T051";
            tag: "br" "\n";
            tag: "ps" "ps";
            tag: "tab" "\t";
         }
         style { name: "btn_base_sweep_pressed";
            base: "font=Tizen:style=Regular font_size="BUTTON_TEXT_STYLE1_FONT_SIZE_INC" align=center color=#FFFFFF color_class=T051P ellipsis=1.0 wrap=none text_class=T051P";
            tag: "br" "\n";
            tag: "ps" "ps";
            tag: "tab" "\t";
         }
         style { name: "btn_base_sweep_dim";
            base: "font=Tizen:style=Regular font_size="BUTTON_TEXT_STYLE1_FONT_SIZE_INC" align=center color=#FFFFFF color_class=T051D ellipsis=1.0 wrap=none text_class=T051D";
            tag: "br" "\n";
            tag: "ps" "ps";
            tag: "tab" "\t";
         }
         style { name: "btn_base_sweep_focus";
            base: "font=Tizen:style=Regular font_size="BUTTON_TEXT_STYLE1_FONT_SIZE_INC" align=center color=#FFFFFF color_class=T051S ellipsis=1.0 wrap=none text_class=T051S";
            tag: "br" "\n";
            tag: "ps" "ps";
            tag: "tab" "\t";
         }
      }
      parts {
         part { name: "elm.text";
            type: TEXTBLOCK;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               fixed: 1 1;
               rel1 {
                  relative: 1.0 1.0;
                  to_x: "padding_after_icon";
                  to_y: "padding_left_top";
               }
               rel2 {
                  relative: 0.0 0.0;
                  to: "padding_right_bottom";
               }
               text {
                  style: "btn_base_sweep";
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
            description { state: "pressed" 0.0;
               inherit: "visible" 0.0;
               text {
                  style: "btn_base_sweep_pressed";
               }
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
            }
            description { state: "disabled_visible" 0.0;
               inherit: "visible" 0.0;
               text {
                  style: "btn_base_sweep_dim";
               }
            }
            description { state: "focused" 0.0;
               inherit: "visible" 0.0;
               text {
                  style: "btn_base_sweep_focus";
               }
            }
         }
      }
   }

///////////////////////////////////////////////////////////////////////////////////////
   group { name: "elm/button/base/style1/delete";
      inherit: "elm/button/base/style1";
      styles{
         style { name: "btn_base_style1_delete";
            base: "font=Tizen:style=Regular font_size="BUTTON_TEXT_STYLE1_FONT_SIZE_INC" align=center color="BUTTON_TEXT_STYLE1_DELETE_TEXTBLOCK_NORMAL_COLOR_INC" ellipsis=1.0 wrap=none text_class=tizen";
            tag: "br" "\n";
            tag: "ps" "ps";
            tag: "tab" "\t";
         }
         style { name: "btn_base_style1_delete_pressed";
            base: "font=Tizen:style=Regular font_size="BUTTON_TEXT_STYLE1_FONT_SIZE_INC" align=center color="BUTTON_TEXT_STYLE1_DELETE_TEXTBLOCK_PRESSED_COLOR_INC" ellipsis=1.0 wrap=none text_class=tizen";
            tag: "br" "\n";
            tag: "ps" "ps";
            tag: "tab" "\t";
         }
         style { name: "btn_base_style1_delete_dim";
            base: "font=Tizen:style=Regular font_size="BUTTON_TEXT_STYLE1_FONT_SIZE_INC" align=center color="BUTTON_TEXT_STYLE1_DELETE_TEXTBLOCK_DISABLED_COLOR_INC" ellipsis=1.0 wrap=none text_class=tizen";
            tag: "br" "\n";
            tag: "ps" "ps";
            tag: "tab" "\t";
         }
         style { name: "btn_base_style1_delete_focus";
            base: "font=Tizen:style=Regular font_size="BUTTON_TEXT_STYLE1_FONT_SIZE_INC" align=center color="BUTTON_TEXT_STYLE1_DELETE_TEXTBLOCK_FOCUSED_COLOR_INC" ellipsis=1.0 wrap=none text_class=tizen";
            tag: "br" "\n";
            tag: "ps" "ps";
            tag: "tab" "\t";
         }
      }
      parts {
         part { name: "elm.text";
            type: TEXTBLOCK;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               fixed: 1 1;
               rel1 {
                  relative: 1.0 1.0;
                  to_x: "padding_after_icon";
                  to_y: "padding_left_top";
               }
               rel2 {
                  relative: 0.0 0.0;
                  to: "padding_right_bottom";
               }
               text {
                  style: "btn_base_style1_delete";
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
            description { state: "pressed" 0.0;
               inherit: "visible" 0.0;
               text {
                  style: "btn_base_style1_delete_pressed";
               }
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
            }
            description { state: "disabled_visible" 0.0;
               inherit: "visible" 0.0;
               text {
                  style: "btn_base_style1_delete_dim";
               }
            }
            description { state: "focused" 0.0;
               inherit: "visible" 0.0;
               text {
                  style: "btn_base_style1_delete_focus";
               }
            }
         }
      }
   }

//////////////////////////////////////////////////////////////////////////////////////
   group { name: "elm/button/base/sweep/delete";
      inherit: "elm/button/base/style1/delete";
      styles{
         style { name: "btn_base_sweep_delete";
            base: "font=Tizen:style=Regular font_size="BUTTON_TEXT_STYLE1_FONT_SIZE_INC" align=center color="BUTTON_TEXT_STYLE1_DELETE_TEXTBLOCK_NORMAL_COLOR_INC" ellipsis=1.0 wrap=none text_class=tizen";
            tag: "br" "\n";
            tag: "ps" "ps";
            tag: "tab" "\t";
         }
         style { name: "btn_base_sweep_delete_pressed";
            base: "font=Tizen:style=Regular font_size="BUTTON_TEXT_STYLE1_FONT_SIZE_INC" align=center color="BUTTON_TEXT_STYLE1_DELETE_TEXTBLOCK_PRESSED_COLOR_INC" ellipsis=1.0 wrap=none text_class=tizen";
            tag: "br" "\n";
            tag: "ps" "ps";
            tag: "tab" "\t";
         }
         style { name: "btn_base_sweep_delete_dim";
            base: "font=Tizen:style=Regular font_size="BUTTON_TEXT_STYLE1_FONT_SIZE_INC" align=center color="BUTTON_TEXT_STYLE1_DELETE_TEXTBLOCK_DISABLED_COLOR_INC" ellipsis=1.0 wrap=none text_class=tizen";
            tag: "br" "\n";
            tag: "ps" "ps";
            tag: "tab" "\t";
         }
         style { name: "btn_base_sweep_delete_focus";
            base: "font=Tizen:style=Regular font_size="BUTTON_TEXT_STYLE1_FONT_SIZE_INC" align=center color="BUTTON_TEXT_STYLE1_DELETE_TEXTBLOCK_FOCUSED_COLOR_INC" ellipsis=1.0 wrap=none text_class=tizen";
            tag: "br" "\n";
            tag: "ps" "ps";
            tag: "tab" "\t";
         }
      }
      parts {
         part { name: "elm.text";
            type: TEXTBLOCK;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               fixed: 1 1;
               rel1 {
                  relative: 1.0 1.0;
                  to_x: "padding_after_icon";
                  to_y: "padding_left_top";
               }
               rel2 {
                  relative: 0.0 0.0;
                  to: "padding_right_bottom";
               }
               text {
                  style: "btn_base_sweep_delete";
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
            description { state: "pressed" 0.0;
               inherit: "visible" 0.0;
               text {
                  style: "btn_base_sweep_delete_pressed";
               }
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
            }
            description { state: "disabled_visible" 0.0;
               inherit: "visible" 0.0;
               text {
                  style: "btn_base_sweep_delete_dim";
               }
            }
            description { state: "focused" 0.0;
               inherit: "visible" 0.0;
               text {
                  style: "btn_base_sweep_delete_focus";
               }
            }
         }
      }
   }

///////////////////////////////////////////////////////////////////////////////////////
   group { name: "elm/button/base/search_button";
      alias: "elm/button/base/searchbar/default";
      data {
         item: "focus_highlight" "on";
      }
      styles{
         style { name: "btn_base_search";
            base: "font=Tizen:style=Regular font_size="BUTTON_SEARCH_BUTTON_TEXT_FONT_SIZE_INC" align=center color=#FFFFFF color_class=T107 wrap=none text_class=T107";
            tag: "br" "\n";
            tag: "ps" "ps";
            tag: "tab" "\t";
         }
         style { name: "btn_base_search_pressed";
            base: "font=Tizen:style=Regular font_size="BUTTON_SEARCH_BUTTON_TEXT_FONT_SIZE_INC" align=center color=#FFFFFF color_class=T107P wrap=none text_class=T107P";
            tag: "br" "\n";
            tag: "ps" "ps";
            tag: "tab" "\t";
         }
         style { name: "btn_base_search_dim";
            base: "font=Tizen:style=Regular font_size="BUTTON_SEARCH_BUTTON_TEXT_FONT_SIZE_INC" align=center color=#FFFFFF color_class=T107D wrap=none text_class=T107D";
            tag: "br" "\n";
            tag: "ps" "ps";
            tag: "tab" "\t";
         }
         //FIXME: Focused color code not provided in v0.5.Change once provided
         style { name: "btn_base_search_focus";
            base: "font=Tizen:style=Regular font_size="BUTTON_SEARCH_BUTTON_TEXT_FONT_SIZE_INC" align=center color=#FFFFFF color_class=T107 ellipsis=1.0 wrap=none text_class=T107";
            tag: "br" "\n";
            tag: "ps" "ps";
            tag: "tab" "\t";
         }
      }
      images {
         image: "00_button_01_bg_focus.#.png" COMP;
      }
      script {
         public button_state = BUTTON_STATE_ENABLED;
         public mouse_down = 0;
         public multi_down = 0;
      }
      parts {
         part { name: "button_image";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               color_class: "B0215P";
               visible: 1;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
            }
         }
         part { name: "focus_image";
            scale: 1;
            mouse_events: 0;
            repeat_events: 1;
            description { state: "default" 0.0;
               visible: 0;
               rel1.to : "button_image";
               rel2.to : "button_image";
               image {
                  normal: "00_button_01_bg_focus.#.png";
               }
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color_class: "W161";
            }
         }
         part { name: "padding_left_top";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               align: 0.0 0.0;
               rel2.relative: 0.0 0.0;
               min: BUTTON_TEXT_STYLE1_PADDING_MIN_INC;
               fixed: 1 1;
            }
         }
         part { name: "bg";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               min: BUTTON_SEARCH_BUTTON_BG_MIN_INC;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               min: BUTTON_SEARCH_BUTTON_VISIBLE_BG_MIN_INC;
            }
            description { state: "icononly" 0.0;
               inherit: "default" 0.0;
               min: BUTTON_SEARCH_BUTTON_ICONONLY_BG_MIN_INC;
            }
         }
         part { name: "padding_right_bottom";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               align: 1.0 1.0;
               rel1.relative: 1.0 1.0;
               min: BUTTON_TEXT_STYLE1_PADDING_MIN_INC;
               fixed: 1 1;
            }
         }
         part { name: "icon_padding_left_top";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               align: 0.0 0.0;
               rel2.relative: 0.0 0.0;
               min: BUTTON_SEARCH_BUTTON_ICON_LEFT_TOP_PADDING_SIZE_INC;
               fixed: 1 1;
            }
         }
         part { name: "icon_padding_right_bottom";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               align: 1.0 1.0;
               rel1.relative: 1.0 1.0;
               min: BUTTON_SEARCH_BUTTON_ICON_RIGHT_BOTTOM_PADDING_SIZE_INC;
               fixed: 1 1;
            }
         }
         part { name: "icon_rect";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               min: 0 0;
               fixed: 1 0;
               rel1 {
                  relative: 1.0 1.0;
                  to: "padding_left_top";
               }
               rel2 {
                  relative: 1.0 0.0;
                  to_x: "padding_left_top";
                  to_y: "padding_right_bottom";
               }
               align: 0.0 0.5;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               min: BUTTON_TEXT_STYLE1_VISIBLE_ICON_RECT_MIN_MAX_INC;
               max: BUTTON_TEXT_STYLE1_VISIBLE_ICON_RECT_MIN_MAX_INC;
            }
            description { state: "icononly" 0.0;
               inherit: "default" 0.0;
            }
         }
         part { name: "padding_after_icon";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0; //when only icon or no icon is there
               align: 0.0 0.0;
               rel1 {
                  relative: 1.0 0.0;
                  to: "icon_rect";
               }
               rel2.to: "icon_rect";
               fixed: 1 0;
               min: 0 0;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               min: BUTTON_TEXT_STYLE1_VISIBLE_PADDING_ICON_TEXT_MIN_INC;
            }
            description { state: "icononly" 0.0;
               inherit: "default" 0.0;
            }
         }
         part { name: "padding_before_text";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0; //when only icon or no icon is there
               align: 1.0 0.5;
               rel1 {
                  relative: 0.0 1.0;
                  to_x: "elm.text";
                  to_y: "padding_left_top";
               }
               rel2 {
                  relative: 0.0 0.0;
                  to_x: "elm.text";
                  to_y: "padding_right_bottom";
               }
               fixed: 1 0;
               min: BUTTON_TEXT_STYLE1_VISIBLE_PADDING_ICON_TEXT_MIN_INC;
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            clip_to: "icon_clipper";
            description { state: "default" 0.0;
               visible: 0;
               align: 0.0 0.5;
               rel1 {
                  relative: 1.0 1.0;
                  to: "icon_padding_left_top";
               }
               rel2 {
                  relative: 1.0 0.0;
                  to_x: "icon_padding_left_top";
                  to_y: "icon_padding_right_bottom";
               }
               fixed: 1 0;
            }
            description { state: "visible" 0.0;
               fixed: 1 0;
               min: BUTTON_TEXT_STYLE1_VISIBLE_ICON_MIN_MAX_INC;
               max: BUTTON_TEXT_STYLE1_VISIBLE_ICON_MIN_MAX_INC;
               align: 1.0 0.5;
               rel1 {
                  relative: 0.0 1.0;
                  to_x: "padding_before_text";
                  to_y: "padding_left_top";
               }
               rel2 {
                  relative: 0.0 0.0;
                  to_x: "padding_before_text";
                  to_y: "padding_right_bottom";
               }
            }
            description { state: "icononly" 0.0;
               min: BUTTON_TEXT_STYLE1_ICONONLY_ICON_MIN_MAX_INC;
               max: BUTTON_TEXT_STYLE1_ICONONLY_ICON_MIN_MAX_INC;
               rel1 {
                  relative: 1.0 1.0;
                  to: "icon_padding_left_top";
               }
               rel2 {
                  relative: 0.0 0.0;
                  to: "icon_padding_right_bottom";
               }
            }
         }
         part { name: "icon_clipper";
            scale: 1;
            type: RECT;
            description { state: "default" 0.0;
               color_class: "F043i";
            }
            description { state: "pressed" 0.0;
               color_class: "F043iP";
            }
            description { state: "disabled" 0.0;
               color_class: "F043iD";
            }
         }
         part { name: "elm.text";
            type: TEXTBLOCK;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 0 0;
               visible: 0;
               rel1 {
                  relative: 1.0 1.0;
                  to_x: "padding_after_icon";
                  to_y: "padding_left_top";
               }
               rel2 {
                  relative: 0.0 0.0;
                  to: "padding_right_bottom";
               }
               text {
                  style: "btn_base_search";
                  min: 0 0;
                  max: 1 0;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
            description { state: "pressed" 0.0;
               inherit: "visible" 0.0;
               text {
                  style: "btn_base_search_pressed";
               }
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
            }
            description { state: "disabled_visible" 0.0;
               inherit: "visible" 0.0;
               text {
                  style: "btn_base_search_dim";
               }
            }
            description { state: "focused" 0.0;
               inherit: "visible" 0.0;
               text {
                  style: "btn_base_search_focus";
               }
            }
         }
         part { name: "over2";
            type: RECT;
            repeat_events: 1;
            ignore_flags: ON_HOLD;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part { name: "over3";
            type: RECT;
            repeat_events: 1;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part { name: "disabler";
            type: RECT;
            description { state: "default" 0.0;
               color: 0 0 0 0;
               visible: 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
      }
      programs {
         program { name: "button_press";
            signal: "mouse,down,1*";
            source: "over2";
            script {
               if ((get_int(multi_down) == 0) && (get_int(mouse_down) == 0))
                 {
                     set_int(mouse_down, 1);
                     run_program(PROGRAM:"button_press2");
                 }
            }
         }
         program { name: "button_press2";
            action: SIGNAL_EMIT "elm,action,press" "";
            after: "button_press_anim";
         }
         program { name: "button_press_anim";
            action: STATE_SET "pressed" 0.0;
            target: "button_image";
            target: "icon_clipper";
            after: "text_press";
         }
         program { name: "text_press";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "visible"))
                 set_state(PART:"elm.text", "pressed", 0.0);
            }
         }
         program { name: "button_unpress";
            signal: "mouse,up,1*";
            source: "over3";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.swallow.content", st, 30, vl);
               if (get_int(mouse_down) == 1)
                 {
                    set_int(mouse_down, 0);
                    if (strcmp(st, "icononly"))
                      {
                         emit("elm,action,default,text,set", "");
                         set_state(PART:"elm.text", "visible", 0.0);
                      }
                    if (get_int(button_state) != BUTTON_STATE_DISABLED)
                      {
                         set_state(PART:"button_image", "default", 0.0);
                      }
                    set_state(PART:"icon_clipper", "default", 0.0);
                    run_program(PROGRAM:"button_unpress2");
                 }
            }
         }
         program { name: "button_unpress2";
            action: SIGNAL_EMIT "elm,action,unpress" "";
         }
         program { name: "button_click";
            signal: "mouse,clicked,1";
            source: "over2";
            script {
               if (get_int(multi_down) == 0) {
                 run_program(PROGRAM:"play_sound");
                 run_program(PROGRAM:"button_click2");
               }
            }
         }
         program { name: "play_sound";
            action: RUN_PLUGIN "touch_sound";
         }
         program { name: "button_click2";
            action: SIGNAL_EMIT "elm,action,click" "";
         }
         program { name: "text_show";
            signal: "elm,state,text,visible";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.swallow.content", st, 30, vl);
               if (!strcmp(st, "icononly"))
                 {
                    set_state(PART:"elm.swallow.content", "visible", 0.0);
                    set_state(PART:"icon_rect", "visible", 0.0);
                    set_state(PART:"padding_after_icon", "visible", 0.0);
                    set_state(PART:"bg", "visible", 0.0);
                 }
               if (get_int(button_state) != BUTTON_STATE_DISABLED)
                 set_state(PART:"elm.text", "visible", 0.0);
               else
                 set_state(PART:"elm.text", "disabled_visible", 0.0);
            }
         }
         program { name: "text_hide";
            signal: "elm,state,text,hidden";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.swallow.content", st, 30, vl);
               if (!strcmp(st, "visible"))
                 {
                    set_state(PART:"elm.swallow.content", "icononly", 0.0);
                    set_state(PART:"icon_rect", "icononly", 0.0);
                    set_state(PART:"padding_after_icon", "icononly", 0.0);
                    set_state(PART:"bg", "icononly", 0.0);
                 }
               set_state(PART:"elm.text", "default", 0.0);
            }
         }
         program { name: "icon_show";
            signal: "elm,state,icon,visible";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "visible"))
                 {
                    set_state(PART:"elm.swallow.content", "visible", 0.0);
                    set_state(PART:"icon_rect", "visible", 0.0);
                    set_state(PART:"padding_after_icon", "visible", 0.0);
                    set_state(PART:"bg", "visible", 0.0);
                 }
               else
                 {
                    set_state(PART:"elm.swallow.content", "icononly", 0.0);
                    set_state(PART:"icon_rect", "icononly", 0.0);
                    set_state(PART:"padding_after_icon", "icononly", 0.0);
                    set_state(PART:"bg", "icononly", 0.0);
                 }
            }
         }
         program { name: "icon_hide";
            signal: "elm,state,icon,hidden";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "elm.swallow.content";
            target: "padding_after_icon";
            target: "icon_rect";
            target: "bg";
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "button_image";
            target: "disabler";
            target: "icon_clipper";
            after: "disable_text";
         }
         program { name: "disable_text";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "visible"))
                 set_state(PART:"elm.text", "disabled_visible", 0.0);
               else
                 set_state(PART:"elm.text", "disabled", 0.0);
               set_int(button_state, BUTTON_STATE_DISABLED);
            }
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "button_image";
            target: "icon_clipper";
            target: "disabler";
            after: "enable_text";
         }
         program { name: "enable_text";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "disabled_visible"))
                 set_state(PART:"elm.text", "visible", 0.0);
               else
                 set_state(PART:"elm.text", "default", 0.0);
               set_int(button_state, BUTTON_STATE_ENABLED);
            }
         }
         program { name: "key_press";
            signal: "elm,action,pressed";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               set_state(PART:"button_image", "pressed", 0.0);
               set_state(PART:"icon_clipper", "pressed", 0.0);
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "visible"))
                 set_state(PART:"elm.text", "pressed", 0.0);
            }
         }
         program { name: "key_unpress";
            signal: "elm,action,unpressed";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               set_state(PART:"button_image", "default", 0.0);
               set_state(PART:"icon_clipper", "default", 0.0);
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "pressed"))
                 set_state(PART:"elm.text", "visible", 0.0);
            }
         }
         program { name: "action_focus";
            signal: "elm,action,focus_highlight,show";
            source: "elm";
            action: STATE_SET "focused" 0.0;
            target: "focus_image";
         }
         program { name: "action_unfocus";
            signal: "elm,action,focus_highlight,hide";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "focus_image";
         }
         program {
            name: "multi_down";
            signal: "elm,action,multi,down";
            source: "elm";
            script {
               set_int(multi_down, 1);
            }
         }
         program {
            name: "multi_up";
            signal: "elm,action,multi,up";
            source: "elm";
            script {
               set_int(multi_down, 0);
            }
         }
      }
   }

///////////////////////////////////////////////////////////////////////////////////////
   group { name: "elm/button/base/popup";
      alias: "elm/button/base/popup_button/default";
      data {
         item: "focus_highlight" "on";
      }
      images {
         image: "00_popup_button_focus.#.png" COMP;
      }
      styles{
         style { name: "btn_base_popup_button";
            base: "font=Tizen:style=Regular font_size="BUTTON_POPUP_TEXT_FONT_SIZE_INC" align=center color=#FFFFFF color_class=T124 ellipsis=1.0 wrap=none text_class=T124";
            tag: "br" "\n";
            tag: "ps" "ps";
            tag: "tab" "\t";
         }
         style { name: "btn_base_popup_button_pressed";
            base: "font=Tizen:style=Bold font_size="BUTTON_POPUP_TEXT_FONT_SIZE_INC" align=center color=#FFFFFF color_class=T124P ellipsis=1.0 wrap=none text_class=T124P";
            tag: "br" "\n";
            tag: "ps" "ps";
            tag: "tab" "\t";
         }
         style { name: "btn_base_popup_button_dim";
            base: "font=Tizen:style=Bold font_size="BUTTON_POPUP_TEXT_FONT_SIZE_INC" align=center color=#FFFFFF color_class=T124D ellipsis=1.0 wrap=none text_class=T124D";
            tag: "br" "\n";
            tag: "ps" "ps";
            tag: "tab" "\t";
         }
         style { name: "btn_base_popup_button_focus";
            base: "font=Tizen:style=Bold font_size="BUTTON_POPUP_TEXT_FONT_SIZE_INC" align=center color=#FFFFFF color_class=T124 ellipsis=1.0 wrap=none text_class=T124";
            tag: "br" "\n";
            tag: "ps" "ps";
            tag: "tab" "\t";
         }
      }
      script {
         public button_state = BUTTON_STATE_ENABLED;
         public mouse_down = 0;
         public multi_down = 0;
      }
      parts {
         part { name: "button_image";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               min: BUTTON_POPUP_BG_NORMAL_MIN_INC;
               color_class: "B065L4";
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               color_class: "B065L4P";
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
            }
         }
         part { name: "focus_image";
            scale: 1;
            mouse_events: 0;
            repeat_events: 1;
            description { state: "default" 0.0;
               visible: 0;
               rel1.to : "button_image";
               rel2.to : "button_image";
               image {
                  normal: "00_popup_button_focus.#.png";
               }
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color_class: "W161";
            }
         }
         part { name: "padding_left_top";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               align: 0.0 0.0;
               rel2.relative: 0.0 0.0;
               min: BUTTON_POPUP_PADDING_MIN_INC;
               fixed: 1 1;
            }
         }
         part { name: "padding_right_bottom";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               align: 1.0 0.0;
               rel1.relative: 1.0 1.0;
               min: BUTTON_POPUP_PADDING_MIN_INC;
               fixed: 1 1;
            }
         }
         part { name: "padding_icon_text";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0; //when only icon or no icon is there
               align: 0.0 0.0;
               rel1 {
                  relative: 1.0 0.0;
                  to: "elm.swallow.content";
               }
               rel2.to: "elm.swallow.content";
               fixed: 1 0;
               min: 0 0;
            }
            description { state: "icononly" 0.0;
               inherit: "default" 0.0;
            }
            description { state: "visible" 0.0; //when icon is visible
               inherit: "default" 0.0;
               min: BUTTON_POPUP_PADDING_ICON_TEXT_VISIBLE_MIN_INC;
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            clip_to: "icon_clipper";
            description { state: "default" 0.0;
               visible: 0;
               align: 0.0 0.5;
               rel1 {
                  relative: 1.0 1.0;
                  to: "padding_left_top";
               }
               rel2 {
                  relative: 1.0 0.0;
                  to_x: "padding_left_top";
                  to_y: "padding_right_bottom";
               }
               fixed: 1 0;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               fixed: 1 0;
               visible: 1;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
            }
            description { state: "icononly" 0.0;
               inherit: "default" 0.0;
               min: BUTTON_POPUP_ICON_ICONONLY_MIN_INC;
               visible: 1;
               align: 0.5 0.5;
            }
         }
         part { name: "icon_clipper";
            scale: 1;
            type: RECT;
            description { state: "default" 0.0;
               color_class: "F031L1";
            }
            description { state: "pressed" 0.0;
               color_class: "F031L1P";
            }
            description { state: "disabled" 0.0;
               color_class: "F031L1D";
            }
         }
         part { name: "elm.text";
            type: TEXTBLOCK;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               fixed: 1 1;
               rel1 {
                  relative: 1.0 1.0;
                  to_x: "padding_icon_text";
                  to_y: "padding_left_top";
               }
               rel2 {
                  relative: 0.0 0.0;
                  to: "padding_right_bottom";
               }
               text {
                  style: "btn_base_popup_button";
                  min: 0 0;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
            description { state: "pressed" 0.0;
               inherit: "visible" 0.0;
               text {
                  style: "btn_base_popup_button_pressed";
                  min: 0 0;
               }
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
            }
            description { state: "disabled_visible" 0.0;
               inherit: "visible" 0.0;
               text {
                  style: "btn_base_popup_button_dim";
                  min: 0 0;
               }
            }
            description { state: "focused" 0.0;
               inherit: "visible" 0.0;
               text {
                  style: "btn_base_popup_button_focus";
                  min: 0 0;
               }
            }
         }
         part { name: "over2";
            type: RECT;
            repeat_events: 1;
            ignore_flags: ON_HOLD;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part { name: "over3";
            type: RECT;
            repeat_events: 1;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part { name: "disabler";
            type: RECT;
            description { state: "default" 0.0;
               color: 0 0 0 0;
               visible: 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
      }
      programs {
         program { name: "button_press";
            signal: "mouse,down,1*";
            source: "over2";
            script {
               if ((get_int(multi_down) == 0) && (get_int(mouse_down) == 0))
                 {
                     set_int(mouse_down, 1);
                     run_program(PROGRAM:"button_press2");
                 }
            }
         }
         program { name: "button_press2";
            action: SIGNAL_EMIT "elm,action,press" "";
            after: "button_press_anim";
         }
         program { name: "button_press_anim";
            action: STATE_SET "pressed" 0.0;
            target: "button_image";
            target: "icon_clipper";
            after: "text_press";
         }
         program { name: "text_press";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "visible"))
                 set_state(PART:"elm.text", "pressed", 0.0);
            }
         }
         program { name: "button_unpress";
            signal: "mouse,up,1*";
            source: "over3";
            script {
               new st[31];
               new Float:vl;
               if (get_int(mouse_down) == 1) {
                 set_int(mouse_down, 0);
                 get_state(PART:"elm.swallow.content", st, 30, vl);
                 if (strcmp(st, "icononly"))
                   {
                      emit("elm,action,default,text,set", "");
                      set_state(PART:"elm.text", "visible", 0.0);
                   }
                 if (get_int(button_state) != BUTTON_STATE_DISABLED)
                   set_state(PART:"button_image", "default", 0.0);
                 set_state(PART:"icon_clipper", "default", 0.0);
                 run_program(PROGRAM:"button_unpress2");
               }
            }
         }
         program { name: "button_unpress2";
            action: SIGNAL_EMIT "elm,action,unpress" "";
         }
         program { name: "key_press";
            signal: "elm,action,pressed";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               set_state(PART:"button_image", "pressed", 0.0);
               set_state(PART:"icon_clipper", "pressed", 0.0);
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "visible"))
                 set_state(PART:"elm.text", "pressed", 0.0);
            }
         }
         program { name: "key_unpress";
            signal: "elm,action,unpressed";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               set_state(PART:"button_image", "default", 0.0);
               set_state(PART:"icon_clipper", "default", 0.0);
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "pressed"))
                 set_state(PART:"elm.text", "visible", 0.0);
            }
         }
         program { name: "button_click";
            signal: "mouse,clicked,1";
            source: "over2";
            script {
               if (get_int(multi_down) == 0) {
                 run_program(PROGRAM:"play_sound");
                 run_program(PROGRAM:"button_click2");
               }
            }
         }
         program { name: "play_sound";
            action: RUN_PLUGIN "touch_sound";
         }
         program { name: "button_click2";
            action: SIGNAL_EMIT "elm,action,click" "";
         }
         program { name: "text_show";
            signal: "elm,state,text,visible";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.swallow.content", st, 30, vl);
               if (!strcmp(st, "icononly"))
                 {
                    set_state(PART:"elm.swallow.content", "visible", 0.0);
                    set_state(PART:"padding_icon_text", "visible", 0.0);
                 }
               if (get_int(button_state) != BUTTON_STATE_DISABLED)
                 set_state(PART:"elm.text", "visible", 0.0);
               else
                 set_state(PART:"elm.text", "disabled_visible", 0.0);
            }
         }
         program { name: "text_hide";
            signal: "elm,state,text,hidden";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.swallow.content", st, 30, vl);
               if (!strcmp(st, "visible"))
                 {
                    set_state(PART:"elm.swallow.content", "icononly", 0.0);
                    set_state(PART:"padding_icon_text", "icononly", 0.0);
                 }
               set_state(PART:"elm.text", "default", 0.0);
            }
         }
         program { name: "icon_show";
            signal: "elm,state,icon,visible";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "visible"))
                 {
                    set_state(PART:"elm.swallow.content", "visible", 0.0);
                    set_state(PART:"padding_icon_text", "visible", 0.0);
                 }
               else
                 {
                    set_state(PART:"elm.swallow.content", "icononly", 0.0);
                    set_state(PART:"padding_icon_text", "icononly", 0.0);
                 }
            }
         }
         program { name: "icon_hide";
            signal: "elm,state,icon,hidden";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "elm.swallow.content";
            target: "padding_icon_text";
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "button_image";
            target: "icon_clipper";
            target: "disabler";
            after: "disable_text";
         }
         program { name: "disable_text";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "visible"))
                 set_state(PART:"elm.text", "disabled_visible", 0.0);
               else
                 set_state(PART:"elm.text", "disabled", 0.0);
               set_int(button_state, BUTTON_STATE_DISABLED);
            }
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "button_image";
            target: "icon_clipper";
            target: "disabler";
            after: "enable_text";
         }
         program { name: "enable_text";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "disabled_visible"))
                 set_state(PART:"elm.text", "visible", 0.0);
               else
                 set_state(PART:"elm.text", "default", 0.0);
               set_int(button_state, BUTTON_STATE_ENABLED);
            }
         }
         program { name: "action_focus";
            signal: "elm,action,focus_highlight,show";
            source: "elm";
            action: STATE_SET "focused" 0.0;
            target: "focus_image";
         }
         program { name: "action_unfocus";
            signal: "elm,action,focus_highlight,hide";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "focus_image";
         }
         program {
            name: "multi_down";
            signal: "elm,action,multi,down";
            source: "elm";
            script {
               set_int(multi_down, 1);
            }
         }
         program {
            name: "multi_up";
            signal: "elm,action,multi,up";
            source: "elm";
            script {
               set_int(multi_down, 0);
            }
         }
      }
   }

///////////////////////////////////////////////////////////////////////////////////////
#define BUTTON_CIRCLE_STYLES(style_name, image_normal, image_effect, image_dim_effect, min_width, min_height) \
   group { name: "elm/button/base/"style_name; \
      data { \
         item: "focus_highlight" "on"; \
      } \
      images { \
         image: image_normal COMP; \
         image: image_effect COMP; \
         image: image_dim_effect COMP; \
         image: 00_circle_button_focus.png COMP; \
         image: 00_circle_button_bg.png COMP; \
      } \
      script { \
         public mouse_down = 0; \
         public multi_down = 0; \
      } \
      parts { \
         part { name: "button_image"; \
            type: RECT; \
            scale: 1; \
            description { state: "default" 0.0; \
               min: BUTTON_CIRCLE_STYLE_BG_MIN_MAX_INC; \
               max: BUTTON_CIRCLE_STYLE_BG_MIN_MAX_INC; \
               color: 0 0 0 0; \
            } \
         } \
         part { name: "button_bg"; \
            scale: 1; \
            description { state: "default" 0.0; \
               min: BUTTON_CIRCLE_STYLE_BG_MIN_MAX_INC; \
               max: BUTTON_CIRCLE_STYLE_BG_MIN_MAX_INC; \
               image.normal: "00_circle_button_bg.png"; \
               rel1.to: "button_image"; \
               rel2.to: "button_image"; \
               visible: 0 ; \
            } \
            description { state: "pressed" 0.0; \
               inherit: "default" 0.0; \
               visible: 1 ; \
               color_class: "B042"; \
            } \
          } \
         part { name: "left_top_padding"; \
            scale: 1; \
            type: SPACER; \
            description { state: "default" 0.0; \
               min: BUTTON_CIRCLE_STYLE_LEFT_PADDING_MIN_MAX_INC; \
               max: BUTTON_CIRCLE_STYLE_LEFT_PADDING_MIN_MAX_INC; \
               fixed: 1 1; \
               align: 0.0 0.0; \
               rel1.to: "button_image"; \
               rel2.to: "button_image"; \
            } \
         } \
         part { name: "right_bottom_padding"; \
            scale: 1; \
            type: SPACER; \
            description { state: "default" 0.0; \
               min: BUTTON_CIRCLE_STYLE_RIGHT_PADDING_MIN_MAX_INC; \
               max: BUTTON_CIRCLE_STYLE_RIGHT_PADDING_MIN_MAX_INC; \
               fixed: 1 1; \
               align: 1.0 1.0; \
               rel1 { \
                  relative: 1.0 1.0; \
                  to: "button_image"; \
               } \
               rel2.to: "button_image"; \
            } \
         } \
         part { name: "button_center_part"; \
            scale: 1; \
            description { state: "default" 0.0; \
               min: BUTTON_CIRCLE_STYLE_IMAGE_MIN_MAX_INC; \
               max: BUTTON_CIRCLE_STYLE_IMAGE_MIN_MAX_INC; \
               image.normal: image_normal; \
               rel1 { \
                  relative: 1.0 1.0; \
                  to: "left_top_padding"; \
               } \
               rel2 { \
                  relative: 0.0 0.0; \
                  to: "right_bottom_padding"; \
               } \
               color_class: "F032L1"; \
            } \
            description { state: "pressed" 0.0; \
               inherit: "default" 0.0; \
               color_class: "F031L1P"; \
            } \
            description { state: "disabled" 0.0; \
               inherit: "default" 0.0; \
               color_class: "F032L1D"; \
            } \
         } \
         part { name: "button_center_part_effect"; \
            scale: 1; \
            description { state: "default" 0.0; \
                rel1.to: "button_center_part"; \
                rel2.to: "button_center_part"; \
                image.normal: image_effect; \
                color_class: F032L3; \
            } \
            description { state: "pressed" 0.0; \
                inherit: "default" 0.0; \
                visible: 0; \
            } \
            description { state: "disabled" 0.0; \
                inherit: "default" 0.0; \
                image.normal: image_dim_effect; \
                color_class: F032L4; \
            } \
         } \
         part { name: "focus_image"; \
            scale: 1; \
            mouse_events: 0; \
            repeat_events: 1; \
              description { state: "default" 0.0; \
                 min: BUTTON_CIRCLE_STYLE_BG_MIN_MAX_INC; \
                 max: BUTTON_CIRCLE_STYLE_BG_MIN_MAX_INC; \
                 visible: 0; \
                 rel1.to : "button_image"; \
                 rel2.to : "button_image"; \
                 image { \
                  normal: "00_circle_button_focus.png"; \
               } \
            } \
            description { state: "focused" 0.0; \
               inherit: "default" 0.0; \
               visible: 1; \
               color_class: "W161";\
            } \
         } \
         part { name: "over1"; \
            type: RECT; \
            ignore_flags: ON_HOLD; \
            description { state: "default" 0.0; \
               color: 0 0 0 0; \
               min: min_width min_height; \
            } \
         } \
         part { name: "over2"; \
            type: RECT; \
            repeat_events: 1; \
            description { state: "default" 0.0; \
               color: 0 0 0 0; \
            } \
         } \
         part { name: "disabler"; \
            type: RECT; \
            description { state: "default" 0.0; \
               color: 0 0 0 0; \
               visible: 0; \
            } \
            description { state: "disabled" 0.0; \
               inherit: "default" 0.0; \
               visible: 1; \
            } \
         } \
      } \
      programs { \
         program { name: "button_press"; \
            signal: "mouse,down,1*"; \
            source: "over1"; \
            script { \
               if ((get_int(multi_down) == 0) && (get_int(mouse_down) == 0)) \
                 { \
                     set_int(mouse_down, 1); \
                     run_program(PROGRAM:"button_press2"); \
                 } \
            } \
         } \
         program { name: "button_press2"; \
            action: SIGNAL_EMIT "elm,action,press" ""; \
            after: "button_press_anim"; \
         } \
         program { name: "button_press_anim"; \
            action: STATE_SET "pressed" 0.0; \
            target: "button_bg" ; \
            target: "button_center_part"; \
            target: "button_center_part_effect"; \
         } \
         program { name: "button_unpress"; \
            signal: "mouse,up,1*"; \
            source: "over2"; \
            script { \
               if (get_int(mouse_down) == 1) \
                 { \
                    set_int(mouse_down, 0); \
                    run_program(PROGRAM:"button_unpress2"); \
                    run_program(PROGRAM:"button_unpress_anim"); \
                 } \
            } \
         } \
         program { name: "button_unpress2"; \
            action: SIGNAL_EMIT "elm,action,unpress" ""; \
         } \
         program { name: "button_unpress_anim"; \
            action: STATE_SET "default" 0.0; \
            target: "button_bg" ; \
            target: "button_center_part"; \
            target: "button_center_part_effect"; \
         } \
         program { name: "key_press"; \
            signal: "elm,action,pressed"; \
            source: "elm"; \
            action: STATE_SET "pressed" 0.0; \
            target: "button_bg" ; \
            target: "button_center_part"; \
            target: "button_center_part_effect"; \
         } \
         program { name: "key_unpress"; \
            signal: "elm,action,unpressed"; \
            source: "elm"; \
            action: STATE_SET "default" 0.0; \
            target: "button_bg" ; \
            target: "button_center_part"; \
            target: "button_center_part_effect"; \
         } \
         program { name: "button_click"; \
            signal: "mouse,clicked,1"; \
            source: "over1"; \
            script { \
               if (get_int(multi_down) == 0) { \
                 run_program(PROGRAM:"play_sound"); \
                 run_program(PROGRAM:"button_click2"); \
               } \
            } \
         } \
         program { name: "play_sound"; \
            action: RUN_PLUGIN "touch_sound"; \
         } \
         program { name: "button_click2"; \
            action: SIGNAL_EMIT "elm,action,click" ""; \
         } \
         program { name: "disable"; \
            signal: "elm,state,disabled"; \
            source: "elm"; \
            action: STATE_SET "disabled" 0.0; \
            target: "disabler"; \
            target: "button_center_part"; \
            target: "button_center_part_effect"; \
         } \
         program { name: "enable"; \
            signal: "elm,state,enabled"; \
            source: "elm"; \
            action: STATE_SET "default" 0.0; \
            target: "disabler"; \
            target: "button_center_part"; \
            target: "button_center_part_effect"; \
         } \
         program { name: "action_focus"; \
            signal: "elm,action,focus_highlight,show"; \
            source: "elm"; \
            action: STATE_SET "focused" 0.0; \
            target: "focus_image"; \
         } \
         program { name: "action_unfocus"; \
            signal: "elm,action,focus_highlight,hide"; \
            source: "elm"; \
            action: STATE_SET "default" 0.0; \
            target: "focus_image"; \
         } \
         program { \
            name: "multi_down"; \
            signal: "elm,action,multi,down"; \
            source: "elm"; \
            script { \
               set_int(multi_down, 1); \
            } \
         } \
         program { \
            name: "multi_up"; \
            signal: "elm,action,multi,up"; \
            source: "elm"; \
            script { \
               set_int(multi_down, 0); \
            } \
         } \
      } \
   }

#define BUTTON_CIRCLE_STYLES1(style_name, image_normal, image_effect, image_dim_effect, min_width, min_height) \
   group { name: "elm/button/base/"style_name; \
      data { \
         item: "focus_highlight" "on"; \
      } \
      images { \
         image: image_normal COMP; \
         image: image_effect COMP; \
         image: image_dim_effect COMP; \
         image: 00_circle_button_focus.png COMP; \
         image: 00_circle_button_bg.png COMP ; \
         image: 00_circle_button_ef.png COMP ; \
         image: 00_circle_button_dim_ef.png COMP; \
      } \
      script { \
         public mouse_down = 0; \
         public multi_down = 0; \
      } \
      parts { \
         part { name: "button_image"; \
            type: RECT; \
            scale: 1; \
            description { state: "default" 0.0; \
               min: BUTTON_CIRCLE_STYLE_BG_MIN_MAX_INC; \
               max: BUTTON_CIRCLE_STYLE_BG_MIN_MAX_INC; \
               color: 0 0 0 0; \
            } \
         } \
         part { name: "button_bg"; \
            scale: 1; \
            description { state: "default" 0.0; \
               min: BUTTON_CIRCLE_STYLE_BG_MIN_MAX_INC; \
               max: BUTTON_CIRCLE_STYLE_BG_MIN_MAX_INC; \
               image.normal: "00_circle_button_bg.png"; \
               rel1.to: "button_image"; \
               rel2.to: "button_image"; \
               color_class: "W011"; \
            } \
            description { state: "pressed" 0.0; \
               inherit: "default" 0.0; \
               color_class: "B042"; \
            } \
            description { state: "disabled" 0.0; \
               inherit: "default" 0.0; \
               color_class: "W011D"; \
            } \
            description { state: "focused" 0.0; \
               inherit: "default" 0.0; \
               color_class: "W161"; \
            } \
         } \
         part { name: "button_ef"; \
            scale: 1; \
            description { state: "default" 0.0; \
               min: BUTTON_CIRCLE_STYLE_BG_MIN_MAX_INC; \
               max: BUTTON_CIRCLE_STYLE_BG_MIN_MAX_INC; \
               image.normal: "00_circle_button_ef.png"; \
               rel1.to: "button_bg"; \
               rel2.to: "button_bg"; \
            } \
            description { state: "disabled" 0.0; \
               inherit: "default" 0.0; \
               image.normal: "00_circle_button_dim_ef.png"; \
            } \
         } \
         part { name: "left_top_padding"; \
            scale: 1; \
            type: SPACER; \
            description { state: "default" 0.0; \
               min: BUTTON_CIRCLE_STYLE_LEFT_PADDING_MIN_MAX_INC; \
               max: BUTTON_CIRCLE_STYLE_LEFT_PADDING_MIN_MAX_INC; \
               fixed: 1 1; \
               align: 0.0 0.0; \
               rel1.to: "button_image"; \
               rel2.to: "button_image"; \
            } \
         } \
         part { name: "right_bottom_padding"; \
            scale: 1; \
            type: SPACER; \
            description { state: "default" 0.0; \
               min: BUTTON_CIRCLE_STYLE_RIGHT_PADDING_MIN_MAX_INC; \
               max: BUTTON_CIRCLE_STYLE_RIGHT_PADDING_MIN_MAX_INC; \
               fixed: 1 1; \
               align: 1.0 1.0; \
               rel1 { \
                  relative: 1.0 1.0; \
                  to: "button_image"; \
               } \
               rel2.to: "button_image"; \
            } \
         } \
         part { name: "button_center_part"; \
            scale: 1; \
            description { state: "default" 0.0; \
               min: BUTTON_CIRCLE_STYLE_IMAGE_MIN_MAX_INC; \
               max: BUTTON_CIRCLE_STYLE_IMAGE_MIN_MAX_INC; \
               image.normal: image_normal; \
               rel1 { \
                  relative: 1.0 1.0; \
                  to: "left_top_padding"; \
               } \
               rel2 { \
                  relative: 0.0 0.0; \
                  to: "right_bottom_padding"; \
               } \
               color_class: "F031L1"; \
            } \
            description { state: "pressed" 0.0; \
               inherit: "default" 0.0; \
               color_class: "F031L1P"; \
            } \
            description { state: "disabled" 0.0; \
               inherit: "default" 0.0; \
               color_class: "F031L1D"; \
            } \
         } \
         part { name: "button_center_part_effect"; \
            scale: 1; \
            description { state: "default" 0.0; \
                rel1.to: "button_center_part"; \
                rel2.to: "button_center_part"; \
                image.normal: image_effect; \
                color_class: F032L3; \
            } \
            description { state: "pressed" 0.0; \
                inherit: "default" 0.0; \
                visible: 0; \
            } \
            description { state: "disabled" 0.0; \
                inherit: "default" 0.0; \
                image.normal: image_dim_effect; \
                color_class: F032L4; \
            } \
         } \
         part { name: "focus_image"; \
            scale: 1; \
            mouse_events: 0; \
            repeat_events: 1; \
              description { state: "default" 0.0; \
                 min: BUTTON_CIRCLE_STYLE_BG_MIN_MAX_INC; \
                 max: BUTTON_CIRCLE_STYLE_BG_MIN_MAX_INC; \
                 visible: 0; \
                 rel1.to : "button_image"; \
                 rel2.to : "button_image"; \
                 image { \
                  normal: "00_circle_button_focus.png"; \
               } \
            } \
            description { state: "focused" 0.0; \
               inherit: "default" 0.0; \
               visible: 1; \
               color_class: "W161";\
            } \
         } \
         part { name: "over1"; \
            type: RECT; \
            ignore_flags: ON_HOLD; \
            description { state: "default" 0.0; \
               color: 0 0 0 0; \
               min: min_width min_height; \
            } \
         } \
         part { name: "over2"; \
            type: RECT; \
            repeat_events: 1; \
            description { state: "default" 0.0; \
               color: 0 0 0 0; \
            } \
         } \
         part { name: "disabler"; \
            type: RECT; \
            description { state: "default" 0.0; \
               color: 0 0 0 0; \
               visible: 0; \
            } \
            description { state: "disabled" 0.0; \
               inherit: "default" 0.0; \
               visible: 1; \
            } \
         } \
      } \
      programs { \
         program { name: "button_press"; \
            signal: "mouse,down,1*"; \
            source: "over1"; \
            script { \
               if ((get_int(multi_down) == 0) && (get_int(mouse_down) == 0)) \
                 { \
                     set_int(mouse_down, 1); \
                     run_program(PROGRAM:"button_press2"); \
                 } \
            } \
         } \
         program { name: "button_press2"; \
            action: SIGNAL_EMIT "elm,action,press" ""; \
            after: "button_press_anim"; \
         } \
         program { name: "button_press_anim"; \
            action: STATE_SET "pressed" 0.0; \
            target: "button_bg"; \
            target: "button_center_part"; \
            target: "button_center_part_effect"; \
         } \
         program { name: "button_unpress"; \
            signal: "mouse,up,1*"; \
            source: "over2"; \
            script { \
               if (get_int(mouse_down) == 1) \
                 { \
                    set_int(mouse_down, 0); \
                    run_program(PROGRAM:"button_unpress2"); \
                    run_program(PROGRAM:"button_unpress_anim"); \
                 } \
            } \
         } \
         program { name: "button_unpress2"; \
            action: SIGNAL_EMIT "elm,action,unpress" ""; \
         } \
         program { name: "button_unpress_anim"; \
            action: STATE_SET "default" 0.0; \
            target: "button_bg"; \
            target: "button_center_part"; \
            target: "button_center_part_effect"; \
         } \
         program { name: "key_press"; \
            signal: "elm,action,pressed"; \
            source: "elm"; \
            action: STATE_SET "pressed" 0.0; \
            target: "button_bg"; \
            target: "button_center_part"; \
            target: "button_center_part_effect"; \
         } \
         program { name: "key_unpress"; \
            signal: "elm,action,unpressed"; \
            source: "elm"; \
            action: STATE_SET "default" 0.0; \
            target: "button_bg"; \
            target: "button_center_part"; \
            target: "button_center_part_effect"; \
         } \
         program { name: "button_click"; \
            signal: "mouse,clicked,1"; \
            source: "over1"; \
            script { \
               if (get_int(multi_down) == 0) { \
                 run_program(PROGRAM:"play_sound"); \
                 run_program(PROGRAM:"button_click2"); \
               } \
            } \
         } \
         program { name: "play_sound"; \
            action: RUN_PLUGIN "touch_sound"; \
         } \
         program { name: "button_click2"; \
            action: SIGNAL_EMIT "elm,action,click" ""; \
         } \
         program { name: "disable"; \
            signal: "elm,state,disabled"; \
            source: "elm"; \
            action: STATE_SET "disabled" 0.0; \
            target: "button_bg"; \
            target: "disabler"; \
            target: "button_center_part"; \
            target: "button_ef"; \
            target: "button_center_part_effect"; \
         } \
         program { name: "enable"; \
            signal: "elm,state,enabled"; \
            source: "elm"; \
            action: STATE_SET "default" 0.0; \
            target: "button_bg"; \
            target: "disabler"; \
            target: "button_center_part"; \
            target: "button_ef"; \
            target: "button_center_part_effect"; \
         } \
         program { name: "action_focus"; \
            signal: "elm,action,focus_highlight,show"; \
            source: "elm"; \
            action: STATE_SET "focused" 0.0; \
            target: "button_bg"; \
            target: "focus_image"; \
         } \
         program { name: "action_unfocus"; \
            signal: "elm,action,focus_highlight,hide"; \
            source: "elm"; \
            action: STATE_SET "default" 0.0; \
            target: "button_bg"; \
            target: "focus_image"; \
         } \
         program { \
            name: "multi_down"; \
            signal: "elm,action,multi,down"; \
            source: "elm"; \
            script { \
               set_int(multi_down, 1); \
            } \
         } \
         program { \
            name: "multi_up"; \
            signal: "elm,action,multi,up"; \
            source: "elm"; \
            script { \
               set_int(multi_down, 0); \
            } \
         } \
      } \
   }

///////////////////////////////////////////////////////////////////////////////////////
   BUTTON_CIRCLE_STYLES1("reveal","00_button_right.png", "00_button_right_ef.png", "00_button_right_dim_ef.png", BUTTON_CIRCLE_NORMAL_MIN_WIDTH_INC, BUTTON_CIRCLE_NORMAL_MIN_HEIGHT_INC)

///////////////////////////////////////////////////////////////////////////////////////
   BUTTON_CIRCLE_STYLES1("reveal/extended", "00_button_right.png", "00_button_right_ef.png", "00_button_right_dim_ef.png", BUTTON_CIRCLE_EXTENEDED_MIN_WIDTH_INC, BUTTON_CIRCLE_EXTENEDED_MIN_HEIGHT_INC)

///////////////////////////////////////////////////////////////////////////////////////
   BUTTON_CIRCLE_STYLES("expand/closed", "00_button_expand_closed.png", "00_button_expand_closed_ef.png", "00_button_expand_closed_ef.png", BUTTON_CIRCLE_NORMAL_MIN_WIDTH_INC, BUTTON_CIRCLE_NORMAL_MIN_HEIGHT_INC)

///////////////////////////////////////////////////////////////////////////////////////
   BUTTON_CIRCLE_STYLES("expand/closed/extended", "00_button_expand_closed.png", "00_button_expand_closed_ef.png", "00_button_expand_closed_dim_ef.png", BUTTON_CIRCLE_EXTENEDED_MIN_WIDTH_INC, BUTTON_CIRCLE_EXTENEDED_MIN_HEIGHT_INC)

///////////////////////////////////////////////////////////////////////////////////////
   BUTTON_CIRCLE_STYLES("expand/opened", "00_button_expand_opened.png", "00_button_expand_opened_ef.png", "00_button_expand_opened_dim_ef.png", BUTTON_CIRCLE_NORMAL_MIN_WIDTH_INC, BUTTON_CIRCLE_NORMAL_MIN_HEIGHT_INC)

///////////////////////////////////////////////////////////////////////////////////////
   BUTTON_CIRCLE_STYLES("expand/opened/extended", "00_button_expand_opened.png", "00_button_expand_opened_ef.png", "00_button_expand_opened_dim_ef.png", BUTTON_CIRCLE_EXTENEDED_MIN_WIDTH_INC, BUTTON_CIRCLE_EXTENEDED_MIN_HEIGHT_INC)

///////////////////////////////////////////////////////////////////////////////////////
   BUTTON_CIRCLE_STYLES("info", "00_button_info.png", "00_button_info_ef.png", "00_button_info_dim_ef.png", BUTTON_CIRCLE_NORMAL_MIN_WIDTH_INC, BUTTON_CIRCLE_NORMAL_MIN_HEIGHT_INC)

///////////////////////////////////////////////////////////////////////////////////////
   BUTTON_CIRCLE_STYLES("info/extended", "00_button_info.png", "00_button_info_ef.png", "00_button_info_dim_ef.png", BUTTON_CIRCLE_EXTENEDED_MIN_WIDTH_INC, BUTTON_CIRCLE_EXTENEDED_MIN_HEIGHT_INC)

///////////////////////////////////////////////////////////////////////////////////////
   BUTTON_CIRCLE_STYLES("rename", "00_button_rename.png", "00_button_rename_ef.png", "00_button_rename_dim_ef.png", BUTTON_CIRCLE_NORMAL_MIN_WIDTH_INC, BUTTON_CIRCLE_NORMAL_MIN_HEIGHT_INC)

///////////////////////////////////////////////////////////////////////////////////////
   BUTTON_CIRCLE_STYLES("rename/extended", "00_button_rename.png", "00_button_rename_ef.png", "00_button_rename_dim_ef.png", BUTTON_CIRCLE_EXTENEDED_MIN_WIDTH_INC, BUTTON_CIRCLE_EXTENEDED_MIN_HEIGHT_INC)

///////////////////////////////////////////////////////////////////////////////////////
   BUTTON_CIRCLE_STYLES("call", "00_button_call.png", "00_button_call_ef.png", "00_button_call_dim_ef.png", BUTTON_CIRCLE_NORMAL_MIN_WIDTH_INC, BUTTON_CIRCLE_NORMAL_MIN_HEIGHT_INC)

///////////////////////////////////////////////////////////////////////////////////////
   BUTTON_CIRCLE_STYLES("call/extended", "00_button_call.png", "00_button_call_ef.png", "00_button_call_dim_ef.png", BUTTON_CIRCLE_EXTENEDED_MIN_WIDTH_INC, BUTTON_CIRCLE_EXTENEDED_MIN_HEIGHT_INC)

///////////////////////////////////////////////////////////////////////////////////////
   BUTTON_CIRCLE_STYLES("send", "00_button_expand_send.png", "00_button_expand_send_ef.png", "00_button_expand_send_dim_ef.png", BUTTON_CIRCLE_NORMAL_MIN_WIDTH_INC, BUTTON_CIRCLE_NORMAL_MIN_HEIGHT_INC)

///////////////////////////////////////////////////////////////////////////////////////
   BUTTON_CIRCLE_STYLES("send/extended", "00_button_expand_send.png", "00_button_expand_send_ef.png", "00_button_expand_send_dim_ef.png", BUTTON_CIRCLE_EXTENEDED_MIN_WIDTH_INC, BUTTON_CIRCLE_EXTENEDED_MIN_HEIGHT_INC)

///////////////////////////////////////////////////////////////////////////////////////
   BUTTON_CIRCLE_STYLES("contact", "00_button_contact.png", "00_button_contact_ef.png", "00_button_contact_dim_ef.png", BUTTON_CIRCLE_NORMAL_MIN_WIDTH_INC, BUTTON_CIRCLE_NORMAL_MIN_HEIGHT_INC)

///////////////////////////////////////////////////////////////////////////////////////

#define BUTTON_CIRCLE_STYLES_PLUS(style_name, image_normal, image_effect, image_dim_effect, min_width, min_height) \
   group { name: "elm/button/base/"style_name; \
      data { \
         item: "focus_highlight" "on"; \
      } \
      images { \
         image: image_normal COMP; \
         image: image_effect COMP; \
         image: image_dim_effect COMP; \
         image: 00_circle_button_focus.png COMP; \
         image: 00_circle_button_bg.png COMP; \
      } \
      script { \
         public mouse_down = 0; \
         public multi_down = 0; \
      } \
      parts { \
         part { name: "button_image"; \
            type: RECT; \
            scale: 1; \
            description { state: "default" 0.0; \
               min: BUTTON_CIRCLE_STYLE_BG_MIN_MAX_INC; \
               max: BUTTON_CIRCLE_STYLE_BG_MIN_MAX_INC; \
               color: 0 0 0 0; \
            } \
         } \
         part { name: "button_bg"; \
            scale: 1; \
            description { state: "default" 0.0; \
               min: BUTTON_CIRCLE_STYLE_BG_MIN_MAX_INC; \
               max: BUTTON_CIRCLE_STYLE_BG_MIN_MAX_INC; \
               image.normal: "00_circle_button_bg.png"; \
               rel1.to: "button_image"; \
               rel2.to: "button_image"; \
               visible: 0 ; \
            } \
            description { state: "pressed" 0.0; \
               inherit: "default" 0.0; \
               visible: 1 ; \
               color_class: "B042"; \
            } \
          } \
         part { name: "left_top_padding"; \
            scale: 1; \
            type: SPACER; \
            description { state: "default" 0.0; \
               min: BUTTON_CIRCLE_STYLE_LEFT_PADDING_MIN_MAX_INC; \
               max: BUTTON_CIRCLE_STYLE_LEFT_PADDING_MIN_MAX_INC; \
               fixed: 1 1; \
               align: 0.0 0.0; \
               rel1.to: "button_image"; \
               rel2.to: "button_image"; \
            } \
         } \
         part { name: "right_bottom_padding"; \
            scale: 1; \
            type: SPACER; \
            description { state: "default" 0.0; \
               min: BUTTON_CIRCLE_STYLE_RIGHT_PADDING_MIN_MAX_INC; \
               max: BUTTON_CIRCLE_STYLE_RIGHT_PADDING_MIN_MAX_INC; \
               fixed: 1 1; \
               align: 1.0 1.0; \
               rel1 { \
                  relative: 1.0 1.0; \
                  to: "button_image"; \
               } \
               rel2.to: "button_image"; \
            } \
         } \
         part { name: "button_center_part"; \
            scale: 1; \
            description { state: "default" 0.0; \
               min: BUTTON_CIRCLE_STYLE_IMAGE_MIN_MAX_INC; \
               max: BUTTON_CIRCLE_STYLE_IMAGE_MIN_MAX_INC; \
               image.normal: image_normal; \
               rel1 { \
                  relative: 1.0 1.0; \
                  to: "left_top_padding"; \
               } \
               rel2 { \
                  relative: 0.0 0.0; \
                  to: "right_bottom_padding"; \
               } \
               color_class: "F032L2"; \
            } \
            description { state: "pressed" 0.0; \
               inherit: "default" 0.0; \
               color_class: "F032L2P"; \
            } \
            description { state: "disabled" 0.0; \
               inherit: "default" 0.0; \
               color_class: "F032L2D"; \
            } \
         } \
         part { name: "button_center_part_effect"; \
            scale: 1; \
            description { state: "default" 0.0; \
                rel1.to: "button_center_part"; \
                rel2.to: "button_center_part"; \
                image.normal: image_effect; \
                color_class: F032L3; \
            } \
            description { state: "pressed" 0.0; \
                inherit: "default" 0.0; \
                visible: 0; \
            } \
            description { state: "disabled" 0.0; \
                inherit: "default" 0.0; \
                image.normal: image_dim_effect; \
                color_class: F032L4; \
            } \
         } \
         part { name: "focus_image"; \
            scale: 1; \
            mouse_events: 0; \
            repeat_events: 1; \
              description { state: "default" 0.0; \
                 min: BUTTON_CIRCLE_STYLE_BG_MIN_MAX_INC; \
                 max: BUTTON_CIRCLE_STYLE_BG_MIN_MAX_INC; \
                 visible: 0; \
                 rel1.to : "button_image"; \
                 rel2.to : "button_image"; \
                 image { \
                  normal: "00_circle_button_focus.png"; \
               } \
            } \
            description { state: "focused" 0.0; \
               inherit: "default" 0.0; \
               visible: 1; \
               color_class: "W161";\
            } \
         } \
         part { name: "over1"; \
            type: RECT; \
            ignore_flags: ON_HOLD; \
            description { state: "default" 0.0; \
               color: 0 0 0 0; \
               min: min_width min_height; \
            } \
         } \
         part { name: "over2"; \
            type: RECT; \
            repeat_events: 1; \
            description { state: "default" 0.0; \
               color: 0 0 0 0; \
            } \
         } \
         part { name: "disabler"; \
            type: RECT; \
            description { state: "default" 0.0; \
               color: 0 0 0 0; \
               visible: 0; \
            } \
            description { state: "disabled" 0.0; \
               inherit: "default" 0.0; \
               visible: 1; \
            } \
         } \
      } \
      programs { \
         program { name: "button_press"; \
            signal: "mouse,down,1*"; \
            source: "over1"; \
            script { \
               if ((get_int(multi_down) == 0) && (get_int(mouse_down) == 0)) \
                 { \
                     set_int(mouse_down, 1); \
                     run_program(PROGRAM:"button_press2"); \
                 } \
            } \
         } \
         program { name: "button_press2"; \
            action: SIGNAL_EMIT "elm,action,press" ""; \
            after: "button_press_anim"; \
         } \
         program { name: "button_press_anim"; \
            action: STATE_SET "pressed" 0.0; \
            target: "button_bg"; \
            target: "button_center_part"; \
            target: "button_center_part_effect"; \
         } \
         program { name: "button_unpress"; \
            signal: "mouse,up,1*"; \
            source: "over2"; \
            script { \
               if (get_int(mouse_down) == 1) \
                 { \
                    set_int(mouse_down, 0); \
                    run_program(PROGRAM:"button_unpress2"); \
                    run_program(PROGRAM:"button_unpress_anim"); \
                 } \
            } \
         } \
         program { name: "button_unpress2"; \
            action: SIGNAL_EMIT "elm,action,unpress" ""; \
         } \
         program { name: "button_unpress_anim"; \
            action: STATE_SET "default" 0.0; \
            target: "button_bg"; \
            target: "button_center_part"; \
            target: "button_center_part_effect"; \
         } \
         program { name: "key_press"; \
            signal: "elm,action,pressed"; \
            source: "elm"; \
            action: STATE_SET "pressed" 0.0; \
            target: "button_bg"; \
            target: "button_center_part"; \
            target: "button_center_part_effect"; \
         } \
         program { name: "key_unpress"; \
            signal: "elm,action,unpressed"; \
            source: "elm"; \
            action: STATE_SET "default" 0.0; \
            target: "button_bg"; \
            target: "button_center_part"; \
            target: "button_center_part_effect"; \
         } \
         program { name: "button_click"; \
            signal: "mouse,clicked,1"; \
            source: "over1"; \
            script { \
               if (get_int(multi_down) == 0) { \
                 run_program(PROGRAM:"play_sound"); \
                 run_program(PROGRAM:"button_click2"); \
               } \
            } \
         } \
         program { name: "play_sound"; \
            action: RUN_PLUGIN "touch_sound"; \
         } \
         program { name: "button_click2"; \
            action: SIGNAL_EMIT "elm,action,click" ""; \
         } \
         program { name: "disable"; \
            signal: "elm,state,disabled"; \
            source: "elm"; \
            action: STATE_SET "disabled" 0.0; \
            target: "disabler"; \
            target: "button_center_part"; \
            target: "button_center_part_effect"; \
         } \
         program { name: "enable"; \
            signal: "elm,state,enabled"; \
            source: "elm"; \
            action: STATE_SET "default" 0.0; \
            target: "disabler"; \
            target: "button_center_part"; \
            target: "button_center_part_effect"; \
         } \
         program { name: "action_focus"; \
            signal: "elm,action,focus_highlight,show"; \
            source: "elm"; \
            action: STATE_SET "focused" 0.0; \
            target: "focus_image"; \
         } \
         program { name: "action_unfocus"; \
            signal: "elm,action,focus_highlight,hide"; \
            source: "elm"; \
            action: STATE_SET "default" 0.0; \
            target: "focus_image"; \
         } \
         program { \
            name: "multi_down"; \
            signal: "elm,action,multi,down"; \
            source: "elm"; \
            script { \
               set_int(multi_down, 1); \
            } \
         } \
         program { \
            name: "multi_up"; \
            signal: "elm,action,multi,up"; \
            source: "elm"; \
            script { \
               set_int(multi_down, 0); \
            } \
         } \
      } \
   }

///////////////////////////////////////////////////////////////////////////////////////
   BUTTON_CIRCLE_STYLES_PLUS("plus", "00_button_add.png", "00_button_add_ef.png", "00_button_add_dim_ef.png",BUTTON_CIRCLE_NORMAL_MIN_WIDTH_INC, BUTTON_CIRCLE_NORMAL_MIN_HEIGHT_INC)

///////////////////////////////////////////////////////////////////////////////////////
   BUTTON_CIRCLE_STYLES_PLUS("plus/extended", "00_button_add.png", "00_button_add_ef.png", "00_button_add_dim_ef.png",BUTTON_CIRCLE_EXTENEDED_MIN_WIDTH_INC, BUTTON_CIRCLE_EXTENEDED_MIN_HEIGHT_INC)

///////////////////////////////////////////////////////////////////////////////////////

#define BUTTON_CIRCLE_STYLES_MINUS(style_name, image_normal, image_effect, image_dim_effect, min_width, min_height) \
   group { name: "elm/button/base/"style_name; \
      data { \
         item: "focus_highlight" "on"; \
      } \
      images { \
         image: image_normal COMP; \
         image: image_effect COMP; \
         image: image_dim_effect COMP; \
         image: 00_circle_button_focus.png COMP; \
         image: 00_circle_button_bg.png COMP; \
      } \
      script { \
         public mouse_down = 0; \
         public multi_down = 0; \
      } \
      parts { \
         part { name: "button_image"; \
            type: RECT; \
            scale: 1; \
            description { state: "default" 0.0; \
               min: BUTTON_CIRCLE_STYLE_BG_MIN_MAX_INC; \
               max: BUTTON_CIRCLE_STYLE_BG_MIN_MAX_INC; \
               color: 0 0 0 0; \
            } \
         } \
         part { name: "button_bg"; \
            scale: 1; \
            description { state: "default" 0.0; \
               min: BUTTON_CIRCLE_STYLE_BG_MIN_MAX_INC; \
               max: BUTTON_CIRCLE_STYLE_BG_MIN_MAX_INC; \
               image.normal: "00_circle_button_bg.png"; \
               rel1.to: "button_image"; \
               rel2.to: "button_image"; \
               visible: 0 ; \
            } \
            description { state: "pressed" 0.0; \
               inherit: "default" 0.0; \
               visible: 1 ; \
               color_class: "B042"; \
            } \
          } \
         part { name: "left_top_padding"; \
            scale: 1; \
            type: SPACER; \
            description { state: "default" 0.0; \
               min: BUTTON_CIRCLE_STYLE_LEFT_PADDING_MIN_MAX_INC; \
               max: BUTTON_CIRCLE_STYLE_LEFT_PADDING_MIN_MAX_INC; \
               fixed: 1 1; \
               align: 0.0 0.0; \
               rel1.to: "button_image"; \
               rel2.to: "button_image"; \
            } \
         } \
         part { name: "right_bottom_padding"; \
            scale: 1; \
            type: SPACER; \
            description { state: "default" 0.0; \
               min: BUTTON_CIRCLE_STYLE_RIGHT_PADDING_MIN_MAX_INC; \
               max: BUTTON_CIRCLE_STYLE_RIGHT_PADDING_MIN_MAX_INC; \
               fixed: 1 1; \
               align: 1.0 1.0; \
               rel1 { \
                  relative: 1.0 1.0; \
                  to: "button_image"; \
               } \
               rel2.to: "button_image"; \
            } \
         } \
         part { name: "button_center_part"; \
            scale: 1; \
            description { state: "default" 0.0; \
               min: BUTTON_CIRCLE_STYLE_IMAGE_MIN_MAX_INC; \
               max: BUTTON_CIRCLE_STYLE_IMAGE_MIN_MAX_INC; \
               image.normal: image_normal; \
               rel1 { \
                  relative: 1.0 1.0; \
                  to: "left_top_padding"; \
               } \
               rel2 { \
                  relative: 0.0 0.0; \
                  to: "right_bottom_padding"; \
               } \
               color_class: "F032L21"; \
            } \
            description { state: "pressed" 0.0; \
               inherit: "default" 0.0; \
               color_class: "F032L21P"; \
            } \
            description { state: "disabled" 0.0; \
               inherit: "default" 0.0; \
               color_class: "F032L21D"; \
            } \
         } \
         part { name: "button_center_part_effect"; \
            scale: 1; \
            description { state: "default" 0.0; \
                rel1.to: "button_center_part"; \
                rel2.to: "button_center_part"; \
                image.normal: image_effect; \
                color_class: F032L3; \
            } \
            description { state: "pressed" 0.0; \
                inherit: "default" 0.0; \
                visible: 0; \
            } \
            description { state: "disabled" 0.0; \
                inherit: "default" 0.0; \
                image.normal: image_dim_effect; \
                color_class: F032L4; \
            } \
         } \
         part { name: "focus_image"; \
            scale: 1; \
            mouse_events: 0; \
            repeat_events: 1; \
              description { state: "default" 0.0; \
                 min: BUTTON_CIRCLE_STYLE_BG_MIN_MAX_INC; \
                 max: BUTTON_CIRCLE_STYLE_BG_MIN_MAX_INC; \
                 visible: 0; \
                 rel1.to : "button_image"; \
                 rel2.to : "button_image"; \
                 image { \
                  normal: "00_circle_button_focus.png"; \
               } \
            } \
            description { state: "focused" 0.0; \
               inherit: "default" 0.0; \
               visible: 1; \
               color_class: "W161";\
            } \
         } \
         part { name: "over1"; \
            type: RECT; \
            ignore_flags: ON_HOLD; \
            description { state: "default" 0.0; \
               color: 0 0 0 0; \
               min: min_width min_height; \
            } \
         } \
         part { name: "over2"; \
            type: RECT; \
            repeat_events: 1; \
            description { state: "default" 0.0; \
               color: 0 0 0 0; \
            } \
         } \
         part { name: "disabler"; \
            type: RECT; \
            description { state: "default" 0.0; \
               color: 0 0 0 0; \
               visible: 0; \
            } \
            description { state: "disabled" 0.0; \
               inherit: "default" 0.0; \
               visible: 1; \
            } \
         } \
      } \
      programs { \
         program { name: "button_press"; \
            signal: "mouse,down,1*"; \
            source: "over1"; \
            script { \
               if ((get_int(multi_down) == 0) && (get_int(mouse_down) == 0)) \
                 { \
                     set_int(mouse_down, 1); \
                     run_program(PROGRAM:"button_press2"); \
                 } \
            } \
         } \
         program { name: "button_press2"; \
            action: SIGNAL_EMIT "elm,action,press" ""; \
            after: "button_press_anim"; \
         } \
         program { name: "button_press_anim"; \
            action: STATE_SET "pressed" 0.0; \
            target: "button_bg"; \
            target: "button_center_part"; \
            target: "button_center_part_effect"; \
         } \
         program { name: "button_unpress"; \
            signal: "mouse,up,1*"; \
            source: "over2"; \
            script { \
               if (get_int(mouse_down) == 1) \
                 { \
                    set_int(mouse_down, 0); \
                    run_program(PROGRAM:"button_unpress2"); \
                    run_program(PROGRAM:"button_unpress_anim"); \
                 } \
            } \
         } \
         program { name: "button_unpress2"; \
            action: SIGNAL_EMIT "elm,action,unpress" ""; \
         } \
         program { name: "button_unpress_anim"; \
            action: STATE_SET "default" 0.0; \
            target: "button_bg"; \
            target: "button_center_part"; \
            target: "button_center_part_effect"; \
         } \
         program { name: "key_press"; \
            signal: "elm,action,pressed"; \
            source: "elm"; \
            action: STATE_SET "pressed" 0.0; \
            target: "button_bg"; \
            target: "button_center_part"; \
            target: "button_center_part_effect"; \
         } \
         program { name: "key_unpress"; \
            signal: "elm,action,unpressed"; \
            source: "elm"; \
            action: STATE_SET "default" 0.0; \
            target: "button_bg"; \
            target: "button_center_part"; \
            target: "button_center_part_effect"; \
         } \
         program { name: "button_click"; \
            signal: "mouse,clicked,1"; \
            source: "over1"; \
            script { \
               if (get_int(multi_down) == 0) { \
                 run_program(PROGRAM:"play_sound"); \
                 run_program(PROGRAM:"button_click2"); \
               } \
            } \
         } \
         program { name: "play_sound"; \
            action: RUN_PLUGIN "touch_sound"; \
         } \
         program { name: "button_click2"; \
            action: SIGNAL_EMIT "elm,action,click" ""; \
         } \
         program { name: "disable"; \
            signal: "elm,state,disabled"; \
            source: "elm"; \
            action: STATE_SET "disabled" 0.0; \
            target: "disabler"; \
            target: "button_center_part"; \
            target: "button_center_part_effect"; \
         } \
         program { name: "enable"; \
            signal: "elm,state,enabled"; \
            source: "elm"; \
            action: STATE_SET "default" 0.0; \
            target: "disabler"; \
            target: "button_center_part"; \
            target: "button_center_part_effect"; \
         } \
         program { name: "action_focus"; \
            signal: "elm,action,focus_highlight,show"; \
            source: "elm"; \
            action: STATE_SET "focused" 0.0; \
            target: "focus_image"; \
         } \
         program { name: "action_unfocus"; \
            signal: "elm,action,focus_highlight,hide"; \
            source: "elm"; \
            action: STATE_SET "default" 0.0; \
            target: "focus_image"; \
         } \
         program { \
            name: "multi_down"; \
            signal: "elm,action,multi,down"; \
            source: "elm"; \
            script { \
               set_int(multi_down, 1); \
            } \
         } \
         program { \
            name: "multi_up"; \
            signal: "elm,action,multi,up"; \
            source: "elm"; \
            script { \
               set_int(multi_down, 0); \
            } \
         } \
      } \
   }

///////////////////////////////////////////////////////////////////////////////////////
   BUTTON_CIRCLE_STYLES_MINUS("minus", "00_button_delete.png", "00_button_delete_ef.png", "00_button_delete_dim_ef.png",BUTTON_CIRCLE_NORMAL_MIN_WIDTH_INC, BUTTON_CIRCLE_NORMAL_MIN_HEIGHT_INC)

///////////////////////////////////////////////////////////////////////////////////////
   BUTTON_CIRCLE_STYLES_MINUS("minus/extended", "00_button_delete.png", "00_button_delete_ef.png", "00_button_delete_dim_ef.png",BUTTON_CIRCLE_EXTENEDED_MIN_WIDTH_INC, BUTTON_CIRCLE_EXTENEDED_MIN_HEIGHT_INC)

///////////////////////////////////////////////////////////////////////////////////////
   BUTTON_CIRCLE_STYLES_MINUS("warning", "00_button_warning.png", "00_button_warning_ef.png", "00_button_warning_dim_ef.png",BUTTON_CIRCLE_NORMAL_MIN_WIDTH_INC, BUTTON_CIRCLE_NORMAL_MIN_HEIGHT_INC)

///////////////////////////////////////////////////////////////////////////////////////
   BUTTON_CIRCLE_STYLES_MINUS("warning/extended", "00_button_warning.png", "00_button_warning_ef.png", "00_button_warning_dim_ef.png",BUTTON_CIRCLE_EXTENEDED_MIN_WIDTH_INC, BUTTON_CIRCLE_EXTENEDED_MIN_HEIGHT_INC)

///////////////////////////////////////////////////////////////////////////////////////
   BUTTON_CIRCLE_STYLES("cancel", "00_button_expand_cancel.png", "00_button_expand_cancel_ef.png", "00_button_expand_cancel_dim_ef.png", BUTTON_CIRCLE_NORMAL_MIN_WIDTH_INC, BUTTON_CIRCLE_NORMAL_MIN_HEIGHT_INC)

///////////////////////////////////////////////////////////////////////////////////////
   BUTTON_CIRCLE_STYLES("cancel/extended", "00_button_expand_cancel.png", "00_button_expand_cancel_ef.png", "00_button_expand_cancel_dim_ef.png", BUTTON_CIRCLE_EXTENEDED_MIN_WIDTH_INC, BUTTON_CIRCLE_EXTENEDED_MIN_HEIGHT_INC)

///////////////////////////////////////////////////////////////////////////////////////


   group { name: "elm/button/base/circle/empty";
      data {
         item: "focus_highlight" "on";
      }
      images {
         image: 00_circle_button_focus.png COMP;
         image: 00_circle_button_bg.png COMP;
      }
      script {
         public mouse_down = 0;
         public multi_down = 0;
      }
      parts {
         part { name: "button_image";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               min: BUTTON_CIRCLE_STYLE_BG_MIN_MAX_INC;
               max: BUTTON_CIRCLE_STYLE_BG_MIN_MAX_INC;
               fixed: 1 1;
               color: 0 0 0 0;
            }
         }
          part { name: "button_bg";
            scale: 1;
            description { state: "default" 0.0;
               min: BUTTON_CIRCLE_STYLE_BG_MIN_MAX_INC;
               max: BUTTON_CIRCLE_STYLE_BG_MIN_MAX_INC;
               image.normal: "00_circle_button_bg.png";
               rel1.to: "button_image";
               rel2.to: "button_image";
               visible: 0 ;
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               visible: 1 ;
               color_class: "B042";
            }
          }
         part { name: "left_top_padding";
            scale: 1;
            type: SPACER;
            description { state: "default" 0.0;
               min: BUTTON_CIRCLE_STYLE_LEFT_PADDING_MIN_MAX_INC;
               max: BUTTON_CIRCLE_STYLE_LEFT_PADDING_MIN_MAX_INC;
               fixed: 1 1;
               align: 0.0 0.0;
               rel1.to: "button_image";
               rel2.to: "button_image";
            }
         }
         part { name: "right_bottom_padding";
            scale: 1;
            type: SPACER;
            description { state: "default" 0.0;
               min: BUTTON_CIRCLE_STYLE_RIGHT_PADDING_MIN_MAX_INC;
               max: BUTTON_CIRCLE_STYLE_RIGHT_PADDING_MIN_MAX_INC;
               fixed: 1 1;
               align: 1.0 1.0;
               rel1 {
                  relative: 1.0 1.0;
                  to: "button_image";
               }
               rel2.to: "button_image";
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            clip_to: "icon_clipper";
            description { state: "default" 0.0;
               min: BUTTON_CIRCLE_STYLE_CONTENT_MIN_MAX_INC;
               max: BUTTON_CIRCLE_STYLE_CONTENT_MIN_MAX_INC;
               fixed: 1 1;
               rel1 {
                  relative: 1.0 1.0;
                  to: "left_top_padding";
               }
               rel2 {
                  relative: 0.0 0.0;
                  to: "right_bottom_padding";
               }
            }
         }
         part { name: "icon_clipper";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               color_class: "F032L1";
            }
            description { state: "pressed" 0.0;
               color_class: "F032L1P";
            }
            description { state: "disabled" 0.0;
               color_class: "F032L1D";
            }
         }
         part { name: "focus_image";
            scale: 1;
            mouse_events: 0;
            repeat_events: 1;
              description { state: "default" 0.0;
                 min: BUTTON_CIRCLE_STYLE_BG_MIN_MAX_INC;
                 max: BUTTON_CIRCLE_STYLE_BG_MIN_MAX_INC;
                 visible: 0;
                 rel1.to : "button_image";
                 rel2.to : "button_image";
                 image {
                  normal: "00_circle_button_focus.png";
               }
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color_class: "W161";
            }
         }
         part { name: "over1";
            type: RECT;
            ignore_flags: ON_HOLD;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part { name: "over2";
            type: RECT;
            repeat_events: 1;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part { name: "disabler";
            type: RECT;
            description { state: "default" 0.0;
               color: 0 0 0 0;
               visible: 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
      }
      programs {
         program { name: "button_press";
            signal: "mouse,down,1*";
            source: "over1";
            script {
               if ((get_int(multi_down) == 0) && (get_int(mouse_down) == 0))
                 {
                     set_int(mouse_down, 1);
                     run_program(PROGRAM:"button_press2");
                 }
            }
         }
         program { name: "button_press2";
            action: SIGNAL_EMIT "elm,action,press" "";
            after: "button_press_anim";
         }
         program { name: "button_press_anim";
            action: STATE_SET "pressed" 0.0;
            target: "button_bg";
            target: "icon_clipper";
         }
         program { name: "key_press";
            signal: "elm,action,pressed";
            source: "elm";
            action: STATE_SET "pressed" 0.0;
            target: "button_bg";
            target: "icon_clipper";
         }
         program { name: "key_unpress";
            signal: "elm,action,unpressed";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "button_bg";
            target: "icon_clipper";
         }
         program { name: "button_click";
            signal: "mouse,clicked,1";
            source: "over1";
            script {
               if (get_int(multi_down) == 0) {
                 run_program(PROGRAM:"play_sound");
                 run_program(PROGRAM:"button_click2");
               }
            }
         }
         program { name: "play_sound";
            action: RUN_PLUGIN "touch_sound";
         }
         program { name: "button_click2";
            action: SIGNAL_EMIT "elm,action,click" "";
         }
         program { name: "button_unpress";
            signal: "mouse,up,1*";
            source: "over2";
            script {
               if (get_int(mouse_down) == 1)
                 {
                    set_int(mouse_down, 0);
                    run_program(PROGRAM:"button_unpress2");
                    run_program(PROGRAM:"button_unpress_anim");
                 }
            }
         }
         program { name: "button_unpress2";
            action: SIGNAL_EMIT "elm,action,unpress" "";
         }
         program { name: "button_unpress_anim";
            action: STATE_SET "default" 0.0;
            target: "button_bg";
            target: "icon_clipper";
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "disabler";
            target: "icon_clipper";
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "disabler";
            target: "icon_clipper";
         }
         program { name: "action_focus";
            signal: "elm,action,focus_highlight,show";
            source: "elm";
            action: STATE_SET "focused" 0.0;
            target: "focus_image";
         }
         program { name: "action_unfocus";
            signal: "elm,action,focus_highlight,hide";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "focus_image";
         }
         program {
            name: "multi_down";
            signal: "elm,action,multi,down";
            source: "elm";
            script {
               set_int(multi_down, 1);
            }
         }
         program {
            name: "multi_up";
            signal: "elm,action,multi,up";
            source: "elm";
            script {
               set_int(multi_down, 0);
            }
         }
      }
   }

///////////////////////////////////////////////////////////////////////////////////////
#define BUTTON_EDIT_STYLES(style_name, image_normal, image_effect, min_width, min_height) \
   group { name: "elm/button/base/"style_name; \
      data { \
         item: "focus_highlight" "on"; \
      } \
      images { \
         image: image_normal COMP; \
         image: image_effect COMP; \
         image: 00_circle_button_focus.png COMP;\
      } \
      script { \
         public mouse_down = 0; \
         public multi_down = 0; \
      } \
      parts { \
         part { name: "button_image"; \
            type: RECT; \
            scale: 1; \
            description { state: "default" 0.0; \
               min: BUTTON_EDIT_STYLE_BG_NORMAL_MIN_MAX_INC; \
               max: BUTTON_EDIT_STYLE_BG_NORMAL_MIN_MAX_INC; \
               color: 0 0 0 0; \
            } \
         } \
         part { name: "button_center_part"; \
            mouse_events: 0; \
            scale: 1; \
            description { state: "default" 0.0; \
               min: BUTTON_EDIT_STYLE_IMAGE_NORMAL_MIN_MAX_INC; \
               max: BUTTON_EDIT_STYLE_IMAGE_NORMAL_MIN_MAX_INC; \
               image.normal: image_normal; \
               color_class: "F032L1"; \
            } \
            description { state: "pressed" 0.0; \
               inherit: "default" 0.0; \
               color_class: "F032L1P"; \
            } \
            description { state: "disabled" 0.0; \
               inherit: "default" 0.0; \
               color_class: "F032L1D"; \
            } \
         } \
         part { name: "button_center_part_effect"; \
            mouse_events: 0; \
            scale: 1; \
            description { state: "default" 0.0; \
               min: BUTTON_EDIT_STYLE_IMAGE_NORMAL_MIN_MAX_INC; \
               max: BUTTON_EDIT_STYLE_IMAGE_NORMAL_MIN_MAX_INC; \
               image.normal: image_effect; \
               color_class: "F032L3"; \
            } \
         } \
         part { name: "focus_image"; \
            scale: 1; \
            mouse_events: 0; \
            repeat_events: 1; \
              description { state: "default" 0.0; \
                 min: BUTTON_CIRCLE_STYLE_BG_MIN_MAX_INC; \
                 max: BUTTON_CIRCLE_STYLE_BG_MIN_MAX_INC; \
                 visible: 0; \
                 rel1.to : "button_image"; \
                 rel2.to : "button_image"; \
                 image.normal: "00_circle_button_focus.png"; \
                 color_class: "W161"; \
            } \
            description { state: "focused" 0.0; \
               inherit: "default" 0.0; \
               visible: 1; \
            } \
         } \
         part { name: "over1"; \
            type: RECT; \
            repeat_events: 1; \
            ignore_flags: ON_HOLD; \
            description { state: "default" 0.0; \
               color: 0 0 0 0; \
               min: min_width min_height; \
            } \
         } \
         part { name: "over2"; \
            type: RECT; \
            repeat_events: 1; \
            description { state: "default" 0.0; \
               color: 0 0 0 0; \
            } \
         } \
         part { name: "disabler"; \
            type: RECT; \
            description { state: "default" 0.0; \
               color: 0 0 0 0; \
               visible: 0; \
            } \
            description { state: "disabled" 0.0; \
               inherit: "default" 0.0; \
               visible: 1; \
            } \
         } \
      } \
      programs { \
         program { name: "button_press"; \
            signal: "mouse,down,1*"; \
            source: "over1"; \
            script { \
               if ((get_int(multi_down) == 0) && (get_int(mouse_down) == 0)) \
                 { \
                     set_int(mouse_down, 1); \
                     run_program(PROGRAM:"button_press2"); \
                 } \
            } \
         } \
         program { name: "button_press2"; \
            action: SIGNAL_EMIT "elm,action,press" ""; \
            after: "button_press_anim"; \
         } \
         program { name: "button_press_anim"; \
            action: STATE_SET "pressed" 0.0; \
            target: "button_center_part"; \
         } \
         program { name: "key_press"; \
            signal: "elm,action,pressed"; \
            source: "elm"; \
            action: STATE_SET "pressed" 0.0; \
            target: "button_center_part"; \
         } \
         program { name: "key_unpress"; \
            signal: "elm,action,unpressed"; \
            source: "elm"; \
            action: STATE_SET "default" 0.0; \
            target: "button_center_part"; \
         } \
         program { name: "button_unpress"; \
            signal: "mouse,up,1*"; \
            source: "over2"; \
            script { \
               if (get_int(mouse_down) == 1) \
                 { \
                    set_int(mouse_down, 0); \
                    run_program(PROGRAM:"button_unpress2"); \
                    run_program(PROGRAM:"button_unpress_anim"); \
                 } \
            } \
         } \
         program { name: "button_unpress2"; \
            action: SIGNAL_EMIT "elm,action,unpress" ""; \
         } \
         program { name: "button_unpress_anim"; \
            action: STATE_SET "default" 0.0; \
            target: "button_center_part"; \
         } \
         program { name: "button_click"; \
            signal: "mouse,clicked,1"; \
            source: "over1"; \
            script { \
               if (get_int(multi_down) == 0) { \
                 run_program(PROGRAM:"play_sound"); \
                 run_program(PROGRAM:"button_click2"); \
               } \
            } \
         } \
         program { name: "play_sound"; \
            action: RUN_PLUGIN "touch_sound"; \
         } \
         program { name: "button_click2"; \
            action: SIGNAL_EMIT "elm,action,click" ""; \
         } \
         program { name: "disable"; \
            signal: "elm,state,disabled"; \
            source: "elm"; \
            action: STATE_SET "disabled" 0.0; \
            target: "disabler"; \
            target: "button_center_part"; \
         } \
         program { name: "enable"; \
            signal: "elm,state,enabled"; \
            source: "elm"; \
            action: STATE_SET "default" 0.0; \
            target: "disabler"; \
            target: "button_center_part"; \
         } \
         program { name: "action_focus"; \
            signal: "elm,action,focus_highlight,show"; \
            source: "elm"; \
            action: STATE_SET "focused" 0.0; \
            target: "focus_image"; \
         } \
         program { name: "action_unfocus"; \
            signal: "elm,action,focus_highlight,hide"; \
            source: "elm"; \
            action: STATE_SET "default" 0.0; \
            target: "focus_image"; \
         } \
         program { \
            name: "multi_down"; \
            signal: "elm,action,multi,down"; \
            source: "elm"; \
            script { \
               set_int(multi_down, 1); \
            } \
         } \
         program { \
            name: "multi_up"; \
            signal: "elm,action,multi,up"; \
            source: "elm"; \
            script { \
               set_int(multi_down, 0); \
            } \
         } \
      } \
   }

///////////////////////////////////////////////////////////////////////////////////////
   BUTTON_EDIT_STYLES("icon_expand/extended", "00_button_expand_closed.png", "00_button_expand_closed_ef.png", BUTTON_EDIT_EXTENDED_MIN_WIDTH_INC, BUTTON_EDIT_EXTENDED_MIN_HEIGHT_INC)

///////////////////////////////////////////////////////////////////////////////////////
   BUTTON_EDIT_STYLES("icon_expand_closed", "00_button_expand_closed.png", "00_button_expand_closed_ef.png", BUTTON_EDIT_NORMAL_MIN_WIDTH_INC, BUTTON_EDIT_NORMAL_MIN_HEIGHT_INC)

///////////////////////////////////////////////////////////////////////////////////////
   BUTTON_EDIT_STYLES("icon_expand_opened", "00_button_expand_opened.png", "00_button_expand_opened_ef.png", BUTTON_EDIT_NORMAL_MIN_WIDTH_INC, BUTTON_EDIT_NORMAL_MIN_HEIGHT_INC)

///////////////////////////////////////////////////////////////////////////////////////

#define BUTTON_EDIT_MINUS_STYLES(style_name, image_normal, image_effect, min_width, min_height) \
   group { name: "elm/button/base/"style_name; \
      inherit: "elm/button/base/icon_expand_closed"; \
      images { \
         image: image_normal COMP; \
         image: image_effect COMP; \
         image: 00_circle_button_focus.png COMP;\
      } \
      parts { \
         part { name: "button_image"; \
            type: RECT; \
            scale: 1; \
            description { state: "default" 0.0; \
               min: BUTTON_EDIT_STYLE_BG_NORMAL_MIN_MAX_INC; \
               max: BUTTON_EDIT_STYLE_BG_NORMAL_MIN_MAX_INC; \
               color: 0 0 0 0; \
            } \
         } \
         part { name: "button_center_part"; \
            mouse_events: 0; \
            scale: 1; \
            description { state: "default" 0.0; \
               min: BUTTON_EDIT_STYLE_IMAGE_NORMAL_MIN_MAX_INC; \
               max: BUTTON_EDIT_STYLE_IMAGE_NORMAL_MIN_MAX_INC; \
               image.normal: image_normal; \
               color_class: "F032L21"; \
            } \
            description { state: "pressed" 0.0; \
               inherit: "default" 0.0; \
               color_class: "F031L1P"; \
            } \
            description { state: "disabled" 0.0; \
               inherit: "default" 0.0; \
               color_class: "F032L21D"; \
            } \
         } \
         part { name: "button_center_part_effect"; \
            mouse_events: 0; \
            scale: 1; \
            description { state: "default" 0.0; \
               min: BUTTON_EDIT_STYLE_IMAGE_NORMAL_MIN_MAX_INC; \
               max: BUTTON_EDIT_STYLE_IMAGE_NORMAL_MIN_MAX_INC; \
               image.normal: image_effect; \
               color_class: F032L3; \
            } \
         } \
         part { name: "focus_image"; \
            scale: 1; \
            mouse_events: 0; \
            repeat_events: 1; \
              description { state: "default" 0.0; \
                 min: BUTTON_CIRCLE_STYLE_BG_MIN_MAX_INC; \
                 max: BUTTON_CIRCLE_STYLE_BG_MIN_MAX_INC; \
                 visible: 0; \
                 rel1.to : "button_image"; \
                 rel2.to : "button_image"; \
                 image.normal: "00_circle_button_focus.png"; \
                 color_class: "W161"; \
            } \
            description { state: "focused" 0.0; \
               inherit: "default" 0.0; \
               visible: 1; \
            } \
         } \
         part { name: "over1"; \
            type: RECT; \
            repeat_events: 1; \
            ignore_flags: ON_HOLD; \
            description { state: "default" 0.0; \
               color: 0 0 0 0; \
               min: min_width min_height; \
            } \
         } \
      } \
   }

///////////////////////////////////////////////////////////////////////////////////////
   BUTTON_EDIT_MINUS_STYLES("icon_minus", "00_button_delete.png", "00_button_delete_ef.png", BUTTON_EDIT_NORMAL_MIN_WIDTH_INC, BUTTON_EDIT_NORMAL_MIN_HEIGHT_INC)

///////////////////////////////////////////////////////////////////////////////////////
   BUTTON_EDIT_MINUS_STYLES("icon_minus/extended", "00_button_delete.png", "00_button_delete_ef.png", BUTTON_EDIT_EXTENDED_MIN_WIDTH_INC, BUTTON_EDIT_EXTENDED_MIN_HEIGHT_INC)

///////////////////////////////////////////////////////////////////////////////////////

#define BUTTON_EDIT_PLUS_STYLES(style_name, image_normal, image_effect, min_width, min_height) \
   group { name: "elm/button/base/"style_name; \
      inherit: "elm/button/base/icon_expand_closed"; \
      images { \
         image: image_normal COMP; \
         image: image_effect COMP; \
         image: 00_circle_button_focus.png COMP;\
      } \
      parts { \
         part { name: "button_image"; \
            type: RECT; \
            scale: 1; \
            description { state: "default" 0.0; \
               min: BUTTON_EDIT_STYLE_BG_NORMAL_MIN_MAX_INC; \
               max: BUTTON_EDIT_STYLE_BG_NORMAL_MIN_MAX_INC; \
               color: 0 0 0 0; \
            } \
         } \
         part { name: "button_center_part"; \
            mouse_events: 0; \
            scale: 1; \
            description { state: "default" 0.0; \
               min: BUTTON_EDIT_STYLE_IMAGE_NORMAL_MIN_MAX_INC; \
               max: BUTTON_EDIT_STYLE_IMAGE_NORMAL_MIN_MAX_INC; \
               image.normal: image_normal; \
               color_class: "F032L2"; \
            } \
            description { state: "pressed" 0.0; \
               inherit: "default" 0.0; \
               color_class: "F031L1P"; \
            } \
            description { state: "disabled" 0.0; \
               inherit: "default" 0.0; \
               color_class: "F032L2D"; \
            } \
         } \
         part { name: "button_center_part_effect"; \
            mouse_events: 0; \
            scale: 1; \
            description { state: "default" 0.0; \
               min: BUTTON_EDIT_STYLE_IMAGE_NORMAL_MIN_MAX_INC; \
               max: BUTTON_EDIT_STYLE_IMAGE_NORMAL_MIN_MAX_INC; \
               image.normal: image_effect; \
               color_class: F032L3; \
            } \
         } \
         part { name: "focus_image"; \
            scale: 1; \
            mouse_events: 0; \
            repeat_events: 1; \
              description { state: "default" 0.0; \
                 min: BUTTON_CIRCLE_STYLE_BG_MIN_MAX_INC; \
                 max: BUTTON_CIRCLE_STYLE_BG_MIN_MAX_INC; \
                 visible: 0; \
                 rel1.to : "button_image"; \
                 rel2.to : "button_image"; \
                 image.normal: "00_circle_button_focus.png"; \
                 color_class: "W161"; \
            } \
            description { state: "focused" 0.0; \
               inherit: "default" 0.0; \
               visible: 1; \
            } \
         } \
         part { name: "over1"; \
            type: RECT; \
            repeat_events: 1; \
            ignore_flags: ON_HOLD; \
            description { state: "default" 0.0; \
               color: 0 0 0 0; \
               min: min_width min_height; \
            } \
         } \
      } \
   }
///////////////////////////////////////////////////////////////////////////////////////
   BUTTON_EDIT_PLUS_STYLES("icon_plus", "00_button_add.png", "00_button_add_ef.png", BUTTON_EDIT_NORMAL_MIN_WIDTH_INC, BUTTON_EDIT_NORMAL_MIN_HEIGHT_INC)

///////////////////////////////////////////////////////////////////////////////////////
   BUTTON_EDIT_PLUS_STYLES("icon_plus/extended", "00_button_add.png", "00_button_add_ef.png", BUTTON_EDIT_EXTENDED_MIN_WIDTH_INC, BUTTON_EDIT_EXTENDED_MIN_HEIGHT_INC)

///////////////////////////////////////////////////////////////////////////////////////

#define BUTTON_SCROLL_JUMPTO(style_name, image_normal)\
   group { name: "elm/button/base/"style_name; \
      data { \
         item: "focus_highlight" "on"; \
      } \
      images { \
         image: image_normal COMP; \
         image: "00_button_01_bg_ef.#.png" COMP; \
         image: "00_button_01_bg_dim_ef.#.png" COMP; \
         image: "00_button_01_bg_focus.#.png" COMP; \
      }\
      script { \
         public mouse_down = 0; \
         public multi_down = 0; \
      } \
      parts { \
         part { name: "left_top_padding"; \
            type: SPACER; \
            scale: 1; \
            description { state: "default" 0.0; \
               min: BUTTON_JUMP_STYLE_BG_PADDING; \
               max: BUTTON_JUMP_STYLE_BG_PADDING; \
               align: 0.0 0.0; \
               fixed: 1 1; \
            } \
         } \
         part { name: "right_bottom_padding"; \
            type: SPACER; \
            scale: 1; \
            description { state: "default" 0.0; \
               min: BUTTON_JUMP_STYLE_BG_PADDING; \
               max: BUTTON_JUMP_STYLE_BG_PADDING; \
               align: 1.0 1.0; \
               fixed: 1 1; \
            } \
         } \
         part { name: "button_image";\
            type: RECT; \
            scale: 1; \
            description { state: "default" 0.0; \
               min: BUTTON_JUMP_STYLE_BG_MIN_INC; \
               rel1.to: "left_top_padding"; \
               rel1.relative: 1.0 1.0; \
               rel2.to: "right_bottom_padding"; \
               rel2.relative: 0.0 0.0; \
               color_class: "W011"; \
            } \
            description { state: "pressed" 0.0; \
               inherit: "default" 0.0; \
               color_class: "B042"; \
            } \
            description { state: "disabled" 0.0; \
               inherit: "default" 0.0; \
               color_class: "W011D"; \
            } \
         } \
         part { name: "button_effect_image";\
            scale: 1; \
            description { state: "default" 0.0; \
               min: BUTTON_JUMP_STYLE_BG_EFFECT_MIN_INC; \
               image { \
                  normal: "00_button_01_bg_ef.#.png"; \
               } \
            } \
            description { state: "pressed" 0.0; \
               inherit: "default" 0.0; \
            } \
            description { state: "disabled" 0.0; \
               inherit: "default" 0.0; \
               image.normal: "00_button_01_bg_dim_ef.#.png"; \
            } \
         } \
         part { name: "focus_image"; \
            scale: 1; \
            mouse_events: 0; \
            repeat_events: 1; \
            description { state: "default" 0.0; \
               visible: 0; \
               rel1.to : "button_image"; \
               rel2.to : "button_image"; \
               image { \
                  normal: "00_button_01_bg_focus.#.png"; \
               } \
               color_class: "W161"; \
            } \
            description { state: "focused" 0.0; \
               inherit: "default" 0.0; \
               visible: 1; \
            } \
         } \
         part { name: "padding_left_top"; \
            type: SPACER; \
            scale: 1; \
            description { state: "default" 0.0; \
               align: 0.0 0.0; \
               rel2.relative: 0.0 0.0; \
               min: BUTTON_JUMP_PADDING_MIN_INC; \
               fixed: 1 1; \
            } \
         } \
         part { name: "padding_right_bottom"; \
            type: SPACER; \
            scale: 1; \
            description { state: "default" 0.0; \
               align: 1.0 1.0; \
               rel1.relative: 1.0 1.0; \
               min: BUTTON_JUMP_PADDING_MIN_INC; \
               fixed: 1 1; \
            } \
         } \
         part { name: "jump_image"; \
            scale: 1; \
            description { state: "default" 0.0; \
               min: BUTTON_JUMP_ICONONLY_ICON_MIN_INC; \
               max: BUTTON_JUMP_ICONONLY_ICON_MIN_INC; \
               rel1 { \
                  relative: 1.0 0.0; \
                  to_x: "padding_left_top"; \
               } \
               rel2 { \
                  relative: 0.0 1.0; \
                  to_x: "padding_right_bottom"; \
               } \
               image.normal: image_normal; \
               aspect: 1.0 1.0; \
               aspect_preference: VERTICAL; \
               color_class: "F032L1"; \
            } \
            description { state: "pressed" 0.0; \
               inherit: "default" 0.0; \
               color_class: "F032L1P"; \
            } \
            description { state: "disabled" 0.0; \
               inherit: "default" 0.0; \
               color_class: "F032L1D"; \
            } \
         } \
         part { name: "jump_effect_image"; \
            scale: 1; \
            description { state: "default" 0.0; \
               min: BUTTON_JUMP_ICONONLY_ICON_MIN_INC; \
               max: BUTTON_JUMP_ICONONLY_ICON_MIN_INC; \
               rel1 { \
                  relative: 1.0 0.0; \
                  to_x: "padding_left_top"; \
               } \
               rel2 { \
                  relative: 0.0 1.0; \
                  to_x: "padding_right_bottom"; \
               } \
               image.normal: image_normal; \
               aspect: 1.0 1.0; \
               aspect_preference: VERTICAL; \
            } \
            description { state: "pressed" 0.0; \
               inherit: "default" 0.0; \
            } \
            description { state: "disabled" 0.0; \
               inherit: "default" 0.0; \
            } \
         } \
         part { name: "over1"; \
            type: RECT; \
            repeat_events: 1; \
            ignore_flags: ON_HOLD; \
            description { state: "default" 0.0; \
               color: 0 0 0 0; \
               rel1.relative: 0.0 0.0; \
               rel2.relative: 1.0 1.0; \
            } \
         } \
         part { name: "over2"; \
            type: RECT; \
            repeat_events: 1; \
            description { state: "default" 0.0; \
               color: 0 0 0 0; \
            } \
         } \
      } \
      programs { \
         program { name: "button_press"; \
            signal: "mouse,down,1*"; \
            source: "over1"; \
            script { \
               if ((get_int(multi_down) == 0) && (get_int(mouse_down) == 0)) \
                 { \
                     set_int(mouse_down, 1); \
                     run_program(PROGRAM:"button_press2"); \
                 } \
            } \
         } \
         program { name: "button_press2"; \
            action: SIGNAL_EMIT "elm,action,press" ""; \
            after: "button_press_anim"; \
         } \
         program { name: "button_press_anim"; \
            action: STATE_SET "pressed" 0.0; \
            target: "button_image"; \
            target: "button_effect_image"; \
            target: "jump_image"; \
            target: "jump_effect_image"; \
         } \
         program { name: "key_press"; \
            signal: "elm,action,pressed"; \
            source: "elm"; \
            action: STATE_SET "pressed" 0.0; \
            target: "button_image"; \
            target: "button_effect_image"; \
            target: "jump_image"; \
            target: "jump_effect_image"; \
         } \
         program { name: "key_unpress"; \
            signal: "elm,action,unpressed"; \
            source: "elm"; \
            action: STATE_SET "default" 0.0; \
            target: "button_image"; \
            target: "button_effect_image"; \
            target: "jump_image"; \
            target: "jump_effect_image"; \
         } \
         program { name: "button_unpress"; \
            signal: "mouse,up,1*"; \
            source: "over2"; \
            script { \
               if (get_int(mouse_down) == 1) \
                 { \
                     set_int(mouse_down, 0); \
                     run_program(PROGRAM:"button_unpress2"); \
                     run_program(PROGRAM:"button_unpress_anim"); \
                  } \
            } \
         } \
         program { name: "button_unpress2"; \
            action: SIGNAL_EMIT "elm,action,unpress" ""; \
         } \
         program { name: "button_unpress_anim"; \
            action: STATE_SET "default" 0.0; \
            target: "button_image"; \
            target: "button_image"; \
            target: "button_effect_image"; \
            target: "jump_image"; \
            target: "jump_effect_image"; \
         } \
         program { name: "button_click"; \
            signal: "mouse,clicked,1"; \
            source: "over1"; \
            script { \
               if (get_int(multi_down) == 0) { \
                 run_program(PROGRAM:"play_sound"); \
                 run_program(PROGRAM:"button_click2"); \
               } \
            } \
         } \
         program { name: "play_sound"; \
            action: RUN_PLUGIN "touch_sound"; \
         } \
         program { name: "button_click2"; \
            action: SIGNAL_EMIT "elm,action,click" ""; \
         } \
         program { name: "disable"; \
            signal: "elm,state,disabled"; \
            source: "elm"; \
            action: STATE_SET "disabled" 0.0; \
            target: "button_image"; \
            target: "button_image"; \
            target: "button_effect_image"; \
            target: "jump_image"; \
            target: "jump_effect_image"; \
         } \
         program { name: "enable"; \
            signal: "elm,state,enabled"; \
            source: "elm"; \
            action: STATE_SET "default" 0.0; \
            target: "button_image"; \
            target: "button_image"; \
            target: "button_effect_image"; \
            target: "jump_image"; \
            target: "jump_effect_image"; \
         } \
         program { name: "action_focus"; \
            signal: "elm,action,focus_highlight,show"; \
            source: "elm"; \
            action: STATE_SET "focused" 0.0; \
            target: "focus_image"; \
         } \
         program { name: "action_unfocus"; \
            signal: "elm,action,focus_highlight,hide"; \
            source: "elm"; \
            action: STATE_SET "default" 0.0; \
            target: "focus_image"; \
         } \
         program { \
            name: "multi_down"; \
            signal: "elm,action,multi,down"; \
            source: "elm"; \
            script { \
               set_int(multi_down, 1); \
            } \
         } \
         program { \
            name: "multi_up"; \
            signal: "elm,action,multi,up"; \
            source: "elm"; \
            script { \
               set_int(multi_down, 0); \
            } \
         } \
      } \
   }

////////////////////////////////////////////////////////////////////////
BUTTON_SCROLL_JUMPTO("jumpto_top", "00_icon_jump.png")
////////////////////////////////////////////////////////////////////////
BUTTON_SCROLL_JUMPTO("jumpto_left", "00_icon_jump_left.png")

///////////////////////////////////////////////////////////////////////////////////////
#define BUTTON_COLORSELECTOR_STYLES(style_name, image_normal, image_effect, image_dim_effect) \
   group { name: "elm/button/base/"style_name; \
      data { \
         item: "focus_highlight" "on"; \
      } \
      images { \
         image: image_normal COMP; \
         image: image_effect COMP; \
         image: image_dim_effect COMP; \
         image: "00_button_01_bg_focus.#.png" COMP; \
      } \
      script { \
         public mouse_down = 0; \
         public multi_down = 0; \
      } \
      parts { \
         part { name: "button_image"; \
            type: RECT; \
            scale: 1; \
            description { state: "default" 0.0; \
               visible: 0; \
               min: BUTTON_COLORSELECTOR_BG_DEFAULT_MIN_INC; \
               max: BUTTON_COLORSELECTOR_BG_DEFAULT_MIN_INC; \
            } \
            description { \
               state: "pressed" 0.0; \
               inherit: "default" 0.0; \
               visible: 1; \
               color_class: "B042"; \
            } \
            description { \
               state: "disabled" 0.0; \
               inherit: "default" 0.0; \
            } \
            description { \
               state: "focused" 0.0; \
               inherit: "default" 0.0; \
            } \
         } \
         part { name: "focus_image"; \
            scale: 1; \
            mouse_events: 0; \
            repeat_events: 1; \
            description { state: "default" 0.0; \
               min: BUTTON_COLORSELECTOR_BG_DEFAULT_MIN_INC; \
               max: BUTTON_COLORSELECTOR_BG_DEFAULT_MIN_INC; \
               visible: 0; \
               rel1.to : "button_image"; \
               rel2.to : "button_image"; \
               image { \
                  normal: "00_button_01_bg_focus.#.png"; \
               } \
               color_class: "W161"; \
            } \
            description { state: "focused" 0.0; \
               inherit: "default" 0.0; \
               visible: 1; \
            } \
         } \
         part { name: "button_center_part"; \
            scale: 1; \
            description { state: "default" 0.0; \
               min: BUTTON_COLORSELECTOR_IMAGE_MIN_MAX_INC; \
               max: BUTTON_COLORSELECTOR_IMAGE_MIN_MAX_INC; \
               image.normal: image_normal; \
               color_class: "F032L1"; \
            } \
            description { state: "pressed" 0.0; \
               inherit: "default" 0.0; \
               color_class: "F032L1P"; \
            } \
            description { state: "disabled" 0.0; \
               inherit: "default" 0.0; \
               color_class: "F032L1D"; \
            } \
         } \
         part { name: "button_center_part_effect"; \
            mouse_events: 0; \
            scale: 1; \
            description { state: "default" 0.0; \
               min: BUTTON_EDIT_STYLE_IMAGE_NORMAL_MIN_MAX_INC; \
               max: BUTTON_EDIT_STYLE_IMAGE_NORMAL_MIN_MAX_INC; \
               image.normal: image_effect; \
               color_class: F032L3; \
            } \
            description { state: "pressed" 0.0; \
               inherit: "default" 0.0; \
               visible: 0; \
            } \
            description { state: "disabled" 0.0; \
               inherit: "default" 0.0; \
               image.normal: image_dim_effect; \
               color_class: F032L4; \
            } \
         } \
         part { name: "over1"; \
            type: RECT; \
            ignore_flags: ON_HOLD; \
            description { state: "default" 0.0; \
               color: 0 0 0 0; \
            } \
         } \
         part { name: "over2"; \
            type: RECT; \
            repeat_events: 1; \
            description { state: "default" 0.0; \
               color: 0 0 0 0; \
            } \
         } \
         part { name: "disabler"; \
            type: RECT; \
            description { state: "default" 0.0; \
               color: 0 0 0 0; \
               visible: 0; \
            } \
            description { state: "disabled" 0.0; \
               inherit: "default" 0.0; \
               visible: 1; \
            } \
         } \
      } \
      programs { \
         program { name: "button_press"; \
            signal: "mouse,down,1*"; \
            source: "over1"; \
            script { \
               if ((get_int(multi_down) == 0) && (get_int(mouse_down) == 0)) \
                 { \
                     set_int(mouse_down, 1); \
                     run_program(PROGRAM:"button_press2"); \
                 } \
            } \
         } \
         program { name: "button_press2"; \
            action: SIGNAL_EMIT "elm,action,press" ""; \
            after: "button_press_anim"; \
         } \
         program { name: "button_press_anim"; \
            action: STATE_SET "pressed" 0.0; \
            target: "button_image"; \
            target: "button_center_part"; \
            target: "button_center_part_effect"; \
         } \
         program { name: "key_press"; \
            signal: "elm,action,pressed"; \
            source: "elm"; \
            action: STATE_SET "pressed" 0.0; \
            target: "button_image"; \
            target: "button_center_part"; \
            target: "button_center_part_effect"; \
         } \
         program { name: "key_unpress"; \
            signal: "elm,action,unpressed"; \
            source: "elm"; \
            action: STATE_SET "default" 0.0; \
            target: "button_image"; \
            target: "button_center_part"; \
            target: "button_center_part_effect"; \
         } \
         program { name: "button_unpress"; \
            signal: "mouse,up,1*"; \
            source: "over2"; \
            script { \
               if (get_int(mouse_down) == 1) \
                 { \
                     set_int(mouse_down, 0); \
                     run_program(PROGRAM:"button_unpress2"); \
                     run_program(PROGRAM:"button_unpress_anim"); \
                  } \
            } \
         } \
         program { name: "button_unpress2"; \
            action: SIGNAL_EMIT "elm,action,unpress" ""; \
         } \
         program { name: "button_unpress_anim"; \
            action: STATE_SET "default" 0.0; \
            target: "button_image"; \
            target: "button_center_part"; \
            target: "button_center_part_effect"; \
         } \
         program { name: "button_click"; \
            signal: "mouse,clicked,1"; \
            source: "over1"; \
            script { \
               if (get_int(multi_down) == 0) { \
                 run_program(PROGRAM:"play_sound"); \
                 run_program(PROGRAM:"button_click2"); \
               } \
            } \
         } \
         program { name: "play_sound"; \
            action: RUN_PLUGIN "touch_sound"; \
         } \
         program { name: "button_click2"; \
            action: SIGNAL_EMIT "elm,action,click" ""; \
         } \
         program { name: "disable"; \
            signal: "elm,state,disabled"; \
            source: "elm"; \
            action: STATE_SET "disabled" 0.0; \
            target: "disabler"; \
            target: "button_image"; \
            target: "button_center_part"; \
            target: "button_center_part_effect"; \
         } \
         program { name: "enable"; \
            signal: "elm,state,enabled"; \
            source: "elm"; \
            action: STATE_SET "default" 0.0; \
            target: "disabler"; \
            target: "button_image"; \
            target: "button_center_part"; \
            target: "button_center_part_effect"; \
         } \
         program { name: "action_focus"; \
            signal: "elm,action,focus_highlight,show"; \
            source: "elm"; \
            action: STATE_SET "focused" 0.0; \
            target: "focus_image"; \
         } \
         program { name: "action_unfocus"; \
            signal: "elm,action,focus_highlight,hide"; \
            source: "elm"; \
            action: STATE_SET "default" 0.0; \
            target: "focus_image"; \
         } \
         program { \
            name: "multi_down"; \
            signal: "elm,action,multi,down"; \
            source: "elm"; \
            script { \
               set_int(multi_down, 1); \
            } \
         } \
         program { \
            name: "multi_up"; \
            signal: "elm,action,multi,up"; \
            source: "elm"; \
            script { \
               set_int(multi_down, 0); \
            } \
         } \
      } \
   }
///////////////////////////////////////////////////////////////////////////////////////
   BUTTON_COLORSELECTOR_STYLES("colorselector/left/default", "00_button_left.png", "00_button_left_ef.png", "00_button_left_dim_ef.png")
///////////////////////////////////////////////////////////////////////////////////////
   BUTTON_COLORSELECTOR_STYLES("colorselector/right/default", "00_button_right.png", "00_button_right_ef.png", "00_button_right_dim_ef.png")
///////////////////////////////////////////////////////////////////////////////////////

   group { name: "elm/button/base/multibuttonentry";
      data {
         item: "focus_highlight" "on";
      }
      images {
         image: "00_contacts_button_bg_ef.#.png" COMP;
         image: "00_contacts_button_focus.#.png" COMP;
      }
      styles{
         style { name: "btn_base_multibuttonentry";
            base: "font=Tizen:style=Regular font_size="BUTTON_CONTACT_FONT_SIZE_INC" align=center color=#FFFFFF color_class=T058 ellipsis=1.0 wrap=none text_class=T058";
            tag: "br" "\n";
            tag: "ps" "ps";
            tag: "tab" "\t";
         }
         style { name: "btn_base_multibuttonentry_pressed";
            base: "font=Tizen:style=Regular font_size="BUTTON_CONTACT_FONT_SIZE_INC" align=center color=#FFFFFF color_class=T058P ellipsis=1.0 wrap=none text_class=T058P";
            tag: "br" "\n";
            tag: "ps" "ps";
            tag: "tab" "\t";
         }
         style { name: "btn_base_multibuttonentry_dim";
            base: "font=Tizen:style=Regular font_size="BUTTON_CONTACT_FONT_SIZE_INC" align=center color=#FFFFFF color_class=T058D ellipsis=1.0 wrap=none text_class=T056D";
            tag: "br" "\n";
            tag: "ps" "ps";
            tag: "tab" "\t";
         }
         style { name: "btn_base_multibuttonentry_focus";
            base: "font=Tizen:style=Regular font_size="BUTTON_CONTACT_FONT_SIZE_INC" align=center color=#FFFFFF color_class=T058 ellipsis=1.0 wrap=none text_class=T058";
            tag: "br" "\n";
            tag: "ps" "ps";
            tag: "tab" "\t";
         }
      }
      script {
         public button_state = BUTTON_STATE_ENABLED;
         public mouse_down = 0;
         public multi_down = 0;
      }
      parts {
         part { name: "button_image";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               rel1 {
                  to_x: "padding.left";
                  to_y: "elm.text";
               }
               rel2 {
                  to_x: "padding.right";
                  to_y: "elm.text";
               }
               min: BUTTON_CONTACT_BG_MIN_INC;
               color_class: "W0711";
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               color_class: "W0711P";
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
            }
         }
         part { name: "button_effect_image";
            scale: 1;
            description { state: "default" 0.0;
               rel1 {
                  to_x: "padding.left";
                  to_y: "elm.text";
               }
               rel2 {
                  to_x: "padding.right";
                  to_y: "elm.text";
               }
               min: BUTTON_CONTACT_BG_MIN_INC;
               image {
                  normal: "00_contacts_button_bg_ef.#.png";
               }
            }
         }
         part { name: "focus_image";
            scale: 1;
            mouse_events: 0;
            repeat_events: 1;
            description { state: "default" 0.0;
               visible: 0;
               rel1.to : "button_image";
               rel2.to : "button_image";
               image {
                  normal: "00_contacts_button_focus.#.png";
               }
               color_class: "W161";
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "padding.left";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               min: BUTTON_CONTACT_LEFT_PADDING_MIN_INC;
               fixed: 1 0;
               rel2 {
                  relative: 0.0 1.0;
                  to_x: "elm.text";
               }
               align: 1.0 0.0;
            }
         }
         part { name: "padding.right";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               min: BUTTON_CONTACT_RIGHT_PADDING_MIN_INC;
               fixed: 1 0;
               rel1 {
                  relative: 1.0 0.0;
                  to_x: "elm.text";
               }
               align: 0.0 0.0;
            }
         }
         part { name: "elm.text";
            type: TEXTBLOCK;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               fixed: 1 1;
               text {
                  style: "btn_base_multibuttonentry";
                  min: 1 1;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               min: 1 1;
            }
            description { state: "pressed" 0.0;
               inherit: "visible" 0.0;
               text {
                  style: "btn_base_multibuttonentry_pressed";
               }
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
            }
            description { state: "disabled_visible" 0.0;
               inherit: "visible" 0.0;
               text {
                  style: "btn_base_multibuttonentry_dim";
                  min: 1 1;
               }
            }
            description { state: "focused" 0.0;
               inherit: "visible" 0.0;
               text {
                  style: "btn_base_multibuttonentry_focus";
                  min: 1 1;
               }
            }
         }
         part { name: "over1";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               rel2.relative: 1.0 0.5;
               color: 0 0 0 0;
            }
         }
         part { name: "over2";
            type: RECT;
            repeat_events: 1;
            ignore_flags: ON_HOLD;
            description { state: "default" 0.0;
               rel1.to: "button_image";
               rel2.to: "button_image";
               color: 0 0 0 0;
            }
         }
         part { name: "over3";
            type: RECT;
            repeat_events: 1;
            description { state: "default" 0.0;
               rel1.to: "button_image";
               rel2.to: "button_image";
               color: 0 0 0 0;
            }
         }
         part { name: "disabler";
            type: RECT;
            description { state: "default" 0.0;
               rel1.to: "button_image";
               rel2.to: "button_image";
               color: 0 0 0 0;
               visible: 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
      }
      programs {
         program { name: "button_press";
            signal: "mouse,down,1*";
            source: "over2";
            script {
               if ((get_int(multi_down) == 0) && (get_int(mouse_down) == 0))
                 {
                     set_int(mouse_down, 1);
                     run_program(PROGRAM:"button_press2");
                 }
            }
         }
         program { name: "button_press2";
            action: SIGNAL_EMIT "elm,action,press" "";
            after: "button_press_anim";
         }
         program { name: "button_press_anim";
            action: STATE_SET "pressed" 0.0;
            target: "button_image";
            target: "elm.text";
         }
         program { name: "key_press";
            signal: "elm,action,pressed";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               set_state(PART:"button_image", "pressed", 0.0);
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "visible"))
                 set_state(PART:"elm.text", "pressed", 0.0);
            }
         }
         program { name: "key_unpress";
            signal: "elm,action,unpressed";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               set_state(PART:"button_image", "default", 0.0);
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "pressed"))
                 set_state(PART:"elm.text", "visible", 0.0);
            }
         }
         program { name: "button_unpress";
            signal: "mouse,up,1*";
            source: "over3";
            script {
               new st[31];
               new Float:vl;
               if (get_int(mouse_down) == 1) {
                 set_int(mouse_down, 0);
                 get_state(PART:"elm.text", st, 30, vl);
                 if (!strcmp(st, "pressed") || !strcmp(st, "focused"))
                   {
                      emit("elm,action,default,text,set", "");
                      set_state(PART:"elm.text", "visible", 0.0);
                   }
                 if (get_int(button_state) != BUTTON_STATE_DISABLED)
                   set_state(PART:"button_image", "default", 0.0);
                 run_program(PROGRAM:"button_unpress2");
               }
            }
         }
         program { name: "button_unpress2";
            action: SIGNAL_EMIT "elm,action,unpress" "";
         }
         program { name: "button_click";
            signal: "mouse,clicked,1";
            source: "over2";
            script {
               if (get_int(multi_down) == 0) {
                 run_program(PROGRAM:"play_sound");
                 run_program(PROGRAM:"button_click2");
               }
            }
         }
         program { name: "play_sound";
            action: RUN_PLUGIN "touch_sound";
         }
         program { name: "button_click2";
            action: SIGNAL_EMIT "elm,action,click" "";
         }
         program { name: "text_show";
            signal: "elm,state,text,visible";
            source: "elm";
            script {
               if (get_int(button_state) != BUTTON_STATE_DISABLED)
                 set_state(PART:"elm.text", "visible", 0.0);
               else
                 set_state(PART:"elm.text", "disabled_visible", 0.0);
            }
         }
         program { name: "text_hide";
            signal: "elm,state,text,hidden";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "elm.text";
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "button_image";
            target: "disabler";
            after: "disable_text";
         }
         program { name: "disable_text";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "visible"))
                 set_state(PART:"elm.text", "disabled_visible", 0.0);
               else
                 set_state(PART:"elm.text", "disabled", 0.0);
               set_int(button_state, BUTTON_STATE_DISABLED);
            }
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "button_image";
            target: "disabler";
            after: "enable_text";
         }
         program { name: "enable_text";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "disabled_visible"))
                 set_state(PART:"elm.text", "visible", 0.0);
               else
                 set_state(PART:"elm.text", "default", 0.0);
               set_int(button_state, BUTTON_STATE_ENABLED);
            }
         }
         program { name: "action_focus";
            signal: "elm,action,focus_highlight,show";
            source: "elm";
            action: STATE_SET "focused" 0.0;
            target: "focus_image";
         }
         program { name: "action_unfocus";
            signal: "elm,action,focus_highlight,hide";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "focus_image";
         }
         program {
            name: "multi_down";
            signal: "elm,action,multi,down";
            source: "elm";
            script {
               set_int(multi_down, 1);
            }
         }
         program {
            name: "multi_up";
            signal: "elm,action,multi,up";
            source: "elm";
            script {
               set_int(multi_down, 0);
            }
         }
      }
   }

///////////////////////////////////////////////////////////////////////////////////////
   group { name: "elm/button/base/naviframe/back_btn/default";
      alias: "elm/button/base/naviframe/prev_btn/default";
      alias: "elm/button/base/naviframe/end_btn/default";
      data {
         item: "focus_highlight" "on";
      }
      images {
         image: "00_icon_back.png" COMP;
         image: "00_icon_SIP_close.png" COMP;
         image: "00_focus_01.#.png" COMP;
      }
      parts {
         part { name: "button_image";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               min: BUTTON_NAVIFRAME_BACK_BUTTON_BG_MIN_MAX_INC;
               max: BUTTON_NAVIFRAME_BACK_BUTTON_BG_MIN_MAX_INC;
            }
            description { state: "landscape" 0.0;
               min: BUTTON_NAVIFRAME_LANDSCAPE_BACK_BUTTON_BG_MIN_MAX_INC;
               max: BUTTON_NAVIFRAME_LANDSCAPE_BACK_BUTTON_BG_MIN_MAX_INC;
            }
         }
         part { name: "focus_image";
            scale: 1;
            mouse_events: 0;
            repeat_events: 1;
            description { state: "default" 0.0;
               visible: 0;
               rel1.to : "button_image";
               rel2.to : "button_image";
               image.normal: "00_focus_01.#.png";
               color_class: "W161";
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "back_button";
            scale: 1;
            mouse_events: 0;
            clip_to: "back_button.clipper";
            description { state: "default" 0.0;
               min: BUTTON_NAVIFRAME_BACK_BUTTON_MIN_MAX_INC;
               max: BUTTON_NAVIFRAME_BACK_BUTTON_MIN_MAX_INC;
               fixed: 1 1;
               rel1.to: "button_image";
               rel2.to: "button_image";
               image.normal: "00_icon_back.png";
            }
            description { state: "compress" 0.0;
               inherit: "default" 0.0;
               image.normal: "00_icon_SIP_close.png";
            }
         }
         part { name: "back_button.clipper";
            type: RECT;
            description { state: "default" 0.0;
               color: BUTTON_NAVIFRAME_TITLE_ICON_CLIPPER_DEFAULT_COLOR_INC;
            }
            description { state: "pressed" 0.0;
               color: BUTTON_NAVIFRAME_TITLE_ICON_CLIPPER_PRESSED_COLOR_INC;
            }
            description { state: "disabled" 0.0;
               color: BUTTON_NAVIFRAME_TITLE_ICON_CLIPPER_DISABLED_COLOR_INC;
            }
         }
         part { name: "over2";
            type: RECT;
            ignore_flags: ON_HOLD;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part { name: "over3";
            type: RECT;
            repeat_events: 1;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part { name: "disabler";
            type: RECT;
            description { state: "default" 0.0;
               color: 0 0 0 0;
               visible: 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
      }
      programs {
         program { name: "button_press";
            signal: "mouse,down,1*";
            source: "over2";
            action: SIGNAL_EMIT "elm,action,press" "";
            after: "button_press_anim";
         }
         program { name: "button_press_anim";
            script {
               set_state(PART:"back_button.clipper", "pressed", 0.0);
            }
         }
         program { name: "key_press";
            signal: "elm,action,pressed";
            source: "elm";
            action: STATE_SET "pressed" 0.0;
            target: "back_button.clipper";
         }
         program { name: "key_unpress";
            signal: "elm,action,unpressed";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "back_button.clipper";
         }
         program { name: "button_unpress";
            signal: "mouse,up,1*";
            source: "over3";
            action: SIGNAL_EMIT "elm,action,unpress" "";
            after: "button_unpress_anim";
         }
         program { name: "button_unpress_anim";
            script {
               set_state(PART:"back_button.clipper", "default", 0.0);
            }
         }
         program { name: "button_click";
            signal: "mouse,clicked,1";
            source: "over2";
            action: RUN_PLUGIN "touch_sound";
            after: "button_click2";
         }
         program { name: "button_click2";
            action: SIGNAL_EMIT "elm,action,click" "";
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            script {
               set_state(PART:"back_button.clipper", "disabled", 0.0);
            }
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            script {
               set_state(PART:"back_button.clipper", "default", 0.0);
            }
         }
         program { name: "change_to_landscape";
            action: STATE_SET "landscape" 0.0;
            target: "button_image";
         }
         program { name: "change_to_portrait";
            action: STATE_SET "default" 0.0;
            target: "button_image";
         }
         program { name: "landscape_mode";
            source: "elm";
            signal: "elm,state,orient,90";
            after: "change_to_landscape";
         }
         program { name: "landscape_mode2";
            source: "elm";
            signal: "elm,state,orient,270";
            after: "change_to_landscape";
         }
         program { name: "portrait_mode";
            source: "elm";
            signal: "elm,state,orient,0";
            after: "change_to_portrait";
         }
         program { name: "portrait_mode2";
            source: "elm";
            signal: "elm,state,orient,180";
            after: "change_to_portrait";
         }
         program { name: "display_compress_mode";
            signal: "elm,state,display,compress";
            source: "elm";
            action: STATE_SET "compress" 0.0;
            target: "back_button";
         }
         program { name: "display_default_mode";
            signal: "elm,state,display,default";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "back_button";
         }
         program { name: "action_focus";
            signal: "elm,action,focus_highlight,show";
            source: "elm";
            action: STATE_SET "focused" 0.0;
            target: "focus_image";
         }
         program { name: "action_unfocus";
            signal: "elm,action,focus_highlight,hide";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "focus_image";
         }
      }
   }

////////////////////////////////////////////////////////////////////
   group { name: "elm/button/base/naviframe/title_icon";
      data {
         item: "focus_highlight" "on";
      }
      images {
         image: "00_focus_01.#.png" COMP;
      }
      script {
         public mouse_down = 0;
         public multi_down = 0;
      }
      parts {
         part { name: "button_bg";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               min: BUTTON_NAVIFRAME_TITLE_ICON_BG_W_INC 0;
               max: BUTTON_NAVIFRAME_TITLE_ICON_BG_W_INC -1;
            }
         }
         part { name: "button_image";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               rel1 { to: "button_bg"; }
               rel2 { to: "button_bg"; }
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color_class: "B0511P";
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
            }
         }
         part { name: "focus_image";
            scale: 1;
            mouse_events: 0;
            repeat_events: 1;
            description { state: "default" 0.0;
               visible: 0;
               rel1 { to: "button_bg"; }
               rel2 { to: "button_bg"; }
               color_class: "W161";
               image.normal: "00_focus_01.#.png";
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            clip_to: "elm.swallow.content_clip";
            description { state: "default" 0.0;
               visible: 0;
               max: BUTTON_NAVIFRAME_TITLE_ICON_IMAGE_MIN_MAX_INC;
               align: 0.5 0.5;
               rel1 { to: "button_bg"; }
               rel2 { to: "button_bg"; }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "elm.swallow.content_clip";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               rel1.to: "elm.swallow.content";
               rel2.to: "elm.swallow.content";
               color_class: "B052L1";
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               color_class: "B052L1P";
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color_class: "B052L1D";
            }
         }
         part { name: "over2";
            type: RECT;
            ignore_flags: ON_HOLD;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part { name: "over3";
            type: RECT;
            repeat_events: 1;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part { name: "disabler";
            type: RECT;
            description { state: "default" 0.0;
               color: 0 0 0 0;
               visible: 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
      }
      programs {
         program { name: "button_press";
            signal: "mouse,down,1*";
            source: "over2";
            script {
               if ((get_int(multi_down) == 0) && (get_int(mouse_down) == 0))
                 {
                     set_int(mouse_down, 1);
                     run_program(PROGRAM:"button_press2");
                 }
            }
         }
         program { name: "button_press2";
            action: SIGNAL_EMIT "elm,action,press" "";
            after: "button_press_anim";
         }
         program { name: "button_press_anim";
            script {
               set_state(PART:"button_image", "pressed", 0.0);
               set_state(PART:"elm.swallow.content_clip", "pressed", 0.0);
            }
         }
         program { name: "key_press";
            signal: "elm,action,pressed";
            source: "elm";
            action: STATE_SET "pressed" 0.0;
            target: "button_image";
            target: "elm.swallow.content_clip";
         }
         program { name: "key_unpress";
            signal: "elm,action,unpressed";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "button_image";
            target: "elm.swallow.content_clip";
         }
         program { name: "button_unpress";
            signal: "mouse,up,1*";
            source: "over3";
            script {
               if (get_int(mouse_down) == 1)
                 {
                    set_int(mouse_down, 0);
                    set_state(PART:"button_image", "default", 0.0);
                    set_state(PART:"elm.swallow.content_clip", "default", 0.0);
                    run_program(PROGRAM:"button_unpress2");
                 }
            }
         }
         program { name: "button_unpress2";
            action: SIGNAL_EMIT "elm,action,unpress" "";
         }
         program { name: "button_click";
            signal: "mouse,clicked,1";
            source: "over2";
            script {
               if (get_int(multi_down) == 0) {
                 run_program(PROGRAM:"play_sound");
                 run_program(PROGRAM:"button_click2");
               }
            }
         }
         program { name: "play_sound";
            action: RUN_PLUGIN "touch_sound";
         }
         program { name: "button_click2";
            action: SIGNAL_EMIT "elm,action,click" "";
         }
         program { name: "icon_show";
            signal: "elm,state,icon,visible";
            source: "elm";
            action: STATE_SET "visible" 0.0;
            target: "elm.swallow.content";
         }
         program { name: "icon_hide";
            signal: "elm,state,icon,hidden";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "elm.swallow.content";
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            script {
               set_state(PART:"disabler", "disabled", 0.0);
               set_state(PART:"button_image", "disabled", 0.0);
               set_state(PART:"elm.swallow.content_clip", "disabled", 0.0);
            }
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            script {
               set_state(PART:"disabler", "default", 0.0);
               set_state(PART:"button_image", "default", 0.0);
               set_state(PART:"elm.swallow.content_clip", "default", 0.0);
            }
         }
         program { name: "action_focus";
            signal: "elm,action,focus_highlight,show";
            source: "elm";
            action: STATE_SET "focused" 0.0;
            target: "focus_image";
         }
         program { name: "action_unfocus";
            signal: "elm,action,focus_highlight,hide";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "focus_image";
         }
         program {
            name: "multi_down";
            signal: "elm,action,multi,down";
            source: "elm";
            script {
               set_int(multi_down, 1);
            }
         }
         program {
            name: "multi_up";
            signal: "elm,action,multi,up";
            source: "elm";
            script {
               set_int(multi_down, 0);
            }
         }
      }
   }

////////////////////////////////////////////////////////////////////
   group { name: "elm/button/base/naviframe/drawers";
      data {
         item: "focus_highlight" "on";
      }
      images {
         image: "00_focus_01.#.png" COMP;
         image: "00_icon_drawers.png" COMP;
         image: "00_drawers_title_bg_press.#.png" COMP;
      }
      script {
         public mouse_down = 0;
         public multi_down = 0;
      }
      parts {
         part { name: "button_bg";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               min: BUTTON_NAVIFRAME_DRAWERS_BG_W_INC 0;
               max: -1 -1;
            }
         }
         part { name: "button_image";
            type: IMAGE;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               rel1 { to: "button_bg"; }
               rel2 { to: "button_bg"; }
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color_class: "B0511P";
               image.normal: "00_drawers_title_bg_press.#.png";
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
            }
         }
         part { name: "focus_image";
            scale: 1;
            mouse_events: 0;
            repeat_events: 1;
            description { state: "default" 0.0;
               visible: 0;
               rel1 { to: "button_bg"; }
               rel2 { to: "button_bg"; }
               color_class: "W161";
               image.normal: "00_focus_01.#.png";
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "left_padding";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               min: BUTTON_NAVIFRAME_DRAWERS_LEFT_PADDING_W_INC 0;
               max: BUTTON_NAVIFRAME_DRAWERS_LEFT_PADDING_W_INC -1;
               align: 0.0 0.5;
               fixed: 1 0;
               rel1 { relative: 0.0 0.0; to: "button_bg"; }
               rel2 { relative: 0.0 1.0; to: "button_bg"; }
            }
         }
         part { name: "drawer_image";
            type: IMAGE;
            scale: 1;
            description { state: "default" 0.0;
               min: BUTTON_NAVIFRAME_DRAWERS_IMAGE_MIN_MAX_INC;
               max: BUTTON_NAVIFRAME_DRAWERS_IMAGE_MIN_MAX_INC;
               align: 0.0 0.5;
               fixed: 1 1;
               rel1 { relative: 1.0 0.0; to_x: "left_padding"; to_y: "button_bg"; }
               rel2 { relative: 1.0 1.0; to_x: "left_padding"; to_y: "button_bg"; }
               color_class: "B052L1";
               image.normal: "00_icon_drawers.png";
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               color_class: "B052L1P";
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color_class: "B052L1D";
            }
         }
         part { name: "over2";
            type: RECT;
            ignore_flags: ON_HOLD;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part { name: "over3";
            type: RECT;
            repeat_events: 1;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part { name: "disabler";
            type: RECT;
            description { state: "default" 0.0;
               color: 0 0 0 0;
               visible: 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
      }
      programs {
         program { name: "button_press";
            signal: "mouse,down,1*";
            source: "over2";
            script {
               if ((get_int(multi_down) == 0) && (get_int(mouse_down) == 0))
                 {
                     set_int(mouse_down, 1);
                     run_program(PROGRAM:"button_press2");
                 }
            }
         }
         program { name: "button_press2";
            action: SIGNAL_EMIT "elm,action,press" "";
            after: "button_press_anim";
         }
         program { name: "button_press_anim";
            script {
               set_state(PART:"button_image", "pressed", 0.0);
               set_state(PART:"drawer_image", "pressed", 0.0);
            }
         }
         program { name: "key_press";
            signal: "elm,action,pressed";
            source: "elm";
            action: STATE_SET "pressed" 0.0;
            target: "button_image";
            target: "drawer_image";
         }
         program { name: "key_unpress";
            signal: "elm,action,unpressed";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "button_image";
            target: "drawer_image";
         }
         program { name: "button_unpress";
            signal: "mouse,up,1*";
            source: "over3";
            script {
               if (get_int(mouse_down) == 1)
                 {
                    set_int(mouse_down, 0);
                    set_state(PART:"button_image", "default", 0.0);
                    set_state(PART:"drawer_image", "default", 0.0);
                    run_program(PROGRAM:"button_unpress2");
                 }
            }
         }
         program { name: "button_unpress2";
            action: SIGNAL_EMIT "elm,action,unpress" "";
         }
         program { name: "button_click";
            signal: "mouse,clicked,1";
            source: "over2";
            script {
               if (get_int(multi_down) == 0) {
                 run_program(PROGRAM:"play_sound");
                 run_program(PROGRAM:"button_click2");
               }
            }
         }
         program { name: "play_sound";
            action: RUN_PLUGIN "touch_sound";
         }
         program { name: "button_click2";
            action: SIGNAL_EMIT "elm,action,click" "";
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            script {
               set_state(PART:"disabler", "disabled", 0.0);
               set_state(PART:"button_image", "disabled", 0.0);
               set_state(PART:"drawer_image", "disabled", 0.0);
            }
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            script {
               set_state(PART:"disabler", "default", 0.0);
               set_state(PART:"button_image", "default", 0.0);
               set_state(PART:"drawer_image", "default", 0.0);
            }
         }
         program { name: "action_focus";
            signal: "elm,action,focus_highlight,show";
            source: "elm";
            action: STATE_SET "focused" 0.0;
            target: "focus_image";
         }
         program { name: "action_unfocus";
            signal: "elm,action,focus_highlight,hide";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "focus_image";
         }
         program {
            name: "multi_down";
            signal: "elm,action,multi,down";
            source: "elm";
            script {
               set_int(multi_down, 1);
            }
         }
         program {
            name: "multi_up";
            signal: "elm,action,multi,up";
            source: "elm";
            script {
               set_int(multi_down, 0);
            }
         }
      }
   }
////////////////////////////////////////////////////////////////////
   group { name: "elm/button/base/naviframe/title_text";
      styles{
         style { name: "naviframe_btn_style";
            base: "font=Tizen:style=Regular font_size="BUTTON_CONTACT_FONT_SIZE_INC" align=center color=#FFFFFF color_class=T0205 ellipsis=1.0 wrap=none text_class=T0205";
            tag: "br" "\n";
            tag: "ps" "ps";
            tag: "tab" "\t";
         }
         style { name: "naviframe_btn_style_pressed";
            base: "font=Tizen:style=Regular font_size="BUTTON_CONTACT_FONT_SIZE_INC" align=center color=#FFFFFF color_class=T0205P ellipsis=1.0 wrap=none text_class=T0205P";
            tag: "br" "\n";
            tag: "ps" "ps";
            tag: "tab" "\t";
         }
         style { name: "naviframe_btn_style_disabled";
            base: "font=Tizen:style=Regular font_size="BUTTON_CONTACT_FONT_SIZE_INC" align=center color=#FFFFFF color_class=T0205D ellipsis=1.0 wrap=none text_class=T0205D";
            tag: "br" "\n";
            tag: "ps" "ps";
            tag: "tab" "\t";
         }
      }
      data {
         item: "focus_highlight" "on";
      }
      images {
         image: "00_focus_01.#.png" COMP;
      }
      script {
         public mouse_down = 0;
         public multi_down = 0;
      }
      parts {
         part { name: "button_bg";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               min: BUTTON_NAVIFRAME_TITLE_TEXT_BG_MIN_W_INC 0;
               max: BUTTON_NAVIFRAME_TITLE_TEXT_BG_MAX_W_INC -1;
            }
         }
         part { name: "button_image";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               rel1 { to: "button_bg"; }
               rel2 { to: "button_bg"; }
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color_class: "B0511P";
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
            }
         }
         part { name: "focus_image";
            scale: 1;
            mouse_events: 0;
            repeat_events: 1;
            description { state: "default" 0.0;
               visible: 0;
               rel1 { to: "button_bg"; }
               rel2 { to: "button_bg"; }
               image.normal: "00_focus_01.#.png";
               color_class: "W161";
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "left_padding";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               min: BUTTON_NAVIFRAME_TITLE_TEXT_LEFT_PADDING_INC 0;
               max: BUTTON_NAVIFRAME_TITLE_TEXT_LEFT_PADDING_INC -1;
               align: 0.0 0.5;
               fixed: 1 0;
               rel1 { relative: 0.0 0.0; to: "button_bg"; }
               rel2 { relative: 0.0 1.0; to: "button_bg"; }
            }
         }
         part { name: "right_padding";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               min: BUTTON_NAVIFRAME_TITLE_TEXT_LEFT_PADDING_INC 0;
               max: BUTTON_NAVIFRAME_TITLE_TEXT_LEFT_PADDING_INC -1;
               align: 1.0 0.5;
               fixed: 1 0;
               rel1 { relative: 1.0 0.0; to: "button_bg"; }
               rel2 { relative: 1.0 1.0; to: "button_bg"; }
            }
         }
         part { name: "elm.text";
            type: TEXTBLOCK;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               min: BUTTON_NAVIFRAME_TITLE_TEXT_TEXTBLOCK_MIN_W_INC 0;
               max: BUTTON_NAVIFRAME_TITLE_TEXT_TEXTBLOCK_MAX_W_INC -1;
               rel1 { relative: 1.0 0.0; to: "left_padding"; }
               rel2 { relative: 0.0 1.0; to: "right_padding"; }
               text {
                  style: "naviframe_btn_style";
                  min: 1 0;
                  max: 0 1;
               }
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               text {
                  style: "naviframe_btn_style_pressed";
                  min: 1 0;
                  max: 0 1;
               }
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               text {
                  style: "naviframe_btn_style_disabled";
                  min: 1 0;
                  max: 0 1;
               }
            }
         }
         part { name: "over2";
            type: RECT;
            ignore_flags: ON_HOLD;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part { name: "over3";
            type: RECT;
            repeat_events: 1;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part { name: "disabler";
            type: RECT;
            description { state: "default" 0.0;
               color: 0 0 0 0;
               visible: 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
      }
      programs {
         program { name: "button_press";
            signal: "mouse,down,1*";
            source: "over2";
            script {
               if ((get_int(multi_down) == 0) && (get_int(mouse_down) == 0))
                 {
                     set_int(mouse_down, 1);
                     run_program(PROGRAM:"button_press2");
                 }
            }
         }
         program { name: "button_press2";
            action: SIGNAL_EMIT "elm,action,press" "";
            after: "button_press_anim";
         }
         program { name: "button_press_anim";
            action: STATE_SET "pressed" 0.0;
            target: "button_image";
            target: "elm.text";
         }
         program { name: "button_unpress";
            signal: "mouse,up,1*";
            source: "over3";
            script {
               if (get_int(mouse_down) == 1)
                 {
                    set_int(mouse_down, 0);
                    run_program(PROGRAM:"button_unpress2");
                    run_program(PROGRAM:"button_unpress_anim");
                 }
            }
         }
         program { name: "button_unpress2";
            action: SIGNAL_EMIT "elm,action,unpress" "";
         }
         program { name: "button_unpress_anim";
            action: STATE_SET "default" 0.0;
            target: "button_image";
            target: "elm.text";
         }
         program { name: "key_press";
            signal: "elm,action,pressed";
            source: "elm";
            action: STATE_SET "pressed" 0.0;
            target: "button_image";
            target: "elm.text";
         }
         program { name: "key_unpress";
            signal: "elm,action,unpressed";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "button_image";
            target: "elm.text";
         }
         program { name: "button_click";
            signal: "mouse,clicked,1";
            source: "over2";
            script {
               if (get_int(multi_down) == 0) {
                 run_program(PROGRAM:"play_sound");
                 run_program(PROGRAM:"button_click2");
               }
            }
         }
         program { name: "play_sound";
            action: RUN_PLUGIN "touch_sound";
         }
         program { name: "button_click2";
            action: SIGNAL_EMIT "elm,action,click" "";
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "disabler";
            target: "button_image";
            target: "elm.text";
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "disabler";
            target: "button_image";
            target: "elm.text";
         }
         program { name: "action_focus";
            signal: "elm,action,focus_highlight,show";
            source: "elm";
            action: STATE_SET "focused" 0.0;
            target: "focus_image";
         }
         program { name: "action_unfocus";
            signal: "elm,action,focus_highlight,hide";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "focus_image";
         }
         program {
            name: "multi_down";
            signal: "elm,action,multi,down";
            source: "elm";
            script {
               set_int(multi_down, 1);
            }
         }
         program {
            name: "multi_up";
            signal: "elm,action,multi,up";
            source: "elm";
            script {
               set_int(multi_down, 0);
            }
         }
      }
   }

/////////////////////////////////////////////////////////////////////////////////////////
   group { name: "elm/button/base/naviframe/more/default";
      data {
         item: "focus_highlight" "on";
      }
      images {
         image: "00_icon_more.png" COMP;
         image: "00_focus_01.#.png" COMP;
      }
      parts {
         part { name: "button_image";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               min: BUTTON_NAVIFRAME_MORE_BG_MIN_MAX_INC;
               max: BUTTON_NAVIFRAME_MORE_BG_MIN_MAX_INC;
            }
            description { state: "landscape" 0.0;
               min: BUTTON_NAVIFRAME_LANDSCAPE_MORE_BG_MIN_MAX_INC;
               max: BUTTON_NAVIFRAME_LANDSCAPE_MORE_BG_MIN_MAX_INC;
            }
         }
         part { name: "focus_image";
            scale: 1;
            mouse_events: 0;
            repeat_events: 1;
            description { state: "default" 0.0;
               visible: 0;
               rel1.to : "button_image";
               rel2.to : "button_image";
               image.normal: "00_focus_01.#.png";
               color_class: "W161";
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "more_image";
            scale: 1;
            mouse_events: 0;
            clip_to: "more_image.clipper";
            description { state: "default" 0.0;
               min: BUTTON_NAVIFRAME_MORE_DEFAULT_IMAGE_MIN_MAX_INC;
               max: BUTTON_NAVIFRAME_MORE_DEFAULT_IMAGE_MIN_MAX_INC;
               fixed: 1 1;
               rel1.to: "button_image";
               rel2.to: "button_image";
               image.normal: "00_icon_more.png";
            }
         }
         part { name: "more_image.clipper";
            type: RECT;
            description { state: "default" 0.0;
               color: BUTTON_NAVIFRAME_TITLE_ICON_CLIPPER_DEFAULT_COLOR_INC;
            }
            description { state: "pressed" 0.0;
               color: BUTTON_NAVIFRAME_TITLE_ICON_CLIPPER_PRESSED_COLOR_INC;
            }
            description { state: "disabled" 0.0;
               color: BUTTON_NAVIFRAME_TITLE_ICON_CLIPPER_DISABLED_COLOR_INC;
            }
         }
         part { name: "over2";
            type: RECT;
            ignore_flags: ON_HOLD;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part { name: "over3";
            type: RECT;
            repeat_events: 1;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part { name: "disabler";
            type: RECT;
            description { state: "default" 0.0;
               color: 0 0 0 0;
               visible: 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
      }
      programs {
         program { name: "button_press";
            signal: "mouse,down,1*";
            source: "over2";
            action: SIGNAL_EMIT "elm,action,press" "";
            after: "button_press_anim";
         }
         program { name: "button_press_anim";
            script {
               set_state(PART:"more_image.clipper", "pressed", 0.0);
            }
         }
         program { name: "button_unpress";
            signal: "mouse,up,1*";
            source: "over3";
            action: SIGNAL_EMIT "elm,action,unpress" "";
            after: "button_unpress_anim";
         }
         program { name: "button_unpress_anim";
            script {
               set_state(PART:"more_image.clipper", "default", 0.0);
            }
         }
         program { name: "button_click";
            signal: "mouse,clicked,1";
            source: "over2";
            action: RUN_PLUGIN "touch_sound";
            after: "button_click2";
         }
         program { name: "button_click2";
            action: SIGNAL_EMIT "elm,action,click" "";
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            script {
               set_state(PART:"disabler", "disabled", 0.0);
               set_state(PART:"more_image.clipper", "disabled", 0.0);
            }
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            script {
               set_state(PART:"disabler", "default", 0.0);
               set_state(PART:"more_image.clipper", "default", 0.0);
            }
         }
         program { name: "change_to_landscape";
            action: STATE_SET "landscape" 0.0;
            target: "button_image";
         }
         program { name: "change_to_portrait";
            action: STATE_SET "default" 0.0;
            target: "button_image";
         }
         program { name: "landscape_mode";
            source: "elm";
            signal: "elm,state,orient,90";
            after: "change_to_landscape";
         }
         program { name: "landscape_mode2";
            source: "elm";
            signal: "elm,state,orient,270";
            after: "change_to_landscape";
         }
         program { name: "portrait_mode";
            source: "elm";
            signal: "elm,state,orient,0";
            after: "change_to_portrait";
         }
         program { name: "portrait_mode2";
            source: "elm";
            signal: "elm,state,orient,180";
            after: "change_to_portrait";
         }
         program { name: "action_focus";
            signal: "elm,action,focus_highlight,show";
            source: "elm";
            action: STATE_SET "focused" 0.0;
            target: "focus_image";
         }
         program { name: "action_unfocus";
            signal: "elm,action,focus_highlight,hide";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "focus_image";
         }
      }
   }

///////////////////////////////////////////////////////////////////////////////////////
   group { name: "elm/button/base/expandable_number";
      data {
         item: "focus_highlight" "on";
      }
      images {
         image: "00_button_01_bg_ef.#.png" COMP;
         image: "00_button_01_bg_dim_ef.#.png" COMP;
         image: "00_arrow_expand.png" COMP;
         image: "00_button_01_bg_focus.#.png" COMP;
      }
      styles{
         style { name: "btn_base_exapandable_number";
            base: "font=Tizen:style=Regular font_size="BUTTON_EXPANDABLE_NUMBER_FONT_SIZE_INC" align=center color=#FFFFFF color_class=T0511 ellipsis=1.0 wrap=none text_class=T0511";
            tag: "br" "\n";
            tag: "ps" "ps";
            tag: "tab" "\t";
         }
         style { name: "btn_base_exapandable_number_pressed";
            base: "font=Tizen:style=Regular font_size="BUTTON_EXPANDABLE_NUMBER_FONT_SIZE_INC" align=center color=#FFFFFF color_class=T0511P ellipsis=1.0 wrap=none text_class=T0511P";
            tag: "br" "\n";
            tag: "ps" "ps";
            tag: "tab" "\t";
         }
         style { name: "btn_base_exapandable_number_dim";
            base: "font=Tizen:style=Regular font_size="BUTTON_EXPANDABLE_NUMBER_FONT_SIZE_INC" align=center color=#FFFFFF color_class=T0511D ellipsis=1.0 wrap=none text_class=T0511D";
            tag: "br" "\n";
            tag: "ps" "ps";
            tag: "tab" "\t";
         }
         style { name: "btn_base_exapandable_number_focus";
            base: "font=Tizen:style=Regular font_size="BUTTON_EXPANDABLE_NUMBER_FONT_SIZE_INC" align=center color=#FFFFFF color_class=T0511S ellipsis=1.0 wrap=none text_class=T0511S";
            tag: "br" "\n";
            tag: "ps" "ps";
            tag: "tab" "\t";
         }
      }
      script {
         public button_state = BUTTON_STATE_ENABLED;
         public mouse_down = 0;
         public multi_down = 0;
      }
      parts {
         part { name: "left_top_padding";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               min: BUTTON_EXPANDABLE_NUMBER_BG_PADDING;
               max: BUTTON_EXPANDABLE_NUMBER_BG_PADDING;
               align: 0.0 0.0;
               fixed: 1 1;
            }
         }
         part { name: "right_bottom_padding";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               min: BUTTON_EXPANDABLE_NUMBER_BG_PADDING;
               max: BUTTON_EXPANDABLE_NUMBER_BG_PADDING;
               align: 1.0 1.0;
               fixed: 1 1;
            }
         }
         part { name: "button_image";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               min: BUTTON_EXPANDABLE_NUMBER_BG_NORMAL_MIN_MAX_INC;
               max: BUTTON_EXPANDABLE_NUMBER_BG_NORMAL_MIN_MAX_INC;
               rel1.to: "left_top_padding";
               rel1.relative: 1.0 1.0;
               rel2.to: "right_bottom_padding";
               rel2.relative: 0.0 0.0;
               color_class: "W011";
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               color_class: "B042";
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color_class: "W011D";
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
            }
         }
         part { name: "button_effect_image";
            scale: 1;
            description { state: "default" 0.0;
               min: BUTTON_EXPANDABLE_NUMBER_BG_EFFECT_MIN_MAX_INC;
               max: BUTTON_EXPANDABLE_NUMBER_BG_EFFECT_MIN_MAX_INC;
               image {
                  normal: "00_button_01_bg_ef.#.png";
               }
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               image.normal: "00_button_01_bg_dim_ef.#.png";
            }
         }
         part { name: "focus_image";
            scale: 1;
            mouse_events: 0;
            repeat_events: 1;
            description { state: "default" 0.0;
               min: BUTTON_EXPANDABLE_NUMBER_BG_NORMAL_MIN_MAX_INC;
               max: BUTTON_EXPANDABLE_NUMBER_BG_NORMAL_MIN_MAX_INC;
               visible: 0;
               rel1.to : "button_image";
               rel2.to : "button_image";
               image {
                  normal: "00_button_01_bg_focus.#.png";
               }
               color_class: "W161";
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "padding_left_top";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               align: 0.0 0.0;
               rel2.relative: 0.0 0.0;
               min: BUTTON_EXPANDABLE_NUMBER_PADDING_MIN_INC;
               fixed: 1 1;
            }
         }
         part { name: "padding_right_bottom";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               align: 1.0 1.0;
               rel1.relative: 1.0 1.0;
               min: BUTTON_EXPANDABLE_NUMBER_PADDING_MIN_INC;
               fixed: 1 1;
            }
         }
         part { name: "icon_rect";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               min: BUTTON_EXPANDABLE_NUMBER_ICON_RECT_EXPAND_MIN_MAX_INC;
               max: BUTTON_EXPANDABLE_NUMBER_ICON_RECT_EXPAND_MIN_MAX_INC;
               fixed: 1 0;
               rel1 {
                  relative: 0.0 1.0;
                  to_x: "padding_right_bottom";
                  to_y: "padding_left_top";
               }
               rel2 {
                  relative: 0.0 0.0;
                  to: "padding_right_bottom";
               }
               align: 1.0 0.5;
            }
         }
         part { name: "arrow_expand";
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               align: 0.0 0.5;
               min: BUTTON_EXPANDABLE_NUMBER_ICON_RECT_EXPAND_MIN_MAX_INC;
               max: BUTTON_EXPANDABLE_NUMBER_ICON_RECT_EXPAND_MIN_MAX_INC;
               fixed: 0 0;
               rel1.to: "icon_rect";
               rel2.to: "icon_rect";
               image.normal:"00_arrow_expand.png";
               color_class: "F031L1";
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               color_class: "F031L1P";
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color_class: "F031L1D";
            }
         }
         part { name: "elm.text";
            type: TEXTBLOCK;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               min: BUTTON_EXPANDABLE_NUMBER_TEXT_MIN_MAX_INC;
               max: BUTTON_EXPANDABLE_NUMBER_TEXT_MIN_MAX_INC;
               fixed:1 0;
               rel1 {
                  relative: 1.0 1.0;
                  to: "padding_left_top";
               }
               rel2 {
                  relative: 1.0 1.0;
                  to_x:"padding_left_top";
                  to_y:"padding_right_bottom";
               }
               align: 0.0 0.5;
               text {
                  style: "btn_base_exapandable_number";
                  min: 0 0;
                  fit: 1 1;
                  size_range: 28 32;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               text {
                  style: "btn_base_exapandable_number_pressed";
                  min: 0 0;
                  fit: 1 1;
                  size_range: 28 32;
               }
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
            }
            description { state: "disabled_visible" 0.0;
               inherit: "default" 0.0;
               text {
                  style: "btn_base_exapandable_number_dim";
               }
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
               text {
                  style: "btn_base_exapandable_number_focus";
               }
            }
         }
         part { name: "over2";
            type: RECT;
            repeat_events: 1;
            ignore_flags: ON_HOLD;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part { name: "over3";
            type: RECT;
            repeat_events: 1;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part { name: "disabler";
            type: RECT;
            description { state: "default" 0.0;
               color: 0 0 0 0;
               visible: 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
      }
      programs {
         program { name: "button_press";
            signal: "mouse,down,1*";
            source: "over2";
            script {
               if ((get_int(multi_down) == 0) && (get_int(mouse_down) == 0))
                 {
                     set_int(mouse_down, 1);
                     run_program(PROGRAM:"button_press2");
                 }
            }
         }
         program { name: "button_press2";
            action: SIGNAL_EMIT "elm,action,press" "";
            after: "button_press_anim";
         }
         program { name: "button_press_anim";
            action: STATE_SET "pressed" 0.0;
            target: "button_image";
            target: "button_effect_image";
            target: "arrow_expand";
            after: "text_press";
         }
         program { name: "text_press";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "visible"))
                 set_state(PART:"elm.text", "pressed", 0.0);
            }
         }
         program { name: "button_unpress";
            signal: "mouse,up,1*";
            source: "over3";
            script {
               if (get_int(mouse_down) == 1) {
                 set_int(mouse_down, 0);
                 if (get_int(button_state) != BUTTON_STATE_DISABLED)
                   {
                      set_state(PART:"button_image", "default", 0.0);
                      set_state(PART:"button_effect_image", "default", 0.0);
                      set_state(PART:"arrow_expand", "default", 0.0);
                      set_state(PART:"elm.text", "visible", 0.0);
                   }
                 run_program(PROGRAM:"button_unpress2");
               }
            }
         }
         program { name: "button_unpress2";
            action: SIGNAL_EMIT "elm,action,unpress" "";
         }
         program { name: "key_press";
            signal: "elm,action,pressed";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               set_state(PART:"button_image", "pressed", 0.0);
               set_state(PART:"button_effect_image", "pressed", 0.0);
               set_state(PART:"arrow_expand", "pressed", 0.0);
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "visible"))
                 set_state(PART:"elm.text", "pressed", 0.0);
            }
         }
         program { name: "key_unpress";
            signal: "elm,action,unpressed";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               set_state(PART:"button_image", "default", 0.0);
               set_state(PART:"button_effect_image", "default", 0.0);
               set_state(PART:"arrow_expand", "default", 0.0);
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "pressed"))
                 set_state(PART:"elm.text", "visible", 0.0);
            }
         }
         program { name: "button_click";
            signal: "mouse,clicked,1";
            source: "over2";
            script {
               if (get_int(multi_down) == 0) {
                 run_program(PROGRAM:"play_sound");
                 run_program(PROGRAM:"button_click2");
               }
            }
         }
         program { name: "play_sound";
            action: RUN_PLUGIN "touch_sound";
         }
         program { name: "button_click2";
            action: SIGNAL_EMIT "elm,action,click" "";
         }
         program { name: "text_show";
            signal: "elm,state,text,visible";
            source: "elm";
            script {
               if (get_int(button_state) != BUTTON_STATE_DISABLED)
                 set_state(PART:"elm.text", "visible", 0.0);
               else
                 set_state(PART:"elm.text", "disabled_visible", 0.0);
            }
         }
         program { name: "text_hide";
            signal: "elm,state,text,hidden";
            source: "elm";
            script {
               set_state(PART:"elm.text", "default", 0.0);
            }
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "button_image";
            target: "button_effect_image";
            target: "arrow_expand";
            target: "disabler";
            after: "disable_text";
         }
         program { name: "disable_text";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "visible"))
                 set_state(PART:"elm.text", "disabled_visible", 0.0);
               else
                 set_state(PART:"elm.text", "disabled", 0.0);
               set_int(button_state, BUTTON_STATE_DISABLED);
            }
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "button_image";
            target: "button_effect_image";
            target: "arrow_expand";
            target: "disabler";
            after: "enable_text";
         }
         program { name: "enable_text";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "disabled_visible"))
                 set_state(PART:"elm.text", "visible", 0.0);
               else
                 set_state(PART:"elm.text", "default", 0.0);
               set_int(button_state, BUTTON_STATE_ENABLED);
            }
         }
         program { name: "action_focus";
            signal: "elm,action,focus_highlight,show";
            source: "elm";
            action: STATE_SET "focused" 0.0;
            target: "focus_image";
         }
         program { name: "action_unfocus";
            signal: "elm,action,focus_highlight,hide";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "focus_image";
         }
         program {
            name: "multi_down";
            signal: "elm,action,multi,down";
            source: "elm";
            script {
               set_int(multi_down, 1);
            }
         }
         program {
            name: "multi_up";
            signal: "elm,action,multi,up";
            source: "elm";
            script {
               set_int(multi_down, 0);
            }
         }
      }
   }

//////////////////////////////////////////////////////////////////////////////////////
   group { name: "elm/button/base/editfield_clear";
      images {
         image: "00_edit_field_clear.png" COMP;
      }
      script {
         public mouse_down = 0;
         public multi_down = 0;
      }
      parts {
         part { name: "bg";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               min: BUTTON_EDITFIELD_CLEAR_BUTTON_MIN_MAX_INC;
               max: BUTTON_EDITFIELD_CLEAR_BUTTON_MIN_MAX_INC;
            }
         }
         part { name: "button_image";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
            }
         }
         part { name: "clear_button";
            scale: 1;
            mouse_events: 0;
            clip_to: "clear_button.clipper";
            description { state: "default" 0.0;
               min: BUTTON_EDITFIELD_CLEAR_BUTTON_IMAGE_MIN_MAX_INC;
               max: BUTTON_EDITFIELD_CLEAR_BUTTON_IMAGE_MIN_MAX_INC;
               align: 0.5 0.5;
               image.normal: "00_edit_field_clear.png";
            }
         }
         part { name: "clear_button.clipper";
            type: RECT;
            description { state: "default" 0.0;
               color_class: "F053";
            }
            description { state: "pressed" 0.0;
               color_class: "F053P";
            }
            description { state: "disabled" 0.0;
               color_class: "F053D";
            }
         }
         part { name: "over2";
            type: RECT;
            ignore_flags: ON_HOLD;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part { name: "over3";
            type: RECT;
            repeat_events: 1;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part { name: "disabler";
            type: RECT;
            description { state: "default" 0.0;
               color: 0 0 0 0;
               visible: 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
      }
      programs {
         program { name: "button_press";
            signal: "mouse,down,1*";
            source: "over2";
            script {
               if ((get_int(multi_down) == 0) && (get_int(mouse_down) == 0))
                 {
                     set_int(mouse_down, 1);
                     run_program(PROGRAM:"button_press2");
                 }
            }
         }
         program { name: "button_press2";
            action: SIGNAL_EMIT "elm,action,press" "";
            after: "button_press_anim";
         }
         program { name: "button_press_anim";
            action: STATE_SET "pressed" 0.0;
            target: "button_image";
            target: "clear_button.clipper";
         }
         program { name: "button_unpress";
            signal: "mouse,up,1*";
            source: "over3";
            script {
               if (get_int(mouse_down) == 1)
                 {
                     set_int(mouse_down, 0);
                     run_program(PROGRAM:"button_unpress2");
                     run_program(PROGRAM:"button_unpress_anim");
                  }
            }
         }
         program { name: "button_unpress2";
            action: SIGNAL_EMIT "elm,action,unpress" "";
         }
         program { name: "button_unpress_anim";
            action: STATE_SET "default" 0.0;
            target: "button_image";
            target: "clear_button.clipper";
         }
         program { name: "button_click";
            signal: "mouse,clicked,1";
            source: "over2";
            script {
               if (get_int(multi_down) == 0) {
                 run_program(PROGRAM:"play_sound");
                 run_program(PROGRAM:"button_click2");
               }
            }
         }
         program { name: "play_sound";
            action: RUN_PLUGIN "touch_sound";
         }
         program { name: "button_click2";
            action: SIGNAL_EMIT "elm,action,click" "";
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "button_image";
            target: "disabler";
            target: "clear_button.clipper";
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "button_image";
            target: "disabler";
            target: "clear_button.clipper";
         }
         program {
            name: "multi_down";
            signal: "elm,action,multi,down";
            source: "elm";
            script {
               set_int(multi_down, 1);
            }
         }
         program {
            name: "multi_up";
            signal: "elm,action,multi,up";
            source: "elm";
            script {
               set_int(multi_down, 0);
            }
         }
      }
   }

#define BUTTON_DEFAULT_FOCUS_STYLES(style_name, image_normal) \
   group { name: "elm/button/base/"style_name; \
      data { \
         item: "focus_highlight" "on"; \
      } \
      images { \
         image: image_normal COMP; \
      } \
      script { \
         public mouse_down = 0; \
         public multi_down = 0; \
      } \
      parts { \
         part { name: "elm.swallow.content"; \
            type: SWALLOW; \
            scale: 1; \
            description { state: "default" 0.0; \
            } \
         } \
         part { name: "focus_image"; \
            scale: 1; \
            mouse_events: 0; \
            repeat_events: 1; \
            description { state: "default" 0.0; \
               visible: 0; \
               image.normal: image_normal; \
               color_class: "W161"; \
            } \
            description { state: "focused" 0.0; \
               inherit: "default" 0.0; \
               visible: 1; \
            } \
         } \
         part { name: "over2"; \
            type: RECT; \
            repeat_events: 1; \
            ignore_flags: ON_HOLD; \
            description { state: "default" 0.0; \
               color: 0 0 0 0; \
            } \
         } \
         part { name: "over3"; \
            type: RECT; \
            repeat_events: 1; \
            description { state: "default" 0.0; \
               color: 0 0 0 0; \
            } \
         } \
      } \
      programs { \
         program { name: "button_press"; \
            signal: "mouse,down,1*"; \
            source: "over2"; \
            script { \
               if ((get_int(multi_down) == 0) && (get_int(mouse_down) == 0)) \
                 { \
                     set_int(mouse_down, 1); \
                     emit("elm,action,press", ""); \
                 } \
            } \
         } \
         program { name: "button_unpress"; \
            signal: "mouse,up,1*"; \
            source: "over3"; \
            script { \
               if (get_int(mouse_down) == 1) \
                 { \
                     set_int(mouse_down, 0); \
                     emit("elm,action,unpress", ""); \
                  } \
            } \
         } \
         program { name: "button_click"; \
            signal: "mouse,clicked,1"; \
            source: "over2"; \
            script { \
               if (get_int(multi_down) == 0) { \
                 emit("elm,action,click", ""); \
               } \
            } \
         } \
         program { name: "action_focus"; \
            signal: "elm,action,focus_highlight,show"; \
            source: "elm"; \
            action: STATE_SET "focused" 0.0; \
            target: "focus_image"; \
         } \
         program { name: "action_unfocus"; \
            signal: "elm,action,focus_highlight,hide"; \
            source: "elm"; \
            action: STATE_SET "default" 0.0; \
            target: "focus_image"; \
         } \
         program { \
            name: "multi_down"; \
            signal: "elm,action,multi,down"; \
            source: "elm"; \
            script { \
               set_int(multi_down, 1); \
            } \
         } \
         program { \
            name: "multi_up"; \
            signal: "elm,action,multi,up"; \
            source: "elm"; \
            script { \
               set_int(multi_down, 0); \
            } \
         } \
      } \
   } \

BUTTON_DEFAULT_FOCUS_STYLES("focus", "00_focus_01.#.png")
BUTTON_DEFAULT_FOCUS_STYLES("focus_top", "00_focus_01.#.png")
BUTTON_DEFAULT_FOCUS_STYLES("focus_center", "00_focus_01.#.png")
BUTTON_DEFAULT_FOCUS_STYLES("focus_bottom", "00_focus_01.#.png")

///////////////////////////////////////////////////////////////////////////////////
   group { name: "elm/button/base/transparent";
      data {
         item: "focus_highlight" "on";
      }
      script {
         public mouse_down = 0;
         public multi_down = 0;
      }
      parts {
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
            }
         }
         part { name: "over2";
            type: RECT;
            repeat_events: 1;
            ignore_flags: ON_HOLD;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part { name: "over3";
            type: RECT;
            repeat_events: 1;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
      }
      programs {
         program { name: "button_press";
            signal: "mouse,down,1*";
            source: "over2";
            script {
               if ((get_int(multi_down) == 0) && (get_int(mouse_down) == 0))
                 {
                     set_int(mouse_down, 1);
                     emit("elm,action,press", "");
                 }
            }
         }
         program { name: "button_unpress";
            signal: "mouse,up,1*";
            source: "over3";
            script {
               if (get_int(mouse_down) == 1)
                 {
                     set_int(mouse_down, 0);
                     emit("elm,action,unpress", "");
                  }
            }
         }
         program { name: "button_click";
            signal: "mouse,clicked,1";
            source: "over2";
            script {
               if (get_int(multi_down) == 0) {
                 emit("elm,action,click", "");
               }
            }
         }
         program {
            name: "multi_down";
            signal: "elm,action,multi,down";
            source: "elm";
            script {
               set_int(multi_down, 1);
            }
         }
         program {
            name: "multi_up";
            signal: "elm,action,multi,up";
            source: "elm";
            script {
               set_int(multi_down, 0);
            }
         }
      }
   }
///////////////////////////////////////////////////////////////////////////////////

   group { name: "elm/button/base/search_clear";
      inherit: "elm/button/base/editfield_clear";
      images {
         image: "00_field_btn_clear.png" COMP;
      }
      parts {
         part { name: "bg";
            type: SPACER;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: BUTTON_SEARCH_CLEAR_BUTTON_MIN_MAX_INC;
               max: BUTTON_SEARCH_CLEAR_BUTTON_MIN_MAX_INC;
            }
         }
         part { name: "clear_button";
            scale: 1;
            mouse_events: 0;
            clip_to: "clear_button.clipper";
            description { state: "default" 0.0;
               min: BUTTON_SEARCH_CLEAR_BUTTON_IMAGE_MIN_MAX_INC;
               max: BUTTON_SEARCH_CLEAR_BUTTON_IMAGE_MIN_MAX_INC;
               align: 0.5 0.5;
               image.normal: "00_field_btn_clear.png";
            }
         }
         part { name: "clear_button.clipper";
            type: RECT;
            description { state: "default" 0.0;
               color_class: "F042i";
            }
            description { state: "pressed" 0.0;
               color_class: "F042iP";
            }
            description { state: "disabled" 0.0;
               color_class: "F042iD";
            }
         }
      }
   }

/******************* SPINNER BUTTONS STYLES **********************/

   group { name: "elm/button/base/spinner/inc_button";
      data.item: "focus_highlight" "on";
      images {
         image: "00_picker_arrow_up.png" COMP;
         image: "00_button_01_bg_focus.#.png" COMP;
      }
      script {
         public mouse_down = 0;
         public multi_down = 0;
      }
      parts {
         part { name: "arrow.image.bg";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               align: 0.5 0.0;
               min: SPINNER_UP_DOWN_BG_IMAGE_SIZE_INC;
               max: SPINNER_UP_DOWN_BG_IMAGE_SIZE_INC;
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               color_class: "B042";
               visible: 1;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
            }
         }
         part { name: "arrow.image";
            scale: 1;
            description { state: "default" 0.0;
               rel1.to: "arrow.image.bg";
               rel2.to: "arrow.image.bg";
               min: SPINNER_UP_DOWN_ARROW_IMAGE_SIZE_INC;
               max: SPINNER_UP_DOWN_ARROW_IMAGE_SIZE_INC;
               color_class: "F032L1";
               image.normal: "00_picker_arrow_up.png";
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               color_class: "F032L1P";
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color_class: "F032L1D";
            }
         }
         part { name: "focus_image";
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               align: 0.5 0.0;
               rel1.to: "arrow.image.bg";
               rel2.to: "arrow.image.bg";
               image.normal: "00_button_01_bg_focus.#.png";
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
               color_class: "W161";
               visible: 1;
            }
         }
         part { name: "over";
            type: RECT;
            repeat_events: 1;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part { name: "disabler";
            type: RECT;
            description { state: "default" 0.0;
               color: 0 0 0 0;
               visible: 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
      }
      programs {
         program { name: "button_press";
            signal: "mouse,down,1*";
            source: "over";
            script {
               if ((get_int(multi_down) == 0) &&
                   (get_int(mouse_down) == 0)) {
                     set_int(mouse_down, 1);
                     run_program(PROGRAM:"button_press2");
               }
            }
         }
         program { name: "button_press2";
            action: SIGNAL_EMIT "elm,action,press" "";
            after: "button_press_anim";
         }
         program { name: "button_press_anim";
            action: STATE_SET "pressed" 0.0;
            target: "arrow.image.bg";
            target: "arrow.image";
         }
         program { name: "button_unpress";
            signal: "mouse,up,1*";
            source: "over";
            script {
               if (get_int(mouse_down) == 1) {
                     set_int(mouse_down, 0);
                     run_program(PROGRAM:"button_unpress2");
                     run_program(PROGRAM:"button_unpress_anim");
               }
            }
         }
         program { name: "button_unpress2";
            action: SIGNAL_EMIT "elm,action,unpress" "";
         }
         program { name: "button_unpress_anim";
            action: STATE_SET "default" 0.0;
            target: "arrow.image.bg";
            target: "arrow.image";
         }
         program { name: "button_click";
            signal: "mouse,clicked,1";
            source: "over";
            script {
               if (get_int(multi_down) == 0) {
                 run_program(PROGRAM:"play_sound");
                 run_program(PROGRAM:"button_click2");
               }
            }
         }
         program { name: "play_sound";
            action: RUN_PLUGIN "touch_sound";
         }
         program { name: "longpress_sound";
            signal: "elm,action,longpress";
            source: "elm";
            action: RUN_PLUGIN "touch_haptic";
         }
         program { name: "action_unpressed";
            signal: "elm,action,unpressed";
            source: "elm";
            after: "button_unpress_anim";
         }
         program { name: "action_pressed";
            signal: "elm,action,pressed";
            source: "elm";
            after: "button_press_anim";
         }
         program { name: "button_click2";
            action: SIGNAL_EMIT "elm,action,click" "";
         }
         program { name: "action_focus";
            signal: "elm,action,focus_highlight,show";
            source: "elm";
            action: STATE_SET "focused" 0.0;
            target: "focus_image";
         }
         program { name: "action_unfocus";
            signal: "elm,action,focus_highlight,hide";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "focus_image";
         }
         program { name: "access_pressed";
            signal: "elm,action,anim,activate";
            source: "elm";
            action: STATE_SET "pressed" 0.0;
            target: "arrow.image.bg";
            target: "arrow.image";
            after: "access_pressed_anim";
         }
         program { name: "access_pressed_anim";
            action: STATE_SET "default" 0.0;
            transition: DECELERATE 0.1;
            target: "arrow.image.bg";
            target: "arrow.image";
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "arrow.image.bg";
            target: "arrow.image";
            target: "disabler";
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "arrow.image.bg";
            target: "arrow.image";
            target: "disabler";
         }
         program {
            name: "multi_down";
            signal: "elm,action,multi,down";
            source: "elm";
            script {
               set_int(multi_down, 1);
            }
         }
         program {
            name: "multi_up";
            signal: "elm,action,multi,up";
            source: "elm";
            script {
               set_int(multi_down, 0);
            }
         }
      }
   }

   group { name: "elm/button/base/spinner/dec_button";
      inherit: "elm/button/base/spinner/inc_button";
      images {
         image: "00_picker_arrow_down.png" COMP;
      }
      parts {
         part { name: "arrow.image";
            scale: 1;
            description { state: "default" 0.0;
               rel1.to: "arrow.image.bg";
               rel2.to: "arrow.image.bg";
               min: SPINNER_UP_DOWN_ARROW_IMAGE_SIZE_INC;
               max: SPINNER_UP_DOWN_ARROW_IMAGE_SIZE_INC;
               color_class: "F032L1";
               image.normal: "00_picker_arrow_down.png";
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               color_class: "F032L1P";
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color_class: "F032L1D";
            }
         }
      }
   }

   group { name: "elm/button/base/spinner/default";
      alias: "elm/button/base/spinner/vertical";
      data.item: "focus_highlight" "on";
      images {
         image: "00_button_01_bg_focus.#.png" COMP;
      }
      parts {
         part { name: "bg";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               min: SPINNER_UP_DOWN_BG_IMAGE_SIZE_INC;
            }
         }
         part { name: "elm.text";
            type: TEXT;
            scale: 1;
            description { state: "default" 0.0;
               visible: 1;
               color_class: "T1232";
               min: 0 SPINNER_TEXT_HEIGHT_INC;
               max: -1 SPINNER_TEXT_HEIGHT_INC;
               rel1.to: "bg";
               rel2.to: "bg";
               text {
                  min: 0 0;
                  max: 1 0;
                  text_class: "T1232";
               }
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0 0 ;
            }
         }
         part { name: "focus_image";
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               rel1.to: "bg";
               rel2.to: "bg";
               image.normal: "00_button_01_bg_focus.#.png";
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
               color_class: "W161";
               visible: 1;
            }
         }
         part { name: "over";
            type: RECT;
            repeat_events: 1;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part { name: "disabler";
            type: RECT;
            description { state: "default" 0.0;
               color: 0 0 0 0;
               visible: 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
      }
      programs {
         program { name: "button_click";
            signal: "mouse,clicked,1";
            source: "over";
            script {
                 run_program(PROGRAM:"play_sound");
                 run_program(PROGRAM:"button_click2");
            }
         }
         program { name: "play_sound";
            action: RUN_PLUGIN "touch_sound";
         }
         program { name: "button_click2";
            action: SIGNAL_EMIT "elm,action,click" "";
         }
         program { name: "action_focus";
            signal: "elm,action,focus_highlight,show";
            source: "elm";
            action: STATE_SET "focused" 0.0;
            target: "focus_image";
         }
         program { name: "action_unfocus";
            signal: "elm,action,focus_highlight,hide";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "focus_image";
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "disabler";
            target: "elm.text";
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "disabler";
            target: "elm.text";
         }
      }
   }
/***********************SPINNER BUTTONS STYLES******************************/

#undef BUTTON_STATE_ENABLED
#undef BUTTON_STATE_DISABLED
#undef BUTTON_LANDSCAPE_DISABLED
#undef BUTTON_LANDSCAPE_ENABLED
