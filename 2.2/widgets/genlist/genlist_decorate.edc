/*
 * Copyright (c) 2010 Samsung Electronics Co., Ltd All Rights Reserved
 *
 * BSD 2-Clause License (http://www.opensource.org/licenses/bsd-license.php)
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *   1. Redistributions of source code must retain the above copyright notice, this
 *      list of conditions and the following disclaimer.
 *   2. Redistributions in binary form must reproduce the above copyright notice,
 *      this list of conditions and the following disclaimer in the documentation
 *      and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * vim:ts=3
 */

// 2.2.7.1 edit mode select all style
   group { GENLIST_NAME("select_all/default")
      alias: "elm/layout/select_all/default";

      PROLOG_LIST

      data.item: "texts" "elm.text";
      data.item: "contents" "elm.icon";

      parts {
         part { name: "bg";
            type: RECT;
            description { state: "default" 0.0;
               color_class: "B0216";
            }
         }
         GENLIST_PART_BASE
         PART_LIST_PADDINGS(
            GENLIST_PADDING_SIZE_LEFT, GENLIST_PADDING_SIZE_RIGHT,
            1, 1 // (82-80)/2
         )
         GENLIST_PART_ICON_CHECK_RADIO_L("elm.icon", "elm.padding.left")
         GENLIST_PART_PADDING_L("elm.padding.icon.right", "elm.icon")
         GENLIST_PART_LISTITEM_("elm.text", 80,
            "elm.padding.icon.right", "elm.padding.right", "elm.padding.top", "elm.padding.bottom",
         )
         GENLIST_PART_FOCUS
      }
      programs {
         program { name: "play_sound";
            signal: "mouse,clicked,1";
            source: "bg";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (strcmp(st, "disabled"))
                  run_program(PROGRAM:"toucn_sound");
            }
         }
         program { name: "toucn_sound";
            action: RUN_PLUGIN "touch_sound";
         }
         GENLIST_PROGRAM_DISABLED( target: "elm.icon"; target: "elm.text"; )
         GENLIST_PROGRAM_FOCUS
      }
   }

// 2.2.7. Genlist Edit mode (rename)
// Should be used as decorate all item style
   group { GENLIST_NAME("edit_default/default")

      PROLOG_LIST_NORMAL

      data.item: "contents" "elm.edit.icon.1 elm.edit.icon.2";

      script {
         public enabling;
         public disabling;
      }
      parts {
         GENLIST_PART_BASE
         PART_LIST_BG_NORMAL
         PART(SWALLOW, "elm.swallow.pad",
            mouse_events: 0;
            DESC_FROM_L( ; )
         )
         PART(SPACER, "elm.padding.left",
            DESC_L("elm.swallow.pad",
               min: GENLIST_PADDING_SIZE_LEFT 0;
               max: GENLIST_PADDING_SIZE_LEFT -1;
               fixed: 1 0;
            )
            description { state: "reorder" 0.0;
               inherit: "default" 0.0;
               min: DIALOGUE_PADDING_SIZE_LEFT 0;
               max: DIALOGUE_PADDING_SIZE_LEFT -1;
            }
         )
         PART(SPACER, "elm.padding.right",
            description { state: "default" 0.0;
               min: GENLIST_PADDING_SIZE_RIGHT 0;
               max: GENLIST_PADDING_SIZE_RIGHT -1;
               fixed: 1 0;
               align: 1.0 0.5;
               rel1 {
                  to: "base";
                  relative: 1 0;
               }
               rel2.to: "base";
            }
            description { state: "reorder" 0.0;
               inherit: "default" 0.0;
               min: DIALOGUE_PADDING_SIZE_RIGHT 0;
               max: DIALOGUE_PADDING_SIZE_RIGHT -1;
            }
         )
         PART(SPACER, "elm.padding.top",
            description { state: "default" 0.0;
               min: 0 0;
               max: 0 -1;
               fixed: 1 0;
               align: 0.5 0.0;
               rel1.to: "base";
               rel2 {
                  to: "base";
                  relative: 1 0;
               }
            }
            description { state: "reorder" 0.0;
               inherit: "default" 0.0;
            }
         )
         PART(SPACER, "elm.padding.bottom",
            description { state: "default" 0.0;
               min: 0 0;
               max: 0 -1;
               fixed: 1 0;
               align: 0.5 1.0;
               rel1 {
                  to: "base";
                  relative: 0 1;
               }
               rel2.to: "base";
            }
            description { state: "reorder" 0.0;
               inherit: "default" 0.0;
            }
         )
         GENLIST_PART_ICON("elm.edit.icon.1",
            DESC_R("elm.padding.left",
               GENLIST_PARAM_ICON_CHECK_RADIO
            )
            description { state: "decorate" 0.0;
               GENLIST_PARAM_ICON_CHECK_RADIO
               align: 0 0.5;
               rel1 {
                  to: "elm.padding.left";
                  relative: 1 0;
               }
               rel2.to: "elm.padding.left";
            }
            description { state: "flipped" 0.0;
               inherit: "default" 0.0;
            }
            description { state: "decorate_flipped" 0.0;
               inherit: "flipped" 0.0;
            }
         )
         GENLIST_PART_PADDING_L("elm.edit.icon1.right", "elm.edit.icon.1")
         GENLIST_PART_ICON("elm.swallow.decorate.content",
            DESC_LRTB("elm.edit.icon1.right", "elm.edit.icon.2", "elm.padding.top", "elm.padding.bottom",
            )
         )
         PART_LIST_BOTTOMLINE
         GENLIST_PART_ICON("elm.edit.icon.2",
            DESC_R("elm.padding.right",
              align: 0 0.5;
              max: 48 48;
            )
            description { state: "decorate" 0.0;
               inherit: "default" 0.0;
               align: 1 0.5;
            }
            description { state: "flipped" 0.0;
               inherit: "default" 0.0;
               rel1.relative: 1 0;
               rel2.relative: 1 1;
               align: 0 0.5;
            }
            description { state: "decorate_flipped" 0.0;
               inherit: "flipped" 0.0;
            }
         )
         GENLIST_PART_FOCUS_NORMAL
         part { name: "block_events_on_animation";
            type: RECT;
            description { state: "default" 0.0;
              color: 0 0 0 0;
               rel1.to: "base";
               rel2.to: "base";
               visible: 0;
            }
            description { state: "block" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
      }
      programs {
         GENLIST_PROGRAM_DISABLED(
            target: "bg";
            target: "bg_reorder";
            target: "bottom_line";
         )
         GENLIST_PROGRAM_SELECT(
            target: "bg";
            target: "bg_reorder";
         )
         GENLIST_PROGRAM_BOTTOMLINE
         PROGRAM_LIST_SOUND
         GENLIST_PROGRAM_REORDER(
           target: "bg_clip";
           target: "bg_reorder_clip";
           target: "bottom_line_clip";
           target: "elm.padding.left";
           target: "elm.padding.right";
         )
         GENLIST_PROGRAMS_DECORATE_EFFECT(
            target: "elm.edit.icon.1";
            target: "elm.edit.icon.2";
         )
         program { name: "flip_flipped";
            action:  STATE_SET "flipped" 0.0;
            transition: DECELERATE 0.5;
            target: "elm.edit.icon.1";
            target: "elm.edit.icon.2";
            after: "disable_required";
         }
         program { name: "disable_required";
            script {
               if ((get_int(enabling) == 1) && (get_int(disabling) == 1)) {
                  set_int(enabling, 0);
                  emit("elm,state,flip,disabled", "elm");
               } else {
                  run_program(PROGRAM:"disable_events_block");
                  set_int(enabling, 0);
               }
            }
         }
         program { name: "disable_events_block";
            action:  STATE_SET "default" 0.0;
            target: "block_events_on_animation";
         }
         program { name: "flip_decorate_flipped";
            action:  STATE_SET "decorate_flipped" 0.0;
            transition: DECELERATE 0.5;
            target: "elm.edit.icon.1";
            target: "elm.edit.icon.2";
            after: "disable_required";
         }
         program { name: "unflip_default";
            action:  STATE_SET "default" 0.0;
            transition: DECELERATE 0.5;
            target: "elm.edit.icon.1";
            target: "elm.edit.icon.2";
            after: "disable_events_block";
         }
         program { name: "unflip_decorated";
            action:  STATE_SET "decorate" 0.0;
            transition: DECELERATE 0.5;
            target: "elm.edit.icon.1";
            target: "elm.edit.icon.2";
            after: "disable_events_block";
         }
         program { name: "flip_enabled_effect";
            signal:  "elm,state,flip,enabled";
            source:  "elm";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.edit.icon.1", st, 30, vl);
               set_state(PART:"block_events_on_animation", "block", 0.0);
               if (!strcmp(st, "decorate")) {
                  run_program(PROGRAM:"flip_decorate_flipped");
                } else {
                  run_program(PROGRAM:"flip_flipped");
                }
                set_int(enabling, 1);
            }
         }
         program { name: "flip_disabled_effect";
            signal:  "elm,state,flip,disabled";
            source:  "elm";
            script {
               new st[31];
               new Float:vl;
               set_int(disabling, 1);
               if (get_int(enabling) == 0) {
                  set_int(disabling, 0);
                  get_state(PART:"elm.edit.icon.1", st, 30, vl);
                  set_state(PART:"block_events_on_animation", "block", 0.0);
                  if (!strcmp(st, "decorate_flipped")) {
                     run_program(PROGRAM:"unflip_decorated");
                  } else {
                     run_program(PROGRAM:"unflip_default");
                  }
               }
            }
         }
         program { name: "flip_enabled";
            signal:  "elm,state,flip,enabled";
            source:  "elm";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"bg_reorder_clip", st, 30, vl);
               if (!strcmp(st, "reorder") || !strcmp(st, "reorder_flip")) {
                  set_state(PART:"bg_reorder_clip", "reorder_flip", 0.0);
                }
            }
         }
         program { name: "flip_disabled";
            signal:  "elm,state,flip,disabled";
            source:  "elm";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"bg_reorder_clip", st, 30, vl);
               if (!strcmp(st, "reorder") || !strcmp(st, "reorder_flip")) {
                  set_state(PART:"bg_reorder_clip", "reorder", 0.0);
               }
            }
         }
         GENLIST_PROGRAM_FOCUS_NORMAL
      }
   }
