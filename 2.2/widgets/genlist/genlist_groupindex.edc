/*
 * Copyright (c) 2010 Samsung Electronics Co., Ltd All Rights Reserved
 *
 * BSD 2-Clause License (http://www.opensource.org/licenses/bsd-license.php)
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *   1. Redistributions of source code must retain the above copyright notice, this
 *      list of conditions and the following disclaimer.
 *   2. Redistributions in binary form must reproduce the above copyright notice,
 *      this list of conditions and the following disclaimer in the documentation
 *      and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
/*
 * vim:ts=3:expandtab
*/

#define GROUPINDEX_PADDING_SIZE_LEFT 26
#define GROUPINDEX_PADDING_SIZE_RIGHT 26
#define GROUPINDEX_PADDING_SIZE_TOP 18
#define GROUPINDEX_PADDING_SIZE_BOTTOM 0
#define GROUPINDEX_TEXT_HEIGHT 46
#define GROUPINDEX_ICON_SIZE 64


#define GENLIST_PART_INDEX_BG \
      PART(RECT, "bg",  \
         description { state: "default" 0.0; \
            color: 0 0 0 0; \
         } \
         description { state: "pressed" 0.0; \
            color_class: "W021L1P"; \
         } \
         description { state: "disabled" 0.0; \
            inherit: "default" 0.0; \
         } \
      )

 // group index
#define GENLIST_DESCRIPTION_INDEX_LIST \
   description { state: "pressed" 0.0; \
      inherit: "default" 0.0; \
      color_class: "T027P"; \
   } \
   description { state: "disabled" 0.0; \
      inherit: "default" 0.0; \
      color_class: "T027D"; \
   }

 #define GENLIST_DESCRIPTION_INDEX_LIST_TB \
   description { state: "pressed" 0.0; \
      inherit: "default" 0.0; \
      text.style: "genlist_style_groupindex_text_press"; \
   } \
   description { state: "disabled" 0.0; \
      inherit: "default" 0.0; \
      text.style: "genlist_style_groupindex_text_dim"; \
   }

#define GENLIST_PART_INDEX_LINE(BOTTOM) \
      PART(RECT, "index_line", \
         description { state: "default" 0.0; \
            align: 0.5 1.0; \
            rel2 { \
              relative: 1 1; \
              to_y: BOTTOM; \
            } \
            color_class: "W021L2"; \
            min: 0 4; \
            max: -1 4; \
            fixed: 0 1; \
         } \
         description { state: "pressed" 0.0; \
            inherit: "default" 0.0; \
            color_class: "W021L2P"; \
         } \
      )

#define GENLIST_PART_INDEX_LINE_ICON(LEFT, BOTTOM) \
      PART(RECT, "index_line_icon", \
         DESC_LB(LEFT, BOTTOM, \
            color_class: "W021L2"; \
            min: 0 4; \
            max: -1 4; \
            fixed: 1 1; \
            rel2.to_x: "base"; \
         ) \
         description { state: "pressed" 0.0; \
            inherit: "default" 0.0; \
            color_class: "W021L2P"; \
        } \
      )

// Group Index
#define GENLIST_PARAM_INDEX_LIST \
   color_class: "T027"; \
   text { \
      align: 0 0.5; \
      min: 0 1; \
      text_class: "T027"; \
   }

// Group Index
#define GENLIST_PARAM_INDEX_LIST_TB \
   text { \
      align: 0 0.5; \
      min: 0 1; \
      style: "genlist_style_groupindex_text"; \
   }

#define SLIDING_PER_FPS 1
#define SLIDING_FPS     60.0
// 2.1.1
   group { GENLIST_NAME("groupindex/default")
      alias: "elm/genlist/item/grouptitle/default";
      alias: "elm/genlist/item_odd/grouptitle/default";
      alias: "elm/genlist/item_compress/grouptitle/default";
      alias: "elm/genlist/item_compress_odd/grouptitle/default";
      alias: "elm/genlist/tree/grouptitle/default";
      alias: "elm/genlist/tree_odd/grouptitle/default";
      alias: "elm/genlist/tree_compress/grouptitle/default";
      alias: "elm/genlist/tree_compress_odd/grouptitle/default";
      PROLOG_LIST

      data.item: "texts" "elm.text";

      script {
         public sliding_timer;
         public end_timer;
         public text_w;
         public org_text_w;

         public get_width() {
            new x, y, w, h;
            get_geometry(PART:"elm.text", x, y, w, h);
            set_int(org_text_w, w);

            set_state(PART:"elm.text", "sliding", 0.0);
            get_geometry(PART:"elm.text", x, y, w, h);
            set_int(text_w, w);
         }
         public ender(val) {
            if (get_int(sliding_timer)) cancel_timer(get_int(sliding_timer));
            set_int(sliding_timer, 0);
            if (get_int(end_timer)) cancel_timer(get_int(end_timer));
            set_int(end_timer, 0);
            set_state(PART:"elm.text", "default", 0.0);
         }
         public sliding(val) {
            if (val == 0) {
               get_width();
               if (get_int(text_w) < get_int(org_text_w)) {
                  ender(1);
                  return;
               }
            }
            custom_state(PART:"elm.text", "sliding", 0.0);
            set_state_val(PART:"elm.text", STATE_REL1_OFFSET, val, 0);
            set_state_val(PART:"elm.text", STATE_REL2_OFFSET, val, -1);
            set_state(PART:"elm.text", "custom", 0.0);
            val -= SLIDING_PER_FPS;

            if (val <= -get_int(text_w) + get_int(org_text_w)) {
               set_int(end_timer, timer(0.5, "ender", 1));
            } else
               set_int(sliding_timer, timer(1.0/SLIDING_FPS, "sliding", val));
         }
      }

      parts {
         GENLIST_PART_BASE
         GENLIST_PART_INDEX_BG
            PART(SWALLOW, "elm.swallow.pad",
            mouse_events: 0;
            DESC_FROM_L( ; )
         )
         PART(SPACER, "elm.padding.left",
            DESC_L("elm.swallow.pad" ,
               min: GROUPINDEX_PADDING_SIZE_LEFT 0;
               max: GROUPINDEX_PADDING_SIZE_LEFT -1;
            )
            DESC_LIST_PADDINGS
         )
         PART(SPACER, "elm.padding.right",
            DESC_FROM_R(
               min: GROUPINDEX_PADDING_SIZE_RIGHT 0;
               max: GROUPINDEX_PADDING_SIZE_RIGHT -1;
            )
            DESC_LIST_PADDINGS
         )
         PART(SPACER, "elm.padding.top",
            DESC_FROM_T(
               min: 0 GROUPINDEX_PADDING_SIZE_TOP;
               max: -1 GROUPINDEX_PADDING_SIZE_TOP;
            )
            DESC_LIST_PADDINGS
         )
         PART(SPACER, "elm.padding.bottom",
            DESC_FROM_B(
               min: 0 GROUPINDEX_PADDING_SIZE_BOTTOM;
               max: -1 GROUPINDEX_PADDING_SIZE_BOTTOM;
            )
            DESC_LIST_PADDINGS
         )

         PART(TEXTBLOCK, "elm.text",
            DESC_LRTB("elm.padding.left", "elm.padding.right", "elm.padding.top", "elm.padding.line.top",
               GENLIST_PARAM_INDEX_LIST_TB
               min: 0 GROUPINDEX_TEXT_HEIGHT;
               fixed: 1 0;
            )
            description { state: "sliding" 0.0;
               inherit: "default";
               text.min: 1 1;
               align: 0 0.5;
            }
            GENLIST_DESCRIPTION_INDEX_LIST_TB
         )

        GENLIST_PART_PADDING_B_SIZE("elm.padding.line.top", "index_line", 8);
        GENLIST_PART_INDEX_LINE("elm.padding.bottom")
        GENLIST_PART_FOCUS
      }
      program { name: "default";
         signal: "elm,state,default";
         source: "elm";
         script {
            ender(1);
            set_state(PART:"elm.text", "default", 0.0);
            set_state(PART:"index_line", "default", 0.0);
            set_state(PART:"bg", "default", 0.0);
         }
      }
      programs {
         GENLIST_PROGRAM_DISABLED( target: "elm.text"; target: "index_line"; )
         program { name: "pressed";
            signal: "elm,state,selected";
            source: "elm";
            script {
               if (!get_int(sliding_timer) && !get_int(end_timer)) {
                  set_state(PART:"elm.text", "pressed", 0.0);
                  set_state(PART:"index_line", "pressed", 0.0);
                  set_state(PART:"bg", "pressed", 0.0);
               }
            }
         }
         program { name: "unselected";
            signal: "elm,state,unselected";
            source: "elm";
            script {
               if (!get_int(sliding_timer) && !get_int(end_timer)) {
                  set_state(PART:"elm.text", "default", 0.0);
                  set_state(PART:"index_line", "default", 0.0);
                  set_state(PART:"bg", "default", 0.0);
               }
            }
         }
         program { name: "slide_start";
            signal: "elm,state,slide,start";
            source: "";
            script {
               set_state(PART:"index_line", "default", 0.0);
               set_state(PART:"bg", "default", 0.0);
               if (!get_int(sliding_timer) && !get_int(end_timer)) {
                  set_int(sliding_timer, timer(0.01, "sliding", 0));
               }
            }
         }
         program { name: "slide_stop";
            signal: "elm,state,slide,stop";
            source: "elm";
            script {
               if (get_int(sliding_timer) && get_int(end_timer)) {
                  ender(0);
               }
            }
         }
         GENLIST_PROGRAM_FOCUS
      }
   }

//2.1.3
   group { GENLIST_NAME("groupindex.icon/default")
      alias: "elm/genlist/item/grouptitle.icon/default";
      alias: "elm/genlist/item_odd/grouptitle.icon/default";
      alias: "elm/genlist/item_compress/grouptitle.icon/default";
      alias: "elm/genlist/item_compress_odd/grouptitle.icon/default";
      alias: "elm/genlist/tree/grouptitle.icon/default";
      alias: "elm/genlist/tree_odd/grouptitle.icon/default";
      alias: "elm/genlist/tree_compress/grouptitle.icon/default";
      alias: "elm/genlist/tree_compress_odd/grouptitle.icon/default";
      PROLOG_LIST

      data.item: "texts" "elm.text";
      data.item: "contents" "elm.icon";

      parts {
         GENLIST_PART_BASE
         GENLIST_PART_INDEX_BG
         PART_LIST_PADDINGS(
            GROUPINDEX_PADDING_SIZE_LEFT, GROUPINDEX_PADDING_SIZE_RIGHT,
            18, 0
         )
         GENLIST_PART_ICON("elm.icon",
            DESC_LTB("elm.padding.left",
               "elm.padding.top", "elm.padding.bottom",
               min: GROUPINDEX_ICON_SIZE GROUPINDEX_ICON_SIZE;
               max: GROUPINDEX_ICON_SIZE GROUPINDEX_ICON_SIZE;
               fixed: 1 0;
            )
         )
         GENLIST_PART_PADDING_L_SIZE("elm.padding.icon.right", "elm.icon", 16)
         PART(TEXT, "elm.text",
            DESC_LRTB("elm.padding.icon.right", "elm.padding.right", "elm.padding.top", "elm.padding.line.top",
               GENLIST_PARAM_INDEX_LIST
               min: 0 GROUPINDEX_TEXT_HEIGHT;
            )
            GENLIST_DESCRIPTION_INDEX_LIST
         )
         GENLIST_PART_PADDING_B_SIZE("elm.padding.line.top", "elm.padding.bottom", 8);
         GENLIST_PART_INDEX_LINE_ICON("elm.padding.icon.right", "elm.padding.bottom")
         GENLIST_PART_FOCUS
      }
      programs {
         GENLIST_PROGRAM_DISABLED( target: "elm.text"; target: "index_line_icon"; )
         GENLIST_PROGRAM_SELECT( target: "elm.text"; target: "index_line_icon"; target: "bg"; )
         GENLIST_PROGRAM_FOCUS
      }
   }
